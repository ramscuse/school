{"_id":"react-chessboard","_rev":"67-b17fc4600f08797cbd30bd88c6cb3516","name":"react-chessboard","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","dist-tags":{"latest":"4.3.1","alpha":"2.0.6"},"versions":{"0.0.1":{"name":"react-chessboard","version":"0.0.1","description":"Chess board React component","author":{"name":"Misha Moroshko","email":"michael.moroshko@gmail.com"},"main":"dist/Chessboard.js","repository":{"type":"git","url":"git+ssh://git@github.com/moroshko/react-chessboard.git"},"homepage":"https://github.com/moroshko/react-chessboard","bugs":{"url":"https://github.com/moroshko/react-chessboard/issues"},"scripts":{"start":"babel-node server","lint":"eslint src/Chessboard.js examples/src","test":"mocha src/tests/index.js --opts mocha.opts","dist":"babel src/Chessboard.js -o dist/Chessboard.js","examples-dist":"webpack --config webpack.dev.config.js","build":"npm run lint && npm test && npm run dist && npm run examples-dist"},"devDependencies":{"babel":"^5.5.5","babel-core":"^5.5.5","babel-eslint":"^3.1.14","babel-loader":"^5.1.4","chai":"^3.0.0","css-loader":"^0.14.4","eslint":"^0.22.1","eslint-loader":"^0.12.0","eslint-plugin-react":"^2.5.0","extract-text-webpack-plugin":"^0.8.1","file-loader":"^0.8.4","jsdom":">=3.1.2 <4.0.0","less":"^2.5.1","less-loader":"^2.2.0","mocha":"^2.2.5","node-libs-browser":"^0.5.2","raw-loader":"^0.5.1","react":"^0.13.3","react-a11y":"^0.1.1","react-hot-loader":"^1.2.7","style-loader":"^0.12.3","svgo":"^0.5.2","svgo-loader":"^1.1.0","url-loader":"^0.5.6","webpack":"^1.9.10","webpack-dev-server":"^1.9.0"},"peerDependencies":{"react":"^0.13.3"},"keywords":["chessboard","chess board","react chessboard","react chess board","react-component"],"license":"MIT","gitHead":"c136081a52afbcde982e5d014bb0cc0ce6b5548e","_id":"react-chessboard@0.0.1","_shasum":"802f461251aeff448e2702d5cb16277d5787440d","_from":".","_npmVersion":"2.11.1","_nodeVersion":"0.10.33","_npmUser":{"name":"moroshko","email":"michael.moroshko@gmail.com"},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"}],"dist":{"shasum":"802f461251aeff448e2702d5cb16277d5787440d","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.1.tgz","integrity":"sha512-cKUBKrdGGJpXpR/0mT29+ypsDNVBdoSt/eTlq9dY7tMeYtqFEnLTMPtscz2LF13AYRuCDVdKk7eUIPFtAWHZQA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIE/WzH5oZUmYPO4bML3+OUP8J5NppTJ3az4b8KKGwv0qAiEAi9R5oJ8JPhz/L32F/re+Q42RYaFCXvtHzWjQl+aKa10="}]},"directories":{}},"0.0.2":{"name":"react-chessboard","version":"0.0.2","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"A modern chessboard for React. Inspired and adapted from the unmaintained Chessboard.jsx","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","rollup":"^2.56.3"},"gitHead":"c270e498e8a2b04370683f220796a776643b5d9c","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.2","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-nQF8Isl0jew6+bP1VX0AvdR1t7ATJX3uIrWiuxeMGfaKQxv51FRIqPHW8OZhJVoaTQL6Ux8cZMEnDdckKkjj+A==","shasum":"dd62db0fab88cf70459b21248d85f4ca2ce8e276","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.2.tgz","fileCount":7,"unpackedSize":1966174,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJoJpCRA9TVsSAnZWagAAa+AP/iPurQhuIGyK9rq7jxVp\n1twWfEP+1Wlc6FReHmM/bghs01oO/dO0csWzooexvd/YrDSE1V9KUDZBhO3u\nVZnNjXiW075GYqmc+tmywWnTpfdV5CI3dVz0yycMlXosx0UcsLir9tzUL6Ly\nKCqtF3XaC6thFHrKLzllPSiW19kke7iwcT2/cXEDQne8zH1NL8lbYcv8xiDJ\nikkpkpPs6V3PfnP4duQYkIHoruD1IZbpSJmXEE0p88dTa+EGUUfaZBCGLIMI\nnslqugMpIixhzZxIFu1dgjNC9j3nZI3p431NXr47TZvqjJ+MLmRCtJkLE8AH\n6S/nXCGrOiLw3U+VFgkH66Tyg9UARR/ZpsStWXNBeCvobJx30t+z6LyhnfZs\n+geC3hvlVzQzjxUf0STP4v+kyJJLXaieHb7VEKIFFDt8DNo9KjKs5J6KttYX\nY4/OUCJdautFoopFaNWQi9S+ehF94jk2v/wxEvCukr7yz3sg6uJkSC9ybpGi\nm2gbQkzBBzBlbn+MLoTAX2sBKyZnA5UEpOw2UxN81+7/COexjpIwsWpoqr8s\nO5jNKySm8iw4wPS+tK0hKZGLQxBq7sLOGVSiJUD09Ai8952ZVyqKTILnkLC0\nuM15JDiqtwkYdOHAET28sbG8vl7frdwy3RDY6N2Hqmd9L32a+5jYO4BGDzBF\np/Sh\r\n=Lfs/\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAJzRurOyGNiM8xKA3iCiMzczGtJ+b1uIlAv3JG4NVTIAiAzVZKSV91qX6iuW6/s3yujL6r8EbUljGkxE3EDoIl+/Q=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.2_1629913705164_0.5814433964919468"},"_hasShrinkwrap":false},"0.0.3":{"name":"react-chessboard","version":"0.0.3","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"A modern chessboard for React. Inspired and adapted from the unmaintained Chessboard.jsx","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","rollup":"^2.56.3"},"gitHead":"c5b73c3cd670588d89946b6742c87c967427b240","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.3","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-pTrdfHeSFqqYs5ru6810SwN8Cp0tHJZjekln2k37ah7n36oRSyt4ON/fBk38lTe/PUkoywTVrDKw0vwx1Ly1tQ==","shasum":"96d643617617ae953c42404ba9da1ae398903f57","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.3.tgz","fileCount":5,"unpackedSize":648241,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJohbCRA9TVsSAnZWagAAzoIP/3mgRh7yLTRBCyFq1W9y\nUEW60+kC2NUqnhcaiB8d28hkRBAgFgGV0qEwcYNBpvl2Rq0KnwphoieAfwJz\nGYR6WdNO0akIU/s8bjT9BCifzMaGcpEncU5bQXI0NWVYdtAKfNupvoiY+Jnu\n+LkzVZ8IQoA3iBEA+NNckhGepiRVLDg95rXEANVhgGAx3C6VEq15rwhR5c9/\noeEvL8+ZV/GocnEJYw5Uzn/dv2dal9M6hwZD2S20G2kp+w+M7O87CD7LCFlW\nLyCP5g9Ma7mgeHtnEFdCJt9I09MPVz7FA4GfoQ3eojC6KRVd0w2ydnVJM3uX\nfkR5/UN7xRf6H/MbDP0XVLPjka+BeUQ+MpLK4OW13itp5q+n7yoV2gT+bbKk\nSd10Zl5961Xb6BRYiw8thUCrrp2JcJOuguk/4/2EIWQ/x3JT8gZYciRvb2o3\n9wQN6Jzn3ByK2OoowNizYPFSTxH3emCsTP053ov1BfO/pVpJOZ4vjTwYRs8P\nS/wzOS3rn7UmcG/dcrAI+VP97APEK4DOYafRChF/b9fCAON/KpsDXAKOn+CY\nJzryiVG/CXRj6Si4G1zfc2ydz0ywN6IVUBpLrn5iYqQnAEv6fTkKVaT2YlDd\ncMMHxUZdaH3L691Ony4hLr+/cdSJOjHnjakmw5yahE0ofUh3iDWRFksVIT5Q\nyc8b\r\n=+a/B\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCID/sRJ9/MtOeZj8trMfLPOtGXuaohkYHz8kEO8UnHJRMAiB2563eMcmHdS9enXEdoe1pq3Ox+dLZsT2yeIdg7gQp0g=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.3_1629915227583_0.2974385685263763"},"_hasShrinkwrap":false},"0.0.4":{"name":"react-chessboard","version":"0.0.4","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","rollup":"^2.56.3"},"gitHead":"930d32dc22ed493fb5e1b62b6be8447e2786ac4b","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.4","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-bI6i7Tbl+tPC2AJJGqddx0bpzIUcVmRHrAQO2ZdjTdOpzm1QnUNi8nQ4U7pN+8/S7+VcKKjoiN2TT8qmbI7b0A==","shasum":"ce9e622d2a35e068b2f3ec01c9f8a679cb798ea1","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.4.tgz","fileCount":5,"unpackedSize":667412,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhMRUlCRA9TVsSAnZWagAAP70P/1FWM15sFeJJco5JUTlC\nd76vWduHM6e8rZJMRpCf/tH/6t0AfoymYiTk4/W3ntAOuSVM48/96zIErTgy\n2l7VWHesPSK1gWm1TiqDu+J/t0/CGf9mZmVc8G7iB31J2WR/I8Jtx47QWaBt\nwQ4/zIVGDeb3c6+o4EzQ4o4sAg0qlHJHEv6fqq0NyS3fwsn6wGIVuWmh3ked\nUyiS/6wrvnwY0LHV8lkE0LYqh6wwsG4YhZTsf5Sb0guOJnREFkKBYxkoyAQ7\nOPQiiO+MxnFT/tSHn3CyiYrtthG+/ilFIDLkY7828f+3ksq4JzU0/4mkyrpd\nlbvb1n27QYeCphrRn/68jdFpJflv8URaNlencp4k0gqg5JccGwLFGk/Hpb9Y\nru2GNwt6kEY8xneS0TWrapg21e5zJ8SxpOFquAHsBP0lW1MMASNc5Lmj6MyX\nrv4lsf0v1jbBd5kHZ828bJkh6xXP+Ad4LxyDvNgF4qvEa1fG0KaWUMhhlPpp\n/KNXPIqgD5olCRu3X+axsAuKaO1RdvTiSCgwMOulUNcXYGzMXjCKoaZXuXZ3\nhdG9a/oNVasUTOKXOhA2WVDhXp7PKyBxQoEDdB1L3ahUNLLeCPVxieyXcQ7T\nmj12yl4m2Ejj49VscGA0SfbdS/z0RYtijP2n1V9mwK/5l4HEfbhvrfpwfXAk\nEeyA\r\n=ptxy\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAYD1XWvWb/LWs0OFtHEBc/tYIPw4FnOoiM4f2W5upqnAiAakCe3Ea3x9D9qgA7Lc12frKEa2MhHHyIPZQyCZRjHNw=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.4_1630606629764_0.1911745400977367"},"_hasShrinkwrap":false},"0.0.5":{"name":"react-chessboard","version":"0.0.5","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"fc915e25061187a83f82f7b492da15db7a9d3f51","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.5","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-INr3IMWcyS/YyucCngJLve7pHiLcSNtLQjlziPi95vGHUZUjLmI5TF5EKo+8zah2gZBdZWozeXWFm+4s/2M5uw==","shasum":"c652f949dabdc2fcad6a8a7755d5f616b2b72c71","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.5.tgz","fileCount":6,"unpackedSize":672848,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDd34/1sSAhIHxSYEeGEm/JapKrxjERfuFQIacQmpLXcQIgJeNDgfP4Ls1d2dIjZH8fW1VPbDWPchiFDupUj3HQiH0="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.5_1632153451065_0.5046425057677486"},"_hasShrinkwrap":false},"0.0.6":{"name":"react-chessboard","version":"0.0.6","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"79e4b18f0383846900e510b3d13587bae7c7632c","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.6","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-NfK5PsM/jQadEcAb2TDlL47A9YOuq3epnoYRl3INnn3WTDZJq96sd83AR1hpXT2v83ep919Hyqtip/65NmcR2A==","shasum":"63bf1186b97cd53d023dfdb40f8de402933b435d","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.6.tgz","fileCount":6,"unpackedSize":683437,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC8aIm8ytjz7Ztwe7W0MHmo5+SZL1k5Sb7M5HtKGLS53gIhAJH3oggWaR7gYja2mxaBSsoKiheLYe+BsHvU3hFjuqaG"}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.6_1632505035693_0.9163245674864939"},"_hasShrinkwrap":false},"0.0.7":{"name":"react-chessboard","version":"0.0.7","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"3e296b9e6520c875140427729b5766f46215af40","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.7","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-0putQ/PTK5mTzIKGVgkFRsW2qhQ+d9ro8cySdlSbxqYl+E03dnNMu1G8b0x3U8oGM31pG8S2HRAMtZb2A4qxvw==","shasum":"4c3078442c27ca01190ac3ad429d186f7ed7f39e","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.7.tgz","fileCount":6,"unpackedSize":684902,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDVVfDwkjL2MCwBoZj+u5AXB66G/IvwO7Tuyj44vaeXvAiEA1XHDC9OD77gcROG/Q83mPhiOt4tcnsQaELZTaDYenhk="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.7_1632577022347_0.04285399469967932"},"_hasShrinkwrap":false},"0.0.8":{"name":"react-chessboard","version":"0.0.8","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"870606a2e6fcb7c8adc8dd9104f24314a7db82dd","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.8","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-eWym/rA5AbxotHrSGWzYtAqBnkTfxSC1MFrD9gAT4co+h+LLWEPGllfdlFzQZqK9Bh3pA+wsFyhWOZt8WV0N6Q==","shasum":"f2005143ce2c4532aeb431a0e25753504ca3c5d7","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.8.tgz","fileCount":6,"unpackedSize":685254,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICWDGiNmKCqvv3F76OsKXexZNWrUW0bnma0//VQQ0UF3AiAnfYa9x2L+NHiY9oamQX5AQF6EtMzp/wW7M/lYaDx/ZA=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.8_1633172509074_0.2915748319715279"},"_hasShrinkwrap":false},"0.0.9":{"name":"react-chessboard","version":"0.0.9","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"e765f6700a7e919c7aee26bc4bdf18a710ded6d3","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.9","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-pDEIxx027dOQmhPO62QQbIsrXy3ivtl+QuAnbYwPRIN2Ktes2iW+koDG/SaT7/9mbUznaNCfJlhxI1ocx1Yn4A==","shasum":"198404aecca5ce783553166ebacfa357f38fec7e","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.9.tgz","fileCount":6,"unpackedSize":685254,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDz4FVRJtLiPA78KX5MKcm/w8zjZPLnEs5SdoaPRmDq2AiEAyGDuXtGhv1QQ7bXIT3WPqS3idFYNnwWZfWH7gojIOlI="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.9_1633185093313_0.8336769986469863"},"_hasShrinkwrap":false},"0.0.10":{"name":"react-chessboard","version":"0.0.10","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"3e961b6b6d8dcfc1170017b983480072cc2a1f71","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.10","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-qoPnrAZiFIBWlweF4n1V2VI2Eoi9l+1sELyxtwTwytBRxXco1tImEvWN5x5FiwFdqvrcrpMTuaWT8HDmVcMQgQ==","shasum":"5c9c8110e13defaac7ddc811e1315031a26f276b","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.10.tgz","fileCount":6,"unpackedSize":684829,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAF/K9EqsyR328itSiGBPYMAoHiMGKfKtHjG/8FBtEbkAiB0O467ZN8VCmpL7OGW2wWqUt14R2yyF4qYzBrUX6t32w=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.10_1633186476451_0.5947181978307925"},"_hasShrinkwrap":false},"0.0.11":{"name":"react-chessboard","version":"0.0.11","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"a36a2ff2cd353def7ee24344df71cb3aed144f73","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.11","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-ttFLy0FtLJ+ca93/jPQsUZVd8yRdpeGHbqLdShBaO0ch+XfQGKeUmYudMHaG4WX87+ZEd1f995Auy2nqqzAtMw==","shasum":"604360e27611f90d70989ca612c3d0a6fd473eca","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.11.tgz","fileCount":6,"unpackedSize":684965,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC5pJZr5hgisFuN0tgV3zpUkkbcOue5BT8cl9TIyH72pAIgAOwQGx8TNyuQEbE1Cbgv6XwoJuEVvPweH+zqzMomR0c="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.11_1633979086674_0.6438390515493799"},"_hasShrinkwrap":false},"0.0.12":{"name":"react-chessboard","version":"0.0.12","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"b5cadd634cb77020148dcd4afd4bf3657a07815a","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.12","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-L3X8c2XtQE2Mz1E+8F+YcunSKmkOxgTIYrVbocqiRMuGKr7oMOjISNKk0KGujqCzQH1oe1v8KAkyjpHin5A76Q==","shasum":"5fdf969933e81b04db810b439071086159e72658","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.12.tgz","fileCount":6,"unpackedSize":686131,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHtrYfGXhz4dsKZ9cNxCs6/3XUHh6zunxyPm9Qy4rqaNAiEA3u9W0327CBBVA43Ol4pKu/DWpnAP+Mr7L+RcLUv05qE="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.12_1633981302230_0.19399266787905578"},"_hasShrinkwrap":false},"0.0.13":{"name":"react-chessboard","version":"0.0.13","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"5dfce0aca97205f2f98122701c1f853a57077724","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.13","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-cthP4Z9d6Oj/jGvicDSd97uWLR9g7HLJdT6lmbKuTCc4/1lkjBsHWttAMsCV+gZg1pHeaPyuPodPCnA6TTahpA==","shasum":"ac65365d1d19e9ff5a45b819863e7b37c861a4cf","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.13.tgz","fileCount":6,"unpackedSize":686131,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICBirdoh0YEnVDWdWtPYYxRngWr2FcD5BAzqMEm+T1DzAiBFEXkopBNce5ywDA6+yo7HUT1obv0dFU667WOXkIZFmg=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.13_1634314701675_0.44190053129943774"},"_hasShrinkwrap":false},"0.0.14":{"name":"react-chessboard","version":"0.0.14","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"c6009a0c4b9f546b561540b122f7ba4ad9fd360c","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.14","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-g71vzoY2RKLlifva2ST9+Y4S1GIfrOke7kyg2DHQ6qjirNKZhF9uV2Qx5MTCbSvlgcxXrkv+8E8hJgSYJdpwtQ==","shasum":"70fde5a56dac290d43669f248470bc790b9d339a","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.14.tgz","fileCount":6,"unpackedSize":685779,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDyE3lvdCb2tdsYB/WwzqEMq7L9E/ukDfZkUEFmV42chAIgQeqAN9gAEhbJrPYB441CrG3MmGaAFCSuReiwO1jQbfU="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.14_1634329088354_0.23036830732928681"},"_hasShrinkwrap":false},"0.0.15":{"name":"react-chessboard","version":"0.0.15","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"5624c1b9afd71bb2f6f9c4dcd8528d3ce8086703","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.15","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-+Kb28HRdANQGGbcgarNxDAWKR3+b8ugA4i43TzuGWXUj2eox0ejQPgpx60h3x5cQ/oax4MoD2Ri4ZBlkwGQY6A==","shasum":"9b7ff4cebc0a29096754e7e41e13acffbb9ac256","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.15.tgz","fileCount":6,"unpackedSize":685615,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGk8qZj05ePB86lpcGjs9hX5er7JibY+UZaJ47d1QXFuAiEAySPTjH7eCIiHJQXpvcNRLlXfhu1ICOS79mfcbD3qa50="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.15_1634397010727_0.9766050065901573"},"_hasShrinkwrap":false},"0.0.16":{"name":"react-chessboard","version":"0.0.16","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"a896ef85a8335eb9ebb81d375627f1bb3f6b8951","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.16","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-Clvm1jLYILLMzIuFBfRgdXgMgVB/4DvPaswztB3uUDPRrLG553LGFdyHuehirle+lRZe8L0GUIT42XKdVhZhrw==","shasum":"401d91b0d42395ea4e556a812239c949db669ffc","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.16.tgz","fileCount":6,"unpackedSize":687275,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCHXHbfVYMsCW/v1Uz62eclLRhvFqHogovAOMFsPx1nlQIgDDzpPvJpXjPkuw8xgHTr1LVLYbCgHlRXZVSxqzg3VvI="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.16_1635078036591_0.7870198369339707"},"_hasShrinkwrap":false},"0.0.17":{"name":"react-chessboard","version":"0.0.17","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"563cd5ecdca897a3254199eeea099ee9038e619a","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.17","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-CDdkqUIVlpg0Z2Za7IJ+0/G6hTEKVD2B6Oh5emZNmIQPNlFaRHRzwC4Mgfqp5+1Oe1WkXb8//5P/57VKRLevow==","shasum":"f40a93091a60e1efaad4dfe02aaa1383ac7d6c4e","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.17.tgz","fileCount":6,"unpackedSize":687275,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhm6KxCRA9TVsSAnZWagAAzMQP/0qBIlkJQ6ZNDmc+LLbD\n2VK8OUjt6YkJTDJM9BdfweG7kS7vo6F7MkAZQcfQPn+4s9zuN/rAL0cVHKMP\nstGHJkGbxMixXdDRG2wZS3oD5hnB75vL/LKU+lqfIV/22zrgSrleCEFaeVvt\nYp87HzHtc47B8lU+hMj1ypQX8yVdHj4g3soBW+UyGIuDWbDHvQt4jjnduTdo\nk7n4PnK8t8N/LPz9Japc9if9NsH0LYSnkQlQcplt3xTgl+O3EJS34ZGPQpSh\nZOoBiUn4a6N38CVxYEkp3OU+amGaN9bwCLd7CTadjWA8oUBppztIDNtLTQ7A\npZi7my3aCL+loQjVf7PT1gB4DB+WM5vrvLM0bVdPwn3DZdJ9Js9BuPRDhrps\nLPRp/YgJdqtCjg/6GF4ktMQutIeJ7ZqcytxZyDcylNiCMwG1k8Ezv8e4IbP9\nthSBgTGwChbeKBWRl65dKLOAE6/8fN1vUB+CZ0FO7O2ONguOgLQN0fB37PXR\nxCtQ85biXIB0lmYDLTUz/vj6Vlozxvi5s4NObmMyhMTSFDeBIOvMLQkU/OS7\neqm1iJlJTS00wEpmNFKV7GZdZRdabkPM4XPEwOTUv3WHJGm6olem5G/RfFUP\njuWtdTB83kfR4bM4MMaxUCQtBdZLwxXTRFIY+jhynYEbLh9HZIzRehuK/wb5\nI9zl\r\n=RRBQ\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC5s+UvkZm7LXeSU66JsJY8LRjHQziUMb4HK7dbvZft5gIhAMhM2MLn5eok9kuF6J8Lo72aLKhEnexhIZfiecDPBDri"}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.17_1637589681534_0.26558475373423795"},"_hasShrinkwrap":false},"0.0.18":{"name":"react-chessboard","version":"0.0.18","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"f1671777ce5ca5bd91cc008a968ef1018aedec79","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@0.0.18","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-GW4ZvhNTjRSa5ExNBnAeEPiZ1CEWrlJCo4+DhwkCCeZx8qwCbpbM65oJw83pak9BOwmkmypsvTUPu+WLE2z28A==","shasum":"d82b0e0db310c26074ae9adbc65bbcdead23c90a","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-0.0.18.tgz","fileCount":6,"unpackedSize":687377,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhm+AVCRA9TVsSAnZWagAA8NsP/0G1KMLZ8MI/9R+gKpEd\nPsx3CORHA9vS9JETMq5Rdr0gxuM0yk/J2xH++SkteT+XCSrRUnV/W0EUVTPX\nw0xtU24ccHKwotZolLt1U1o9AYIplLuSicpm8kg4RgMck5ObfaRi++JlxPDx\n9to4gWNXuqXOByVqqlHobYqOWJhqLnz3sGwySB5U1nnEYR0xcd62pcPdKeyL\nN97lhPvPuMfJPsMFb5z2SnQ2JgfP3OWqr1NcZoLfC8G+7CMsvq+FS29etRzV\nC0RLtpRzX5PElmJRjF5q2JhkFuwGjnYYYDyrlDwPSdV1A+vVqtcY2JUxSb/7\ngxt0vdeALgo9ICblLSz8yHji645l01F9htemwQWpgWO7BBLcA/zRoF6XG40e\nNkLsopzD9nTiz9slCOmFj1ipaOV/VPepSmg6eyTckN6GRKNoKusPDzhmeOtZ\nK02sfQGvs5J+FRLCMSzv0Znef+PoABzTgO6zSeuGCB/wFsE9XJQV9N2YWqlQ\ngBZxSz1Ym4D9wGEHHwnFdlZVZ96V4bQfR0LoJ7no2asgqfWCQjOdQc/vdIJD\nuZHoGX5An826cpQgS5t9F7C6yQFUQZZuT6YPqv6qllQxaHCDgi/drqKBY+E7\njb2x637Q4Clrh8yhUcRFZFaavbz5j1uDAUAiPeasHrCbVH4xHp61FrrnGS2y\n8Snm\r\n=WUlF\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCrq8Q4vPS/zwRch8sJw+l8O7vIWgiiQy8vLBZqDnallQIgSZzGpLw0WobUPLs/XVaUSe0f+jGbPrxPWuOTPRIg7Bs="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_0.0.18_1637605397408_0.4125098176480577"},"_hasShrinkwrap":false},"1.0.0":{"name":"react-chessboard","version":"1.0.0","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"fd80d52650ddf1441de3e82d6ffece7235e6ae08","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.0.0","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-tTfouSdY7GRgWqFXF8djZyyFgIWM8Gx31b5H9GkT6XG0AiS70nVjk7Vl66SRqTVFY3hxZ+8BmEdTvblNYdVvhQ==","shasum":"f4306c440697bc8d808f0090187847fe6e80a97b","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.0.0.tgz","fileCount":6,"unpackedSize":685960,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhm+9HCRA9TVsSAnZWagAAAtsP/36lREnvzot+UMOrbzYZ\nX2MTHgB3ysDtT9gvY9I4OngH4ueaJqKMz+QMv55N7cWmtNY6zdiuGPK/e486\nNJ6aZs9EaX/O4cScoitYOFwaSF3Em/pYZ7qx6k4whEKJE9j16IWvwNbN2rSu\n37MGnUbSZ4pJLgH1rHj0lVjJ/pC4f9dYT+ekKYeqNO60IofPJ7Q5vQ/NN/BF\n5Chk2ChHb3trr07mFYKkUcVK2lnxIrFLL1sFjcCLmqbChlHZ2ouoZNBRs6TZ\n/Bf3m5bL7ayY42H9PHb3JaxeHCoS1OQdFIRakvE6UlDzJ5vqJ+8bmghFfkI/\nMm6SzNy0jBnsw0W63+l6NYx/ffOCsc8LKltDGfUEvHQTuzlqNGNyF/O6FxoK\nKzmFlDhllZC6iJqf4MtpLf3iE5dBVbK8uXwFLL9t2Xny3qAojYpYz1xTuKw7\n686AK4/sS2dWCWzPGE8in8Jv9W40dmkoJyW7PGWyXSyfbE2iC5h4kGapLJAW\nGlR3EElneVJRmCXRYFi069AylGtgnm/nuDdojy96muUUZ3H1/EqxZ54LyATH\nSwxBpoqsfOB7qzK3VfD2vnRwqOLQc4S7ec8XYW23W8kGfsh7JzrhB4QItQq0\ntKRVrxlhwGuEzGCOJgpmv5tI/AFD9kJUQ+nT/MwWxLZ9vrC1w+CdPx35eMn6\ntuG3\r\n=4feW\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEwqpULBzPgNXg+NSLobtwF6f2WUCg2cgB/ASOMgkufPAiASlIK0gTK7UZhjECajxXZKl4i/7lmvMNMyHLdOdfbObQ=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.0.0_1637609287778_0.6042906260317795"},"_hasShrinkwrap":false},"1.0.1":{"name":"react-chessboard","version":"1.0.1","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"62f40b699b6f32278578e0afef518bc781d0d810","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.0.1","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-nmGUaZ7GsW5kvwO3qq9lDcigXAmC2vnyDRu9063jrtBnzLr8MW6zr2/vm44Cx6Qj13arTfEW26l1eZ40dbSnvg==","shasum":"2fbe1c1f73c044a76ff9bbc654a4f14b1a4955f4","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.0.1.tgz","fileCount":6,"unpackedSize":685960,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhxzS2CRA9TVsSAnZWagAAyqkP/1F8v6DqAGnMRKSNB9tc\nTcwPjbR2OVQg6HgMu19Bw2UzM60W2B5uj3Q5mV4ZoEPFLp0VDPisSU4ncM9/\nmZMsD/TuMDofdXtGfrrUukHaPJEzXepmj7CUb4ntPwS2FlXYjkJvdBfhTVdI\ncSavlqh7v78N5yvYGfj/nYuO4CG/rFOdLAl1VKihzUTHct3Nt0U33Obm99Qr\nUVeeWW8iZgEWrGWQ1itBDZLrFizij27W0KggomjtETIiQ4qlIwrGBh3R3sTM\nutpyxVBL21FGFt/2gsGzgLwzXGMYWQ2xAC63ivSp9JUulpYvAWEuyX5wLlIK\nIVzYyA1cyd+Ik/RUKETgRbkeIF69VoNfKAEUpIMDsN2Z93OmZy9ssVXZf7ma\nqfCnaCDlK/KMGKaJZbgcIlyjlHLAjCkm76msPvxcMQR8MApj8mm1HJ2xL7jr\ngRvV6IciBT7w8cvYRjz/Z4QEOs8tQlf05Yms3ySMCgq60Z7qIbpD/GhrGAMJ\nONA6l99UjVJzDwjifmXYXOGw5WpDRqbbVkCT1edjo5S1L32rQK5IWO9Qrucq\n7KSmwlZ3Q3ndh6335rKg1e5sFw7NsJJId77kjbvs6epZ/nxL7g1vzKWfKFU1\nTKJljujtEv7VRl18JP/OezQHa2jsfk1Ah5klsMTuXdOYk0Y3I7+iLAi06cl1\nSbuX\r\n=BFaI\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICu/CExKQA3GuJaNxgrQ6wEgjo0jF4s6TZRFH1R8vxSOAiBFkHOPWhLtjBtzV/bdVI0oj0HxXK8TXyjeewh30jfo5A=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.0.1_1640445110325_0.8457836349832597"},"_hasShrinkwrap":false},"1.0.2":{"name":"react-chessboard","version":"1.0.2","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"gitHead":"da73c1756771f220dd60372741478b20b0819515","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.0.2","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-3xAyxxRefSjlUzKw4YlJTJ0WN4ZxIHs6+htdfLXR0EetchnFnYdQ7ELDRZJXrQNxj6oU/HK7Uffe843cs+tzXA==","shasum":"e9f53a31c3bfa5f4fd32b210c9289342b1605bfc","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.0.2.tgz","fileCount":6,"unpackedSize":686113,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhy12UCRA9TVsSAnZWagAAQGcP/2s3+qp9vq5188Jr2izJ\nQVG0pbwft7W7A2bUW/yFGOoesk23+cJkieNfxw056BjFQcUWki3p//ukrFLg\nU6wSxVHVPCm+aVxqIySXnGKs7UbW+HXVNq8FQu3RW4ByolA/yGZfh8wt5PyG\nFPbIw1DRSoTUoNhGGZB2y7HxMJmRjUsB/yMOPheduwG6fGe3Vzyj6GQDogXh\nhU7W4E9aqeGdUCkpz/nkoZDJgsKSdsSYF/bmtQC+8VGvl/IkHkhHLa3dZpbu\nCE2uaIqs46V0+21Hosp3K+bygDLB2Ue/bHLy4BvfelIpHIk7t3x8FnZCjaPw\n0m8MX3i71QOEhPryOgs/Bzh7fTUXCL52ax/AYZqokydyJWihJkkHpuJTnF7k\nbf754RnRRx3LB/cno/UYyXnDxAh4AZe1shdpQP1bDLl0EDXl3EBB54+QZQPm\nAuWigFfG05iNooNNCX8073JrNuYuBtcyzluXIVkdcnu+0oVQkZEHTjfReIJ4\nEvKx7uY/YXcFaDEN5Y8XTjzknjw0HImXaGHwCLorz3onlQ4fqAQaiOyKe8Fb\nqvRzRmHsEJuCm3bulKvbQne064pVmJLWthg5TLWxGFSPPk9Ej1Ays80jsn+A\n530J1GAK123gSGWI6ARbeTgn3eT0eRT3zot1YpyXxIx7feiV1wSisxHQMb5q\nYLUb\r\n=pMEQ\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCNGjhu/ph0pAoW25BGfzpNISGQqQgOPBiNbQP0mcn3mAIhAPYKwV9tHpb5BvaUFfaqTKCocMjZn1fepjxutYK9kedd"}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.0.2_1640717716376_0.24659096021310245"},"_hasShrinkwrap":false},"1.0.3":{"name":"react-chessboard","version":"1.0.3","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.0.3","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-56lv8vd5yz3CXLs+NCWMQ/JdWg134DzoVrCtFEwOPJfH3ZAHN5YZlaQToLi0nRJzhwqDIMPtTzBjnrYnD8/txA==","shasum":"26888490ca09bf5dc84e1a8d662c03406e78f7da","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.0.3.tgz","fileCount":5,"unpackedSize":669736,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiA49mCRA9TVsSAnZWagAAbxYP/3fxIlib/LEJaxA06Vht\nNut7cpjYHt93rP1+0Bwy3PLYA9Qx8ULrw4zm/oPJUaOGmyvIdF+Tt+U9beSQ\neT89tbMLk2M/jUwKTseM8GIPTe/Bz53zYIh6iDgH7lidVst+WtVLP4qxwjZ6\nexXTfzTkVW3W+rCfiJ1neILvC84ulHsy0WN+oQn8Bxx5+YH/DxY6pMXwDNn5\nU4eU166ehfnM33kMczUQfHBt6rgCiU4tT9RPh0gVNFpMiXVcDZjXbpOvN8mT\nMb4MQ3ZbW4KK3M/DKdZo9j1HWlFZcTmRhbU7ujoiS6RlFE/8Ke7SWsM0qVbj\nm7v544NgWWztPBXSxflxMrkwc7Imi2wrqWDwTdHdpwQxTNaKuGA/XVWrZu1i\n+lcoZgPuVMAxls+5nJJOT56ywdR55vbHWvU0WwEqTIfXlHCudW//wqRjF6qg\nA6wTdQuOrA6OSE8Y+n5+O6Osr74BE9Jtb7mCOOh7VC5GE8IfvlRlzTfmk6tX\nWO3WMB6ntIsyhVJfyp8pAP/b+yhvG0JWVCCX2qfZQYKmf+0vrT/i8R4zyKRy\nxFFYirz6FQHTTrPsqqOiVcU1yXUAEQtGF0rky3eaXZHCALqYppZalvnty3lB\n3907y26mfePl0QC3k0b5DmGiNhSkTKbEYfOs6B6O6ecT9QI/aj2r2fom+Mc2\n9miF\r\n=IHKW\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHIpfa6L3BI5qIK0LOM8PTW5lJBRZ/JC4WcivWoHp9NXAiAUA5iEP0suW3efqHAoRH+I7Rvp4ATc2bEeAG/v1R7Fxw=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.0.3_1644400486122_0.7418049474912085"},"_hasShrinkwrap":false},"1.0.4":{"name":"react-chessboard","version":"1.0.4","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"cp ../README.md . && rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.0.4","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-ysSQpleGJkcXs46ZZdNQNQpReTU536bvBRg8ILIVjmzlLc/APpnN7tr3sWw3vgws/9C4SkkhsYp8GY6C7Oe7LQ==","shasum":"0c65709ea6603ec46683dc93ffc82023ce179422","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.0.4.tgz","fileCount":6,"unpackedSize":691934,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiBTbLCRA9TVsSAnZWagAAYs0QAJ2+IT0DMMjGodUKnmTu\nZNGBHrVwJ2O0c73L77RJimtODPmtNchjnEeK/FObaxkTbkb/vi62IhYxgSfv\nxBCh7Kfbnr1Ph2/nWYcD1NRkk7eHouD/FkBrkqRR69F0ZwkvI+pBVXld4QFv\nvojvxFXXxHrntyRxUIRWAfuo8pdGxhBXWogVESFqBVg9UGB/lc/ZqauwdYOv\nrKhL6lZxOPwR12E44yR3LJ2HEGXSrw1NpusWV9PolxHWyR7RVApBRJSRbXzi\neC0dU6KPJyuVP6EbWesZR/9+THVfU7ofyIGfJIx6QYE6gdzY59fsIp58MszL\n6p+ucLA2tescM5apllnWIpnKzNDhxSf9O8sm4eMA1OCWMoigyARfy5Gxb0Rx\nCZKHPJscUOf641tPKAYB/OzFQwjMvGH6ZCiLwexITO6cHN/mX3lb49au9Eqo\nRZpQj9hmTOzKASMOQW2PayFXjgxJvvwGXyKHsmlXlbhaA7L2EQyu7GAWWKaK\ntXI2ENOpCjCFgsmL53kfFKMb7HSuRkSrfAFjk0TREFnmCbNKu/mSJaGiEsD5\n8uh7+nOH+knVuVWq1+8C8c1YK9vkPUPDSdpZH5NPwHBNw5h/HzbQCKmaIyDX\nvkyS5uhyiLF88Refzn5fS/dZw48sl81uQpfA1Ej8tkCI8H4HZ9QKABbNwI1/\nOvCS\r\n=OKpg\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDs0w4Cp5U/y6ArUuQfwv1umH46A7xDRKWdOzcMNI7EsAiBggG95zyOpMvc/X8hz+ltGGn9Ft4kKfOFChVO+KIAP8g=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.0.4_1644508874915_0.07069441719933334"},"_hasShrinkwrap":false},"1.0.5":{"name":"react-chessboard","version":"1.0.5","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"cp ../README.md . && rollup -c","start":"rollup -c -w"},"dependencies":{"prop-types":"^15.7.2","react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^16.14.0 || ^17.0.2","react-dom":"^16.14.0 || ^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.0.5","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-wFXcW1vMnwXmzPENf0STNa5AvimRUeSrGyxdpdvW0PFw8yvFNHIWnOzr3ZiRLr38q7vPNzK+daIS7xG14XwAeA==","shasum":"a5441d11179e331865945aa9752c570179f78891","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.0.5.tgz","fileCount":6,"unpackedSize":691958,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiCoRJCRA9TVsSAnZWagAAIcMP/3SvTATXbQytMrXZj2pJ\nGNxPChstmvjLdn9BtBDI1bhMdC4Mt2o23XH3mwdzY9fPjH7dM7xw08OyMFQs\nlT0/IwOr5h/i55ViqjPaRED2dLrJpUGPZFkU3oB2Ss5/gzqS3HXss2Z3kgo4\n3R4bJd0tvvUeMYWAu7jt3PEI3vedM1ct8J/kwCInsKCaYeOxSa7ZgpILdktw\nvHVzKCPC/oi8kKvQdt1WGHKEuVQQ71Jql51YdPNZQsbSX4Io+Qagie50LsWB\nLD+LmwsakVyrYscYCiStZ1eLCh/6CHEdQ2zvaVVkwwoHdGnEc/9ZNUZq7HLU\n99dMActyBC8nBSqZvg733YtDE+VQf9ONOHAChYgbQWb/5kfi+VxbNGjMAB5t\njK/sUxKOaFXBKzxWpgswNnurCNfjc8Ne44sLjYoiL0JCjAG7cR1gg6X6RkaW\n1kw1dbNMKsgtZ9q5PlLmcASoDCnRxxpZT2chW1VbBWsI9qu4+EubGtVSyQ3n\nnebM/x0UtYCGn99iFmWMZjey7W4lUnVKVDjGFYcG2P38m5CfopvfsVU3rC2x\nn/9e8Qu6g/4W4eV46xiuT6F8G4jKCg7nnKp9bXFZo8ZAEaNHWCafdvqJIUhG\npDx+Zi5qvpA2v0wLE9XRoEJ0QMpM+Cg9jG9g7VmpvL8wekRk9NjHkBLAcNzC\nlCQa\r\n=/PiA\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAkcP1dAlgtQN4A78LcvMFk4jARp48pjTVb+Yxb6XyLoAiB7SvKEvVloDpeoOemREtH32Y6x+31ecUGflxQ9sObLqQ=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.0.5_1644856393035_0.6307886249840702"},"_hasShrinkwrap":false},"1.1.0":{"name":"react-chessboard","version":"1.1.0","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"cp ../README.md . && rollup -c","start":"rollup -c -w"},"dependencies":{"react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^16.14.0 || ^17.0.2","react-dom":"^16.14.0 || ^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.1.0","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-JKtIxNzOolea5gbUIK1vfv1Q1eRlrzebBd4ai3Pyx3A1fXFjxqBpUCCURVa3erawykrFsG3t28QOPSZ2XlDIGg==","shasum":"7b73166cd32dc36fe043b0e831dbf95d2e35f3b5","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.1.0.tgz","fileCount":6,"unpackedSize":687189,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiEOsMACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoFvhAAgo4H9dG41pueW8EjQc1jUtX+Q7JQ98qp2hvqxCFKeqj7jofQ\r\nmnntxcVSDEoBMQSZXfF8IgE2pYvzDhhDBkAbxp2cqf8djUPZeuK01LFxSgNj\r\n1cAeKYZB4Q3JGiXBVpMHRuWqvyIZ165Cm5hD1Ox4erKdlLyYMMSardoHYyE7\r\n6BNTTXH223+xHra1PqlCegcPmH08bTshF3jQmTIZa8ai9rclbwUWTTjuqJ2w\r\nDWpl9yfQKied6eBce7h3dAtIZ5WPkHaqLFHmkNaAu3uuYM5gJH9/nf9DtYl0\r\ng6w4o0hZvJwZfYf+kQ2tJrZM4DJAYURVr42LIH7JtHKEhoRFB12ipa4rkc9J\r\nWmKglKaNdBEp2yp8hv+2ewMNEF8tvTHEqGn1KrMwtfXZFB9pQ3LB0ivBxjRK\r\nNO/4qSGV674+C7Dk3y6sIbYYywpjlnpKQLdF7c1aQC3odY4HuiUmDao4/AnQ\r\n6DdPRcxMxuc+shoLe+BwO5KwQaRZnd4pTGcgLEd2a3FtWg5gioldSetDJ7AI\r\nvFyxYVKzHtkOA/Q42NXlTG8MxJi+QZr8T2KDce3sKyxRv1yOCv5W7wuH0+nT\r\nGO6Apcz4yfOAqZDZuCJ7Aft9HWbKzGAUC+3y/mNRMWHO4XVuouHT7dp1eKtN\r\niG49axwQqHiB8gdn6nBrImrl0uSQcPgAkuI=\r\n=moda\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICgKISc39beqa675RVLM3gCcAwMB8NJnePMMRBUldcpUAiBv3LAbaTE5KsM2dDKHqDe5foGhcTdpfElnGs9g8picvw=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.1.0_1645275916177_0.7540606384430695"},"_hasShrinkwrap":false},"1.2.0":{"name":"react-chessboard","version":"1.2.0","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"cp ../README.md . && rollup -c","start":"rollup -c -w"},"dependencies":{"react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^16.14.0 || ^17.0.2","react-dom":"^16.14.0 || ^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.2.0","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-5yMKgvi5cDEvcl7sXBnPopcJpKvVA0Pa8ELd07NxtJvMTI4fMofi78MU59rN4mXznKsgb3xb89Ndlq7Yb8zlPQ==","shasum":"87596546041e21080c1118b3c70c897db265ebe4","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.2.0.tgz","fileCount":6,"unpackedSize":687324,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiEqvdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpiDg/+J5jjyfAwtRdZ5kF6BDiY5X3nqcKH9tdwTH/jn4Tc78hZQJa8\r\nkADbyN7S8Jjz1cmrqjuMT4H/r8yaG/iir0gAk765ErYquHD6tPCiI4gLD7WO\r\nZvNNfJ7gZiTotu/dAPCIgpcto69z5rVpgl2VE3CEJX+yPkyjQ/IXS3pzhLyR\r\nIXTvRB56MnQAkVE7uKYBo9Zdy6XNGixw2XHOOZfqeSoUpaOCh6SvInQCPbPt\r\njk/kdyFhhL+lamenICgGyH213j2udJSStgn9kfWlu/1KC9QRI9hUUY+45NoZ\r\nR7gcDQkGhZAfqjBsHlD6KTUeRWCq59KUdQ5BYl+Ur/frxf2BYe1p5ZG1uf7U\r\nas/PeczjHVHtnuO0NEjd6Kby8bGXR9GzRcATkmho5gz9NllRypwmO8pXwsXR\r\ntZplheRTx09gDF/kcN5+k31Kfdt/RdvDxNCH2SGANiQhKu5aQRh8/ohuEJjy\r\nrgWUiKil28psn/Af1YCuoGRnKrbIxhMm3xIUQK8H3tcZzvuotbla8+nY4fcS\r\n3e2e1DrWA03m/5rLB2jbfEZAQDh7Bjv82sTWuxaZs8mQAX3HAM7QuqaMwtHI\r\n7nUMVBNbWjtGGpa6vLp5ZBc9a+WByIwZqLtl2UwWVkagiAzzIzH6gp20ss4H\r\nQom5bfo18MhVOjeSZWYMcV8nCnsnd11Gr4U=\r\n=rD1q\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIALkVmnTKKkuJmchU1DEJUKVr6F2bfjuItYooYFPlALmAiEA38hemBOFE4hAPMQwqagpO8zz1pHPNrkwr3c2LU7nNl0="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.2.0_1645390812983_0.26125146142767575"},"_hasShrinkwrap":false},"1.2.1":{"name":"react-chessboard","version":"1.2.1","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"cp ../README.md . && rollup -c","start":"rollup -c -w"},"dependencies":{"react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^16.14.0 || ^17.0.2","react-dom":"^16.14.0 || ^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.2.1","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-xaI0Bso9bUdy2DM0Sb6ISYkxN8oSVyKoAxnEYk9Mhzrr1JsudaaES454VQTxejlYdj2QbQ+Sf0zFeuwPJCWWuQ==","shasum":"3c30d9f9fba952243ade664d453f8e41e3a9ba12","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.2.1.tgz","fileCount":6,"unpackedSize":687650,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiE+jnACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqTWA/+KxaDL60aeqtEZgxR8qxUEVH+Eamd1derwXtKxMmTa9qbVVqm\r\nV1buCHpbAdgssPo7BpesZd7juw4EuIwJv+LRC0GmxDwq2sO8/LK39IHSLzl3\r\neXNYtS4Cs0r5dJ+1wuIZLzG9lWRI+eUdnL6m05EPAlkvDa+TaOVvEXspa3OM\r\nw3YpHq0jBx9BeYrcVQOedKP9uAEWKTN+tULHEBbC1vi2uxwYgJ5Gw+G+lmSr\r\nYD+KYdIf/cO0a/XsxKyn1rMibagRV9E4B3ux/Ctv61bwMpPawAMLXm9P+5GY\r\nCB1sCTOEzF6UZ3+nEPSGZprxOxAs51Z6qc/LYBUvlpp9muY3RB6gDVCzt/HE\r\nufNipTkadEy8JyZghuxYRg3C3G4UhJ2qbnY0M9fMRq+zNZdev4nJvaSnrcxh\r\nXpJ4xcRhmeCNU90J34UZcuRrnYxRloTVjL6uExFHH2k52BSAT1VvSd2CDX85\r\ng0Z4Ro6yWhIVPh1RkRB+N0unrUgR4w/I2x8GgBr2XN96VldePthxwB7ZP/lz\r\nXsmYLkD5fFGwGvg0qyLZxM9lFOHukx5KulUAR2frOAP485FvZm81+Yecypqp\r\nLPFWxW6bL2g62o2ZoJJ2SvJB0xoegCQS8Q1KdbNz3HPS08sA24klXqyMYNWq\r\n2pZW6VYLw9/3mR+Dgke2QQDvjoekTET+UGA=\r\n=H9xB\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBPvVhJbOrksu9PE4GpdPrvaW4NQrEl/W45l9sm6bhwYAiEAkR/6TrFa3NyH2TDUGDoQtSR14Cv1XRvtfRhU7k28uBA="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.2.1_1645471975721_0.5489475570573861"},"_hasShrinkwrap":false},"1.2.2":{"name":"react-chessboard","version":"1.2.2","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"cp ../README.md . && rollup -c","start":"rollup -c -w"},"dependencies":{"react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^16.14.0 || ^17.0.2","react-dom":"^16.14.0 || ^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.2.2","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-fTEKtyaBo6syVjK4SUlHq1Aw4LJUo7T7LiEdYcE1TNcY9iT96cK5PZdriCKSgE4SuqiiCxVPCZgCIw4WyOPOfg==","shasum":"6c00c9ea8c9689f5605a30b91954098330f23f28","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.2.2.tgz","fileCount":6,"unpackedSize":687586,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiJMccACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrmog//aglv9Y9OTcJAFqPvM+FBTIBVPsp52tf0o2tphP9fwKKHo5Uz\r\nVy1Qq2hq/k8C65G9+sl53XXP1DleW+F7sV4v9n0Px+dRrGlBCiS1tkp6vEyP\r\nge1+a4CtbH0nAJ/Q8tT9T0ukbAHSKTt4RZN+CsJNUTuP8NDyVIGcU8cUmSrV\r\nAK5GnHmgDGpvB8GxfQeCnhB+I0hebmuV5mx4MVCVnAEkEpsfEIVYHZvyZXvo\r\n1mAhx1KE36e67sirpbznZtf7RGjiCFe0tMR4znlPFhrKQi//ry7fVTXWdiQ1\r\nxEmTZk42qvXgR5/a2Fw7xNuXwZYvSGO4EgP8mRrLawy/d1/yCDSr75BFvkrF\r\nTxdnIeIe2clMLPlanrwo3QIi7ULFAKqFul8L32g8qtT+b2IkKD+OgdmzlXD+\r\nUIg2FDAvzs8arl4+iTfYQjDD7A/yGPZckZo/DVYhVudekXf/d5Yxb0PkRHtm\r\n1DANEb+mvhbVvyMYDOF0M1aZUdqhcY9+xVatBHyTvZMTGqqSZH4UYb/yL7ol\r\nSzS5xG81cldqspWlewZbMEu5stApusGNjhO5cA/d8t+Ify1eJNLjJdaZPBtT\r\nWyxFsi2mPb92q36vbDuFpYXs/kVlfl0uvFJnspENTkIv+05s1sYvKFGqyZu5\r\nyEdh3stC65Od8NnkweuH8xQjggNB1JcYtdM=\r\n=RNn7\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDbGhb7nZxelJdJJ+zSS+0PU3hFSHQgt9VVNsTIS48SUAiEAr9olMUcht14Hrtbph3t8YPjOsiYxmEWCx/WFsF8jJUk="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.2.2_1646577436479_0.16954990879914056"},"_hasShrinkwrap":false},"1.2.3":{"name":"react-chessboard","version":"1.2.3","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"cp ../README.md . && rollup -c","start":"rollup -c -w"},"dependencies":{"react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^16.14.0 || ^17.0.2","react-dom":"^16.14.0 || ^17.0.2"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.2.3","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-1FVEBrqtj/gk9prPq1gPV//92pWdFeQntaK5po6ClICkUwKz47i6qxKuRpwFgyyYAhq73AJNjhRpBflycELhZw==","shasum":"61d124d554f61280a852ced88a719cf324361bbf","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.2.3.tgz","fileCount":6,"unpackedSize":687860,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCodGCPNdkF9dWTbxEJ9u/JVRA/9dty2usaC55iaTIovwIhAMQWPyR+PXVa9avlNx1wVWHv+zs9L23Laun5RyuORWCV"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiY9sJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoR8A/+NbS7ZYYsmCi2BrV+fVWVMuObzP3XUx2zH/SkamXb9+E1feh1\r\nhik/Vu/9MTm58LkH6i/htqcl5hqJNZl7emcRR+Fzx+pfbd5cowtr6tT5AMOu\r\n02cTDtar5eQRC0tX8lysmxYDrpm5fu4V1cAm+Rh31C/Km9SLEFkLv7jMT5eh\r\ncWHPzvJDvt1hEcOSxK2w5w5VzjpISZfQmx7atjjzIXDiIXo8QTXBzobZu+kt\r\n3usmAM5DB8uDmXn+PXaRjL/xcDqzaOA1xagAd7wrPgDKgmcaDbyJ7qjkTiDz\r\nulTAq0ZSzvpvyop/lxgChH8+/CcawrD9bJ7IozfTZ4FerroXOCA3s3fHzDrR\r\nIvgGGKseJOBxlIsClgmHVTgH2Za/IJdEyutDcKA9hKJkPzmvXOeGe2gynOB5\r\n/+x3dGdntwLBmkEYvr1fhz1R7KruWLysZ7hW1yIhz4gZcKGtUb1Kn2lOxdFU\r\nzVN74NENpS34W6BmYHKtgns18oSP2E6x2s7jap9H2BZ7qqUou4CIGgXLHQA7\r\n/S8P6cR8H1DoJn5cWbD5F2lsBZt+YwmPdGUh5zwg4kODQvSQytj+QWmgFaAu\r\nRY6U2g8BIHdEb3v14MFGMCxiaXAK8KZNDVtjhPLj2Miw8m2QXp6fZCXYiF8h\r\nlZMjjIMd3eMhRODFPccZKuj0MAzA2CxwNlw=\r\n=MbJj\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.2.3_1650711304972_0.42371053213583276"},"_hasShrinkwrap":false},"1.2.4":{"name":"react-chessboard","version":"1.2.4","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"cp ../README.md . && rollup -c","start":"rollup -c -w"},"dependencies":{"react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^16.14.0 || ^17.0.2 || ^18.0.1","react-dom":"^16.14.0 || ^17.0.2 || ^18.0.1"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.2.4","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-P7oC5odQzN90eZcQUX5ZsvmoqIOH3GV2qM7HW5Nfu966+Mc5c/eC3zQV3qSvrpljd0Fa0jpm4IoOVsiHeTmUKg==","shasum":"45a11de8e85e05e1346c171de9887cf4412bf693","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.2.4.tgz","fileCount":6,"unpackedSize":687882,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFVcoqlr9rWlY3SnkpK0ISdpuzYeegLmmGzr2SLfD8puAiEAk2CYrG5ayYJVPGnK/SbC0TX19U2U8ct1qCl01usB9u0="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJigmuSACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqfpA//VhtlI2oJ2h/iPdJaQW05HCXa29+IwM641S4UKJuwJFWJSBEq\r\nFkK0vEXCPY6io5a86PJgIxxCv/3KgEKhTe3rnYnjmM43/y0WmzZArPtZ1Fac\r\nbgFx/kPWKq6vhH42A86DaOdg+U8OwEHoD5YLbkoC1JzHD3RZseToE4L7rMwK\r\nMVqfVYIxXniMSoAQFVKLJ4Gcwz/aBuFlXiXF7hDm+PlWxTIyf5+/uFINblHj\r\n1TyG43zpV7b6tvAG1S2qAiwgoMKCCgYeyzRWHLEXNRIaSricbO2lewt0je+/\r\niXeLFrZl7nuf5RBwtWBJBxeEYncTaiddDemY2UZnO47kkwPahKoEK6YJWuD7\r\nZnNKkBeGM4aTbv0XYsnCuFddiqt3gn7YRw8XKLheImKJs0ysZhGfMTCZwAKZ\r\n/dSlk4RXGCx33rYCJO5BqWTk9x0trH/NN22cKbHjKllGdleO3dioZS+OOvhW\r\nf4mOPhZ48hz7Z8GlxHxZN1+whAmGo+ayVRDgdHZUHzkXGtLffVOt3+MbTZuc\r\nLHHluqmzVB9KCuJ+E8cMDI4PqfHN2kabL0bs47W6URNeHiy0/ddZq11/ObAc\r\n4wrpDqDU6uWipsP3At+9tWw0AhtN0rrpqFQC0rL3ZYHH/fcLg5XTN0qRRhJu\r\naKGLSFLmMIorXbAVPOoXL6UN23G478dYeJY=\r\n=yDm7\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.2.4_1652714386054_0.4099980012226516"},"_hasShrinkwrap":false},"1.2.5":{"name":"react-chessboard","version":"1.2.5","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"cp ../README.md . && rollup -c","start":"rollup -c -w"},"dependencies":{"react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-multi-backend":"^6.0.2","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":"^16.14.0 || ^17.0.2 || ^18.0.1","react-dom":"^16.14.0 || ^17.0.2 || ^18.0.1"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.2.5","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-7RC9xGiy8jBwVyVlUxuUkIaviroAEhaJBKlHwSJPKwMJ8MGiKd5pbaYC6XLT+qLU4nOetxF+qPFGB8P3ME+v6A==","shasum":"d70388ebb6f8cabbab059f3b2b51d3b93d53e6d6","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.2.5.tgz","fileCount":6,"unpackedSize":688494,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFOicp6mEQZifp8wJzNf7QQDg1xunN1WPVazu7AEwufQAiAT1rhSnTBpjlWQGx4xAFVbmnoI5vjxGHIgif7clYD2FQ=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJinjv9ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqqkQ/+NBT/ZFReWROsQ0pVpZpSAZju9AWnvqNf/PW6vpZC/LoS0j+U\r\nAzWAeX6vfK3Y990/l2oaiwhmOpfbJZ7Hd9P4Fysi37QnGczv4blfaKk+oRVr\r\n2OgqjtYBy0zxDyPIdBza7Njx/RXxuXqHso32c4a9V2K8Vx5iwmOwV1/cXEUV\r\noXigjmQVNdfzdz41atQIq5DP5fcnHTpNEA3pBGR+LpxcTYCEF3kivpP+ISVc\r\nEVelVsDX82YRCmKOSvMWyXK+lQkj0IfmOaqS+zErrMSzzJ4Smr2zctIzZeLa\r\nh1qREgwbpJ9KuMCnKX/HDikJ+HrB/9Xb0i+Q55o2YE195pOBt/xBu4e4TQCG\r\n48tdJXBawTDFBBWrM/6Wna0aXDoiK6x5tNiYgvN9oNwMvE4c765zmxcv/otH\r\nOm0mGtF9Nl9FYHujjlJEWKndCZwDfkcZbUe1AQL/IXonGIgoxdBBSpXXyn46\r\nSW7dy3Jffe5E9FmWRMkqySTibqDBPt+yEh3Y9JUEVbk3QfLa5D9xT8TKUIBu\r\nkDYSKjhCLn5AP1g3po9PwO7KMl6xbJiaWXpdPgup5qTUATR22PFBPrDgxniJ\r\nWQWImU4oN4k6A9R2ik5RmF+IkU6ALpZy/wvBPzLdxE9E6djTXenU6n/k79Zh\r\nibzPCEh2V9SlJ08P6zyX7JhbHXOzemchq5w=\r\n=/AGZ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.2.5_1654537213594_0.3706791924631061"},"_hasShrinkwrap":false},"1.2.6":{"name":"react-chessboard","version":"1.2.6","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"cp ../README.md . && rollup -c","start":"rollup -c -w"},"dependencies":{"react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.2.6","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-rpYUF3QOcHTjyr8NH1xSfOnz5/GnNLPQAs9o9P03jXCPr56aNxdkR6nTVt/tJMbVW2IXMh5+DmkHAp1x/YRqdw==","shasum":"ee11d32966c0d1e7811c76f02c138fd229c413c2","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.2.6.tgz","fileCount":6,"unpackedSize":606017,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDBR5PvglCCzm8XZ8g/VGwKWfn8B+g316g6ytNrDTKGSwIhAOUMG0VpjLtS62KQO1iIW16T8zllote/PBgnbLhOuevT"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiyVy8ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpWmw//QC4Tn4twOhD/qhI91zTFaR6iDXLbsxdtcDebED69AopKo7dz\r\n3f2L/bdo88LOfU+KNunQpBH1nvpYTW9IpvMSGLoFLrvThz9UhdCP4kha7Bee\r\noL/CzaL7VbozV7oBljh1JFZ37gbx76X/RaT0rr8bDOJ2+pjyw1EJOtG0l0Su\r\nVxX+Q6pNFzf+xzOuNeDZ3eF4o8q29g+Ln2zRYMRyaBXbSNstTN4HO7d5sknM\r\nt6QYmz7Ewkdsw4tEMSAwSqwAbgWXz+91t3PYqdkAFIm3o3YhVqtVdQKhX04M\r\natQ6BtpctqM9S6iJ7721+rbRM5a5qmKCl2L+JHqPXO94XQ03y2rZbplpjkC2\r\n16+Ut5+5SNjqXTbNhqbm89l4lgGC5E4+gCS4LzwiMXUv4LKtK1eV6sP73Gge\r\nFORZdKEO4u2gpyChqd8EPdSSApw7vI4AbsxopNOu3GO0/yY2BTSvsCmMv49r\r\n3YlvFUVTDEkWpTl8JYqff2o62HeKtVSi5HsEYEozFP3GNiMOAbOgIQNZX694\r\nJvK5KNnsiW2vsf89EZhx9N1LKt1xhkXM2s+hfoWRiLTRRC8hj6Iy5oMNVGf8\r\ntx6CPfNaH9huEZlROfe+yuwG8cNjHtThposUBUyezLvI9Kxwjly7KuaHjl6C\r\nTege9nTR+wq7E35XAS5mdAHCBBr0KVOUB9M=\r\n=wK8Y\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.2.6_1657363643885_0.08172574040918335"},"_hasShrinkwrap":false},"1.2.7":{"name":"react-chessboard","version":"1.2.7","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"cp ../README.md . && rollup -c","start":"rollup -c -w"},"dependencies":{"react-dnd":"^14.0.3","react-dnd-html5-backend":"^14.0.1","react-dnd-touch-backend":"^14.1.0"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.2.7","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-dwvlY4nrL7yU9zbFWTEDQE/Fukx9qrap6P/FvC4jIGUfzQceM4FLGVApPb6nuczRCck7/778bPNvT610pqToPg==","shasum":"b28d47bc8b7e6b359dbeef5162d155bc277345b4","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.2.7.tgz","fileCount":6,"unpackedSize":606258,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDgUHrhpw3QHAFGZ12y6/k0eTs0dtXcKho5ENol1tWh0gIhAJ9uXMfGSDj0YHrfsCNq0oworurVRr6bg+05i+8jn8ew"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6ZUCACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpMMA//ex08GRTbb8j6t4qxPUdiSKtGYsUTQlbiNG1CCa+tiw7QVF5N\r\nGAuhN2Y+WaGZ4jXtm/gciw9fIdjBdtg2Z6sHDiUP6OnEN4dGTmsLW/5cYjAq\r\nE8vF4A/mBYXJO5OqHjX5dbT/uflFNGxDLBrq8hQjNMh92gYSaM2UERJyLmYM\r\ni3vfVyuoOoLzSZjRBgNvHDWOGv/BENvwjo3ccyriVtVCpaO6FFFFDet3xaKV\r\nlqB0n/vdE7J+UPuj6AEefZnlqX8D1hCB53v/2E/KrsjXg1gSphFz1Id/aFu1\r\nrY3oL39XEY19IBmig77TZ/fczgP7QxFtQUsgUBtTtkwIjixYdTiLDP7CtEf8\r\nCDrRUM/Z9CrdaUvwkKA9M4BKTtr7OWbX3Lu5sFVltAgNvM5x5029w7xHv9Gw\r\nD2xhZhI0eZxqw3NK8LOntJY0eGNrYoL5bLrszgYJUblxsHh993RKx/Q1jWob\r\nmy9x7lBS/hvVadqSzXv2HC6EnrVjcnRcWqK76CyR1o/gHM8AFDTPLD9R79bI\r\nGT8TgAdfuDH/dxj56NDWVP6EbfZmAbquUreOwQBs33EOtlxAlaCRJMh53cnB\r\nTur9bv2THdr2OvF8T+OIzk9TFA7mIByJMv0IDy+1wjixzqiz+fb5fD19WyrY\r\nCagD5xezoyBQCyCWY/BoRFxc4NUjCr5+cdw=\r\n=zpPO\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.2.7_1659475201909_0.8574650771390171"},"_hasShrinkwrap":false},"1.2.8":{"name":"react-chessboard","version":"1.2.8","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"cp ../README.md . && rollup -c","start":"rollup -c -w"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.2.8","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-6tYi1PnjFEXcQPq72fiEMfCxh9mMTiQZOVSG5RfrwFi2K+WxQFEXSZAXNlQwoGNKFFrijRG/afFmlC9Od+Wa6A==","shasum":"5a924fd597b436148502ebd56f45469e5cf4d9de","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.2.8.tgz","fileCount":6,"unpackedSize":442970,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHu5sQEN5Re4HTZztZiid8l9w9l7COk+ukwvWu3XtLMcAiEA5mftt8JPwN1ei0iNs/kciFmeNtGQ5VC8Kl9Bkq7+d00="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6uDkACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqXCw/+IIrDEcwTtD25wc6eUTetwkfrW1dPcMhNUznpzuff2EjG+N+x\r\nq3VcU0Vx+CYy77hzEOupY4SoamgeD6ksgTFA7nn7eyYHBp8rPUYAa9usRhJR\r\noyeQvGHGEEUclg02BdJpZZrfap6NiS8Lj1emrctmHinpfBONoe6vSmqbbRKq\r\nr43dn/XpdO0pq1YqO7NcEccIeNp8OBpb6qpZBbseQopWM3GUSlRe1jJOvY2v\r\nlSrg7aNtyRG5KsiwYYCBWvWYD1qZJayC3h4xhNz/vk/PBBtIV78y/c1tXMpR\r\nkzkan+fkBTrUW3OBghILnHgv4VoU/1LyNfBwb9SEdhKne2tFu5lp3ypIFLDY\r\nMoDANaNwlNBf3daA9GQixo8E4xgyDKW6nQMM6La5fX8s+zYUtc/dhSmfBZJn\r\nBQkZOyzhCVBnQj9LT6BLKPi+A8uIEoSayzk6ilGg0mBaNZwBRAi1DprDQX08\r\nQc9SPJvlfjcTjz/y0uqrP78Xspn4f0Aq6rx/d+4Z6+CKxiWgz58c5eixo+eL\r\nTcJ6Jl/dXomNpBjpef5BzyBe07kvM3AZ4aCEuqaRbeUiLDgH0lOR1AEs5gTS\r\nZobcXzKraTJApZfMOzcxKhxNUAyELwlt2jXMmaNE44nbQB/SEEt20fz64+/M\r\nk51qDYlnzAm0lUWT5+vlHH5hFM3EuJTuat0=\r\n=wtKf\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.2.8_1659560163862_0.3065439856857284"},"_hasShrinkwrap":false},"1.3.0":{"name":"react-chessboard","version":"1.3.0","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"cp ../README.md . && rollup -c","start":"rollup -c -w"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.3.0","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-Q2+oTp7r3mP0p2b6OEw3m6fhMwe6y0ThesYAFiY8R+PMmfAbX4bDwLz/id02BRbjHWEa1udoIvU63oaOVIClfg==","shasum":"261621db973f1831cfbb3b8586f9775ffe901d3f","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.3.0.tgz","fileCount":6,"unpackedSize":443513,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICFSwG/ms2JLeHAmFv2Bw+LI4bPX1qmuxKzMpjwXm1oTAiEA+ObqLCGypdLKZXzZhrx1MXU4q3bcucPNSgJYbFAhPrs="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6uPQACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoaOA/5AYPIVgxwB59GrmbJjb6USnPy2ShlxIbO4lLJ4hi7iAf6G4p5\r\nNZg1nJWZ9bmwg2fs6CPHgstKr0ZOYZkRaELnux7FtlpfYNcNrX8QqRVzrYlg\r\npIQoRBl0kJgfdYEcDiySGL1BTD1uLGb62CE6AkmYLZMOO4b9erZFpziZdsgW\r\nR3kmd8E2pGUK/um/vlKQ5sjB2KBFDOdCOXiZGtP/t7yucC7JQjBHUoZrsikN\r\ng95rajVziqpDH+r+fslCTcBZtYunl5MWBXq4hUcELtLark8zIdlSQF/SKstY\r\nFO2r59oSrMIKIWIDgOgR6svzPqb4gbrnhKNMkwpWxKkUqQsTR2vE8TZjhwCp\r\nt98fRaXhpBOdNIhGqziFp0WpAh7DPUrgu7UyVsbGFZrMJph5d9jkH0r7tk2W\r\n33FRVJJinP1djD8XjU6uHFB/jWLQLe67nQJOa2fVCieRFLlERNSpV9vgN5CO\r\n+U7sOsbvrLAq9lf9mn7m6dac+jdvv/T3pw5SABnibfUwc127vp3KcClzB4jZ\r\nObQhV4x1O5Z1VXcj7ij3W+SSHwjGk6cKAl/Rkq25kuYJRH0IEsJBh65voG3n\r\ntbWwnXzgJmyGQe7kx3OxkhuBHnewhSUkHLfCBSOW2szu//eNojj814WY719L\r\nOkHhXfJ8yQ3OioJ9EUmn3Gk6lu8WXwj5Jts=\r\n=LzCr\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.3.0_1659560912217_0.26352712270536705"},"_hasShrinkwrap":false},"1.3.1":{"name":"react-chessboard","version":"1.3.1","repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"license":"MIT","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"cp ../README.md . && rollup -c","start":"rollup -c -w"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"devDependencies":{"@babel/core":"^7.15.0","@babel/plugin-proposal-nullish-coalescing-operator":"^7.14.5","@babel/plugin-proposal-optional-chaining":"^7.14.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/preset-react":"^7.14.5","@babel/runtime":"^7.15.3","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-node-resolve":"^13.0.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-import":"^2.24.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^5.1.0","eslint-plugin-react":"^7.24.0","rollup":"^2.56.3","rollup-plugin-dts":"^4.0.0","typescript":"^4.4.3"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@1.3.1","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-cxpdc0DQ89DkcD0EWJBptF2HkhM2IjphI9v1QUEBxR/n83mF1Q6XrEX5FBF3FawnVuGkFLclT24DM33NAHc/WA==","shasum":"ff00213a038a7e8ac630e40dbed343826ba82507","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-1.3.1.tgz","fileCount":6,"unpackedSize":443775,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDWHhPnDoIA6oHsRwSVMaTKd6Ntr50Ikkxwgd4cW/nXNgIgRa3zfbczGw/5uvbscxX53gJaeMNNSjbyrLnL63WmM8I="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjelD0ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqHSQ/8CR3JWSkhrB/Coi4m6QL8tjg3SlEMX0vVZO7hfMIFmrwy/p8V\r\nd3EojUQUqKNCZgQ8c3qfzPUiTd3gHOLuokkENdjFy8cX3Row6DF5OTXCvFpa\r\nycU6nHzYbvj76j28kOc7T0na4CQaGgv9S2jJcGAuonufOg1w5KOQDN/zhT83\r\nnLb1ThpdVVqjCG1T3+VQ4uBMujXHhJX+BZjfEWVLSODGUZ7NvrLrrzhKLZ/t\r\nyxZh+mwJhCkgtuvHDjSo0sesV8nq3Y+5UdSAaYLxnZM4bswaTT5R0AUljwfL\r\nPEybtWkqY2Hng31NUflXMH3EV5w6hqlEMhuO0tcjnheQFtqyUZ0t1SRkt3cI\r\nT7Ro/JJcMnmGg+XUdFwUfoqLLY9CmhdBqUCXHV3mkw3ics9fKQgisXRUWj12\r\nCVISnIusCio/ruB/+0kRo0kIGA4jdRWrb/QMp/EstiKoIJqDJNMlcFpUCjxC\r\npzMGpmmoPpJwpNiCDCcd3edZb+BLfePVDctXIUlVqtoDGjOE3byamOb/IjZQ\r\nFA5UisYOWi4Jddmd7BkreopUj/bI5Q2L0gcaOs22o+piVeYubW+hW5a8fbZw\r\nBFwyAzG2oh/h4c5PEDJ0UQFDWGNo079s3SflvqfuUEiMdLS79Hc9UtFyxFY0\r\n5DqUbq25xIOfvX3ZKAp2l7/lafkCp0f2qRI=\r\n=h6Gc\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_1.3.1_1668960500541_0.8966591353750708"},"_hasShrinkwrap":false},"2.0.0":{"name":"react-chessboard","version":"2.0.0","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/cjs/index.js","module":"dist/esm/index.js","scripts":{"build":"rm -rf /dist && npm run build:esm && npm run build:cjs","build:esm":"tsc","build:cjs":"tsc --module CommonJS --outDir dist/cjs","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","typescript":"^4.9.4"},"peerDependencies":{"react":"^18.2.0","react-dom":"^18.2.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"types":"./dist/cjs/index.d.ts","readme":"<div align=\"center\" markdown=\"1\">\r\n\r\n# [react-chessboard](https://react-chessboard.com)\r\n\r\n<img src=\"./media/chessboard.png\" alt=\"react chessboard\" width=\"300\">\r\n\r\n## The React Chessboard Library used at [ChessOpenings.co.uk](https://chessopenings.co.uk)\r\n\r\n### Inspired and adapted from the unmaintained [chessboardjsx](https://github.com/willb335/chessboardjsx)\r\n\r\n[![Pull Requests][prs-badge]][prs] [![Version][version-badge]][version] [![MIT License][license-badge]][license]\r\n\r\n</div>\r\n\r\n## What is react-chessboard?\r\n\r\nreact-chessboard is a React component that provides chessboard functionality to your application. The Chess game logic that controls the board should be independent to the board, using a library such as [Chess.js](https://github.com/jhlywa/chess.js). An example of these two working together is shown [in the example below](#basic-example). For interactive examples visit [react-chessboard.com](https://react-chessboard.com).\r\n\r\n[ChessOpenings.co.uk](https://chessopenings.co.uk) was originally built utilising the [chessboardjsx](https://github.com/willb335/chessboardjsx) library. With [chessboardjsx](https://github.com/willb335/chessboardjsx) being unmaintained, it made it difficult to add functionality or optimise performance, so react-chessboard was made.\r\n\r\n## Installation\r\n\r\n```\r\nnpm i react-chessboard\r\n```\r\n\r\n## Features\r\n\r\n### Current\r\n\r\n- Accessible Functions\r\n  - `chessboardRef.current.clearPremoves();`, takes optional boolean parameter `clearLastPieceColour` to allow/disallow further premoves of the last moved piece color. `Default: true`\r\n- Board Orientation Choice\r\n- Custom Actions\r\n  - getPositionObject\r\n  - onArrowsChange\r\n  - onDragOverSquare\r\n  - onMouseOutSquare\r\n  - onMouseOverSquare\r\n  - onPieceClick\r\n  - onPieceDragBegin\r\n  - onPieceDragEnd\r\n  - onPieceDrop\r\n  - onSquareClick\r\n  - onSquareRightClick\r\n- Customisable Board Styles\r\n- Customisable Pieces\r\n- Customisable Square Styles\r\n- Drag and Drop\r\n- Draw Arrows with Drag or Props\r\n- Mobile Compatibility\r\n- Moving Piece Animations\r\n- Optional Square Coordinates Notation\r\n- Position Control\r\n- Premoves\r\n- Responsive Board Width\r\n- TypeScript Support\r\n\r\n### Planned\r\n\r\n- Promotion Piece Select\r\n- Spare Pieces\r\n\r\n### Notes\r\n\r\n- Between version 0.0.3 and 0.0.4, onPieceDrop was changed to allow you to return a value of `true` or `false` depending on whether the move was successful or not.\r\n- If more than one board is rendered and draggable on a low end device, performance will struggle due to performance issues with react-dnd.\r\n- In the rare case that react-chessboard component is hot swapped out for another in its place, this will cause an issue with the CustomDragLayer. To prevent this, the react-chessboard component needs to be completely unmounted before being replaced.\r\n\r\n## Usage\r\n\r\n### Bare Minimum\r\n\r\n```jsx\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Chessboard id=\"BasicBoard\" />\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\n### Basic Example\r\n\r\n```jsx\r\nimport { useState } from \"react\";\r\nimport Chess from \"chess.js\";\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function PlayRandomMoveEngine() {\r\n  const [game, setGame] = useState(new Chess());\r\n\r\n  function makeAMove(move) {\r\n    const gameCopy = { ...game };\r\n    const result = gameCopy.move(move);\r\n    setGame(gameCopy);\r\n    return result; // null if the move was illegal, the move object if the move was legal\r\n  }\r\n\r\n  function makeRandomMove() {\r\n    const possibleMoves = game.moves();\r\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return; // exit if the game is over\r\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);\r\n    makeAMove(possibleMoves[randomIndex]);\r\n  }\r\n\r\n  function onDrop(sourceSquare, targetSquare) {\r\n    const move = makeAMove({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: \"q\", // always promote to a queen for example simplicity\r\n    });\r\n\r\n    // illegal move\r\n    if (move === null) return false;\r\n\r\n    setTimeout(makeRandomMove, 200);\r\n    return true;\r\n  }\r\n\r\n  return <Chessboard position={game.fen()} onPieceDrop={onDrop} />;\r\n}\r\n```\r\n\r\n### Advanced Examples\r\n\r\nFor more advanced code usage examples, please see example boards shown in [`example/src/boards`](https://github.com/Clariity/react-chessboard/tree/main/example/src/boards).\r\n\r\n### Props\r\n\r\n| Prop                          | Default Value                                                     | Options                                            | Description                                                                                                                                                                                                                                                                                                                                                                          |\r\n| ----------------------------- | ----------------------------------------------------------------- | -------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r\n| animationDuration             | number: 300                                                       |                                                    | Time in milliseconds for piece to slide to target square. Only used when the position is programmatically changed. If a new position is set before the animation is complete, the board will cancel the current animation and snap to the new position.                                                                                                                              |\r\n| areArrowsAllowed              | boolean: true                                                     | [true, false]                                      | Whether or not arrows can be drawn with right click and dragging.                                                                                                                                                                                                                                                                                                                    |\r\n| arePiecesDraggable            | boolean: true                                                     | [true, false]                                      | Whether or not all pieces are draggable.                                                                                                                                                                                                                                                                                                                                             |\r\n| arePremovesAllowed            | boolean: false                                                    | [true, false]                                      | Whether or not premoves are allowed.                                                                                                                                                                                                                                                                                                                                                 |\r\n| boardOrientation              | string: 'white'                                                   | ['white', 'black']                                 | The orientation of the board, the chosen colour will be at the bottom of the board.                                                                                                                                                                                                                                                                                                  |\r\n| boardWidth                    | number: 560                                                       |                                                    | The width of the board in pixels.                                                                                                                                                                                                                                                                                                                                                    |\r\n| clearPremovesOnRightClick     | boolean: true                                                     | [true, false]                                      | If premoves are allowed, whether or not to clear the premove queue on right click.                                                                                                                                                                                                                                                                                                   |\r\n| customArrowColor              | string: 'rgb(255,170,0)'                                          | rgb or hex string                                  | String with rgb or hex value to colour drawn arrows.                                                                                                                                                                                                                                                                                                                                 |\r\n| customArrows                  | string[][]: []                                                    | array of string arrays                             | Array of custom arrows to draw on the board. Each arrow within the array must be an array of length 2 with strings denoting the from and to square to draw the arrow e.g. [ ['a3', 'a5'], ['g1', 'f3'] ].                                                                                                                                                                            |\r\n| customBoardStyle              | object: {}                                                        | inline CSS styling                                 | Custom board style object e.g. { borderRadius: '5px', boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5 '}.                                                                                                                                                                                                                                                                                   |\r\n| customDarkSquareStyle         | object: { backgroundColor: '#B58863' }                            | inline CSS styling                                 | Custom dark square style object.                                                                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackend              | BackendFactory: undefined                                         |                                                    | Custom react-dnd backend to use instead of the one provided by react-chessboard.                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackendOptions       | any: undefined                                                    |                                                    | Options to use for the given custom react-dnd backend. See customDndBackend.                                                                                                                                                                                                                                                                                                         |\r\n| customDropSquareStyle         | object: { boxShadow: 'inset 0 0 1px 6px rgba(255,255,255,0.75)' } | inline CSS styling                                 | Custom drop square style object (Square being hovered over with dragged piece).                                                                                                                                                                                                                                                                                                      |\r\n| customLightSquareStyle        | object: { backgroundColor: '#F0D9B5' }                            | inline CSS styling                                 | Custom light square style object.                                                                                                                                                                                                                                                                                                                                                    |\r\n| customPieces                  | object: {}                                                        |                                                    | Custom pieces object where each key must match a corresponding chess piece (wP, wB, wN, wR, wQ, wK, bP, bB, bN, bR, bQ, bK). The value of each piece is a function that takes in some optional arguments to use and must return JSX to render. e.g. { wK: ({ isDragging: boolean, squareWidth: number, droppedPiece: string, targetSquare: string, sourceSquare: string }) => jsx }. |\r\n| customPremoveDarkSquareStyle  | object: { backgroundColor: '#A42323' }                            | inline CSS styling                                 | Custom premove dark square style object.                                                                                                                                                                                                                                                                                                                                             |\r\n| customPremoveLightSquareStyle | object: { backgroundColor: '#BD2828' }                            | inline CSS styling                                 | Custom premove light square style object.                                                                                                                                                                                                                                                                                                                                            |\r\n| customSquareStyles            | object: {}                                                        | inline CSS styling                                 | Custom styles for all squares.                                                                                                                                                                                                                                                                                                                                                       |\r\n| id                            | number: 0                                                         | [string, number]                                   | Board identifier, necessary if more than one board is mounted for drag and drop.                                                                                                                                                                                                                                                                                                     |\r\n| isDraggablePiece              | function: ({ piece, sourceSquare }) => true                       | returns [true, false]                              | Function called when a piece drag is attempted. Returns if piece is draggable.                                                                                                                                                                                                                                                                                                       |\r\n| getPositionObject             | function: (currentPosition) => {}                                 |                                                    | User function that receives current position object when position changes.                                                                                                                                                                                                                                                                                                           |\r\n| onArrowsChange                | function: (squares) => {}                                         |                                                    | User function is run when arrows are set on the board.                                                                                                                                                                                                                                                                                                                               |\r\n| onDragOverSquare              | function: (square) => {}                                          |                                                    | User function that is run when piece is dragged over a square.                                                                                                                                                                                                                                                                                                                       |\r\n| onMouseOutSquare              | function: (square) => {}                                          |                                                    | User function that is run when mouse leaves a square.                                                                                                                                                                                                                                                                                                                                |\r\n| onMouseOverSquare             | function: (square) => {}                                          |                                                    | User function that is run when mouse is over a square.                                                                                                                                                                                                                                                                                                                               |\r\n| onPieceClick                  | function: (piece) => {}                                           |                                                    | User function that is run when piece is clicked.                                                                                                                                                                                                                                                                                                                                     |\r\n| onPieceDragBegin              | function: (piece, sourceSquare) => {}                             |                                                    | User function that is run when piece is grabbed to start dragging.                                                                                                                                                                                                                                                                                                                   |\r\n| onPieceDragEnd                | function: (piece, sourceSquare) => {}                             |                                                    | User function that is run when piece is let go after dragging.                                                                                                                                                                                                                                                                                                                       |\r\n| onPieceDrop                   | function: (sourceSquare, targetSquare, piece) => true             | returns [true, false]                              | User function that is run when piece is dropped on a square. Must return whether the move was successful or not. This return value does not control whether or not the piece was placed (as that is controlled by the `position` prop) but instead controls premove logic.                                                                                                           |\r\n| onSquareClick                 | function: (square) => {}                                          |                                                    | User function that is run when a square is clicked.                                                                                                                                                                                                                                                                                                                                  |\r\n| onSquareRightClick            | function: (square) => {}                                          |                                                    | User function that is run when a square is right clicked.                                                                                                                                                                                                                                                                                                                            |\r\n| position                      | string: 'start'                                                   | ['start', FEN string, { e5: 'wK', e4: 'wP', ... }] | FEN string or position object notating where the chess pieces are on the board. Start position can also be notated with the string: 'start'.                                                                                                                                                                                                                                         |\r\n| showBoardNotation             | boolean: true                                                     | [true, false]                                      | Whether or not to show the file and rank co-ordinates (a..h, 1..8).                                                                                                                                                                                                                                                                                                                  |\r\n| snapToCursor                  | boolean: true                                                     | [true, false]                                      | Whether or not to center dragged pieces on the mouse cursor.                                                                                                                                                                                                                                                                                                                         |\r\n\r\n## Contributing\r\n\r\n1. Fork this repository\r\n2. Clone your forked repository onto your development machine\r\n   `git clone https://github.com/yourUsernameHere/react-chessboard.git`\r\n   `cd react-chessboard`\r\n3. Create a branch for your PR\r\n   `git checkout -b your-branch-name`\r\n4. Set upstream remote\r\n   `git remote add upstream https://github.com/Clariity/react-chessboard.git`\r\n5. Make your changes\r\n6. Test your changes using the example folder\r\n   `npm run build`\r\n   `cd example`\r\n   `npm start`\r\n7. Push your changes\r\n   `git add .`\r\n   `git commit -m \"feature/cool-new-feature\"`\r\n   `git push --set-upstream origin your-branch-name`\r\n8. Create pull request on GitHub\r\n9. Contribute again\r\n   `git checkout main`\r\n   `git pull upstream main`\r\n   `git checkout -b your-new-branch-name`\r\n\r\n## LICENSE\r\n\r\nMIT\r\n\r\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\r\n[version-badge]: https://img.shields.io/npm/v/react-chessboard.svg?style=flat-square\r\n[license-badge]: https://img.shields.io/npm/l/react-chessboard.svg?style=flat-square\r\n[prs]: https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github\r\n[version]: https://www.npmjs.com/package/react-chessboard\r\n[license]: https://github.com/Clariity/react-chessboard/blob/main/LICENSE\r\n","readmeFilename":"README.md","gitHead":"2267e97c10c5781aead9b3de79924c3bda473298","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@2.0.0","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-B2FIUSCNhJlPRG8jo6I+FyliJvP7PuvMdk95Q56QE9HcZi8BWMubzRHNNb8NwW3KQj9/Jy2tM3gRQw/dhax6nQ==","shasum":"1fcc97db4fa68aefa3ce6a2103392b5617d70aa8","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-2.0.0.tgz","fileCount":63,"unpackedSize":190942,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGrqbONqD2shAzSzEUes+S5lRw2mSNLhoWr+ID+SlUQ3AiEAp30wzv5oRActGevt9/7CF7hQXcdzRjjfZHYfNcsg6F0="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjsxkyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmorIg//W4QYD20xiIzprScIwJAMsaOP42CQU/vLEBGqVQ3q0a3BMbOS\r\neeTe6WCaWLs1Ab1VHCIF/BUV8R1xWlapibwdKvH7pcCA7kvEbS477EEFTKTC\r\nssSoplWTIrYCRs3R+joeDtaC7inpcZ/iN1Xg7WwlMus4DefAgvOWLlJftPeu\r\neVXIEZ5H9T9F6EKqZ/W50E9vPhkpnkQHBHTkJ5GIkSmKgaRmvA82sowNB81S\r\nI1cho1x/RG9GfsSDABuW2cVwT2ybfTAKmb6MvXMLZQwuXn4AMgrqqaTmLerI\r\n/PCHbh3Wsgh96qDCtLPIbiuJVthbv4pwqe9WZsD/dZYbIal0orgDhJepWiMC\r\nwrnaYgnXrimHYMWAKsMhZ1KxSaZZdyOZPdP13AQ8g6H5HiUsgQomYg6VDJhf\r\nHkaRuomRgM7l43Ty0aIZBCbpSt4MAleLQJ/eS/tcuV8nkEm9Yx0L1hUiI3b1\r\ncIjmx9DTL+JRGq3ny5aHq1zKG6uERFFJ/fUAC9qXJfDo2OqZpHDU3yYRZyof\r\n0Nji8eTEH8JLT1tDKNN06LHfUnoJoFoKbzN1blvTyfFkV7P/BFcNPn1dU+wa\r\nvHmGBMWCJkpFtg1IpEFDgGUzPVDOb36dq/CfRZX01igsGlI4DAld1vhsmqHP\r\nyUiQ3u+YP4U1dstTJ+TMdkqQl+/k+mtt7vQ=\r\n=VWnf\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_2.0.0_1672681778272_0.7540983055289796"},"_hasShrinkwrap":false},"2.0.1":{"name":"react-chessboard","version":"2.0.1","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/cjs/index.js","module":"dist/esm/index.js","scripts":{"build":"rm -rf /dist && npm run build:esm && npm run build:cjs","build:esm":"tsc","build:cjs":"tsc --module CommonJS --outDir dist/cjs","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"types":"./dist/cjs/index.d.ts","readme":"<div align=\"center\" markdown=\"1\">\r\n\r\n# [react-chessboard](https://react-chessboard.com)\r\n\r\n<img src=\"./media/chessboard.png\" alt=\"react chessboard\" width=\"300\">\r\n\r\n## The React Chessboard Library used at [ChessOpenings.co.uk](https://chessopenings.co.uk)\r\n\r\n### Inspired and adapted from the unmaintained [chessboardjsx](https://github.com/willb335/chessboardjsx)\r\n\r\n[![Pull Requests][prs-badge]][prs] [![Version][version-badge]][version] [![MIT License][license-badge]][license]\r\n\r\n</div>\r\n\r\n## What is react-chessboard?\r\n\r\nreact-chessboard is a React component that provides chessboard functionality to your application. The Chess game logic that controls the board should be independent to the board, using a library such as [Chess.js](https://github.com/jhlywa/chess.js). An example of these two working together is shown [in the example below](#basic-example). For interactive examples visit [react-chessboard.com](https://react-chessboard.com).\r\n\r\n[ChessOpenings.co.uk](https://chessopenings.co.uk) was originally built utilising the [chessboardjsx](https://github.com/willb335/chessboardjsx) library. With [chessboardjsx](https://github.com/willb335/chessboardjsx) being unmaintained, it made it difficult to add functionality or optimise performance, so react-chessboard was made.\r\n\r\n## Installation\r\n\r\n```\r\nnpm i react-chessboard\r\n```\r\n\r\n## Features\r\n\r\n### Current\r\n\r\n- Accessible Functions\r\n  - `chessboardRef.current.clearPremoves();`, takes optional boolean parameter `clearLastPieceColour` to allow/disallow further premoves of the last moved piece color. `Default: true`\r\n- Board Orientation Choice\r\n- Custom Actions\r\n  - getPositionObject\r\n  - onArrowsChange\r\n  - onDragOverSquare\r\n  - onMouseOutSquare\r\n  - onMouseOverSquare\r\n  - onPieceClick\r\n  - onPieceDragBegin\r\n  - onPieceDragEnd\r\n  - onPieceDrop\r\n  - onSquareClick\r\n  - onSquareRightClick\r\n- Customisable Board Styles\r\n- Customisable Pieces\r\n- Customisable Square Styles\r\n- Drag and Drop\r\n- Draw Arrows with Drag or Props\r\n- Mobile Compatibility\r\n- Moving Piece Animations\r\n- Optional Square Coordinates Notation\r\n- Position Control\r\n- Premoves\r\n- Responsive Board Width\r\n- TypeScript Support\r\n\r\n### Planned\r\n\r\n- Promotion Piece Select\r\n- Spare Pieces\r\n\r\n### Notes\r\n\r\n- Between version 0.0.3 and 0.0.4, onPieceDrop was changed to allow you to return a value of `true` or `false` depending on whether the move was successful or not.\r\n- If more than one board is rendered and draggable on a low end device, performance will struggle due to performance issues with react-dnd.\r\n- In the rare case that react-chessboard component is hot swapped out for another in its place, this will cause an issue with the CustomDragLayer. To prevent this, the react-chessboard component needs to be completely unmounted before being replaced.\r\n\r\n## Usage\r\n\r\n### Bare Minimum\r\n\r\n```jsx\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Chessboard id=\"BasicBoard\" />\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\n### Basic Example\r\n\r\n```jsx\r\nimport { useState } from \"react\";\r\nimport Chess from \"chess.js\";\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function PlayRandomMoveEngine() {\r\n  const [game, setGame] = useState(new Chess());\r\n\r\n  function makeAMove(move) {\r\n    const gameCopy = { ...game };\r\n    const result = gameCopy.move(move);\r\n    setGame(gameCopy);\r\n    return result; // null if the move was illegal, the move object if the move was legal\r\n  }\r\n\r\n  function makeRandomMove() {\r\n    const possibleMoves = game.moves();\r\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return; // exit if the game is over\r\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);\r\n    makeAMove(possibleMoves[randomIndex]);\r\n  }\r\n\r\n  function onDrop(sourceSquare, targetSquare) {\r\n    const move = makeAMove({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: \"q\", // always promote to a queen for example simplicity\r\n    });\r\n\r\n    // illegal move\r\n    if (move === null) return false;\r\n\r\n    setTimeout(makeRandomMove, 200);\r\n    return true;\r\n  }\r\n\r\n  return <Chessboard position={game.fen()} onPieceDrop={onDrop} />;\r\n}\r\n```\r\n\r\n### Advanced Examples\r\n\r\nFor more advanced code usage examples, please see example boards shown in [`example/src/boards`](https://github.com/Clariity/react-chessboard/tree/main/example/src/boards).\r\n\r\n### Props\r\n\r\n| Prop                          | Default Value                                                     | Options                                            | Description                                                                                                                                                                                                                                                                                                                                                                          |\r\n| ----------------------------- | ----------------------------------------------------------------- | -------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r\n| animationDuration             | number: 300                                                       |                                                    | Time in milliseconds for piece to slide to target square. Only used when the position is programmatically changed. If a new position is set before the animation is complete, the board will cancel the current animation and snap to the new position.                                                                                                                              |\r\n| areArrowsAllowed              | boolean: true                                                     | [true, false]                                      | Whether or not arrows can be drawn with right click and dragging.                                                                                                                                                                                                                                                                                                                    |\r\n| arePiecesDraggable            | boolean: true                                                     | [true, false]                                      | Whether or not all pieces are draggable.                                                                                                                                                                                                                                                                                                                                             |\r\n| arePremovesAllowed            | boolean: false                                                    | [true, false]                                      | Whether or not premoves are allowed.                                                                                                                                                                                                                                                                                                                                                 |\r\n| boardOrientation              | string: 'white'                                                   | ['white', 'black']                                 | The orientation of the board, the chosen colour will be at the bottom of the board.                                                                                                                                                                                                                                                                                                  |\r\n| boardWidth                    | number: 560                                                       |                                                    | The width of the board in pixels.                                                                                                                                                                                                                                                                                                                                                    |\r\n| clearPremovesOnRightClick     | boolean: true                                                     | [true, false]                                      | If premoves are allowed, whether or not to clear the premove queue on right click.                                                                                                                                                                                                                                                                                                   |\r\n| customArrowColor              | string: 'rgb(255,170,0)'                                          | rgb or hex string                                  | String with rgb or hex value to colour drawn arrows.                                                                                                                                                                                                                                                                                                                                 |\r\n| customArrows                  | string[][]: []                                                    | array of string arrays                             | Array of custom arrows to draw on the board. Each arrow within the array must be an array of length 2 with strings denoting the from and to square to draw the arrow e.g. [ ['a3', 'a5'], ['g1', 'f3'] ].                                                                                                                                                                            |\r\n| customBoardStyle              | object: {}                                                        | inline CSS styling                                 | Custom board style object e.g. { borderRadius: '5px', boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5 '}.                                                                                                                                                                                                                                                                                   |\r\n| customDarkSquareStyle         | object: { backgroundColor: '#B58863' }                            | inline CSS styling                                 | Custom dark square style object.                                                                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackend              | BackendFactory: undefined                                         |                                                    | Custom react-dnd backend to use instead of the one provided by react-chessboard.                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackendOptions       | any: undefined                                                    |                                                    | Options to use for the given custom react-dnd backend. See customDndBackend.                                                                                                                                                                                                                                                                                                         |\r\n| customDropSquareStyle         | object: { boxShadow: 'inset 0 0 1px 6px rgba(255,255,255,0.75)' } | inline CSS styling                                 | Custom drop square style object (Square being hovered over with dragged piece).                                                                                                                                                                                                                                                                                                      |\r\n| customLightSquareStyle        | object: { backgroundColor: '#F0D9B5' }                            | inline CSS styling                                 | Custom light square style object.                                                                                                                                                                                                                                                                                                                                                    |\r\n| customPieces                  | object: {}                                                        |                                                    | Custom pieces object where each key must match a corresponding chess piece (wP, wB, wN, wR, wQ, wK, bP, bB, bN, bR, bQ, bK). The value of each piece is a function that takes in some optional arguments to use and must return JSX to render. e.g. { wK: ({ isDragging: boolean, squareWidth: number, droppedPiece: string, targetSquare: string, sourceSquare: string }) => jsx }. |\r\n| customPremoveDarkSquareStyle  | object: { backgroundColor: '#A42323' }                            | inline CSS styling                                 | Custom premove dark square style object.                                                                                                                                                                                                                                                                                                                                             |\r\n| customPremoveLightSquareStyle | object: { backgroundColor: '#BD2828' }                            | inline CSS styling                                 | Custom premove light square style object.                                                                                                                                                                                                                                                                                                                                            |\r\n| customSquareStyles            | object: {}                                                        | inline CSS styling                                 | Custom styles for all squares.                                                                                                                                                                                                                                                                                                                                                       |\r\n| id                            | number: 0                                                         | [string, number]                                   | Board identifier, necessary if more than one board is mounted for drag and drop.                                                                                                                                                                                                                                                                                                     |\r\n| isDraggablePiece              | function: ({ piece, sourceSquare }) => true                       | returns [true, false]                              | Function called when a piece drag is attempted. Returns if piece is draggable.                                                                                                                                                                                                                                                                                                       |\r\n| getPositionObject             | function: (currentPosition) => {}                                 |                                                    | User function that receives current position object when position changes.                                                                                                                                                                                                                                                                                                           |\r\n| onArrowsChange                | function: (squares) => {}                                         |                                                    | User function is run when arrows are set on the board.                                                                                                                                                                                                                                                                                                                               |\r\n| onDragOverSquare              | function: (square) => {}                                          |                                                    | User function that is run when piece is dragged over a square.                                                                                                                                                                                                                                                                                                                       |\r\n| onMouseOutSquare              | function: (square) => {}                                          |                                                    | User function that is run when mouse leaves a square.                                                                                                                                                                                                                                                                                                                                |\r\n| onMouseOverSquare             | function: (square) => {}                                          |                                                    | User function that is run when mouse is over a square.                                                                                                                                                                                                                                                                                                                               |\r\n| onPieceClick                  | function: (piece) => {}                                           |                                                    | User function that is run when piece is clicked.                                                                                                                                                                                                                                                                                                                                     |\r\n| onPieceDragBegin              | function: (piece, sourceSquare) => {}                             |                                                    | User function that is run when piece is grabbed to start dragging.                                                                                                                                                                                                                                                                                                                   |\r\n| onPieceDragEnd                | function: (piece, sourceSquare) => {}                             |                                                    | User function that is run when piece is let go after dragging.                                                                                                                                                                                                                                                                                                                       |\r\n| onPieceDrop                   | function: (sourceSquare, targetSquare, piece) => true             | returns [true, false]                              | User function that is run when piece is dropped on a square. Must return whether the move was successful or not. This return value does not control whether or not the piece was placed (as that is controlled by the `position` prop) but instead controls premove logic.                                                                                                           |\r\n| onSquareClick                 | function: (square) => {}                                          |                                                    | User function that is run when a square is clicked.                                                                                                                                                                                                                                                                                                                                  |\r\n| onSquareRightClick            | function: (square) => {}                                          |                                                    | User function that is run when a square is right clicked.                                                                                                                                                                                                                                                                                                                            |\r\n| position                      | string: 'start'                                                   | ['start', FEN string, { e5: 'wK', e4: 'wP', ... }] | FEN string or position object notating where the chess pieces are on the board. Start position can also be notated with the string: 'start'.                                                                                                                                                                                                                                         |\r\n| showBoardNotation             | boolean: true                                                     | [true, false]                                      | Whether or not to show the file and rank co-ordinates (a..h, 1..8).                                                                                                                                                                                                                                                                                                                  |\r\n| snapToCursor                  | boolean: true                                                     | [true, false]                                      | Whether or not to center dragged pieces on the mouse cursor.                                                                                                                                                                                                                                                                                                                         |\r\n\r\n## Contributing\r\n\r\n1. Fork this repository\r\n2. Clone your forked repository onto your development machine\r\n   `git clone https://github.com/yourUsernameHere/react-chessboard.git`\r\n   `cd react-chessboard`\r\n3. Create a branch for your PR\r\n   `git checkout -b your-branch-name`\r\n4. Set upstream remote\r\n   `git remote add upstream https://github.com/Clariity/react-chessboard.git`\r\n5. Make your changes\r\n6. Test your changes using the example folder\r\n   `npm run build`\r\n   `cd example`\r\n   `npm start`\r\n7. Push your changes\r\n   `git add .`\r\n   `git commit -m \"feature/cool-new-feature\"`\r\n   `git push --set-upstream origin your-branch-name`\r\n8. Create pull request on GitHub\r\n9. Contribute again\r\n   `git checkout main`\r\n   `git pull upstream main`\r\n   `git checkout -b your-new-branch-name`\r\n\r\n## LICENSE\r\n\r\nMIT\r\n\r\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\r\n[version-badge]: https://img.shields.io/npm/v/react-chessboard.svg?style=flat-square\r\n[license-badge]: https://img.shields.io/npm/l/react-chessboard.svg?style=flat-square\r\n[prs]: https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github\r\n[version]: https://www.npmjs.com/package/react-chessboard\r\n[license]: https://github.com/Clariity/react-chessboard/blob/main/LICENSE\r\n","readmeFilename":"README.md","gitHead":"fd66fd1eba5280a5ed8824fa39f303116c612327","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@2.0.1","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-GrEyOYQr/QnFkWnzxp4njqOXgEa+B+BrHxzj+NGYlAgSZmwT+IMOvurOzvOpObFnDrStir1VDhnkCkoEb6tdcg==","shasum":"a7ace68eb1c7345a7757ef68f4b9e0cb10918f0d","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-2.0.1.tgz","fileCount":63,"unpackedSize":190946,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGG3yINhvn0NR+vUwkvbbdTUmFTdjxdNqpu2LzlEYclrAiEA12dZb4H3Cv6xxECc/aU23srBl/fXTuu66l1OiVb10/Q="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjsx5hACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqkdw//cHFpqLroGvinCVAL7DIu6bimpcpXOVzGJl/7HveoNPQqWlKR\r\nf0JKebOBiL3vCkGJjSTc5CHLZJM7UIqjdcP3SdttHj20TiPkQcmtAxLOBg9f\r\nel/P3V3BUkg8MypF8bZ9K3tZ7u8cxWKo7dxFqmK5I0IR2MlPDOJx+GIU9TLM\r\nZNgZYTSIti+6QV7KPC1ansC6EVdfOylWvYtHME1e1NahreRusPiAq/cdxx7m\r\nPVeD3adtf+CMRH/iZVqkL70fN+EgIlBSJJGQxGp+dR+mlE6q6AhIFL62woNi\r\n/t7RM/pZmN+skY246Ye4xzbIELh1iO72KbGU6dv3ySL3Iq65b8HxLZFyL/jH\r\nJ7eUN1bK0oHMvq89C0347S3X+zRFwOgwD128PfmfV/u6LgFAg2yQ1fv/pPiN\r\novhuELn3Eelx2PPKjO7xjhmZ+zwRrrSn375EUTK2SwFQghUWRSYXRAtXEEw3\r\nfsmC0HdX4DIgRk+SDfgVBgp6wNM+oy5fVEtkrr4LZ3DPHOGXPWUhOgG/HP/p\r\nh19h9TvLxKkuGmM56b4AE1rVjftrIe3eUG82FBeZP3nGJqIkfJdoZgNv3mdw\r\nq02m0jXUjVElCOvI6p8lhskc/Gs1C4v8QCe24QRlTRoaD9kB7hsbHp3U7xQ0\r\n6tQ9B/a/rnA6Tie8PBokeAk2oFmgGj5Qm2Y=\r\n=gpq5\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_2.0.1_1672683105625_0.021756661842776026"},"_hasShrinkwrap":false},"2.0.2":{"name":"react-chessboard","version":"2.0.2","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","scripts":{"build":"rm -rf /dist && tsc","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"types":"./dist/index.d.ts","readme":"<div align=\"center\" markdown=\"1\">\r\n\r\n# [react-chessboard](https://react-chessboard.com)\r\n\r\n<img src=\"./media/chessboard.png\" alt=\"react chessboard\" width=\"300\">\r\n\r\n## The React Chessboard Library used at [ChessOpenings.co.uk](https://chessopenings.co.uk)\r\n\r\n### Inspired and adapted from the unmaintained [chessboardjsx](https://github.com/willb335/chessboardjsx)\r\n\r\n[![Pull Requests][prs-badge]][prs] [![Version][version-badge]][version] [![MIT License][license-badge]][license]\r\n\r\n</div>\r\n\r\n## What is react-chessboard?\r\n\r\nreact-chessboard is a React component that provides chessboard functionality to your application. The Chess game logic that controls the board should be independent to the board, using a library such as [Chess.js](https://github.com/jhlywa/chess.js). An example of these two working together is shown [in the example below](#basic-example). For interactive examples visit [react-chessboard.com](https://react-chessboard.com).\r\n\r\n[ChessOpenings.co.uk](https://chessopenings.co.uk) was originally built utilising the [chessboardjsx](https://github.com/willb335/chessboardjsx) library. With [chessboardjsx](https://github.com/willb335/chessboardjsx) being unmaintained, it made it difficult to add functionality or optimise performance, so react-chessboard was made.\r\n\r\n## Installation\r\n\r\n```\r\nnpm i react-chessboard\r\n```\r\n\r\n## Features\r\n\r\n### Current\r\n\r\n- Accessible Functions\r\n  - `chessboardRef.current.clearPremoves();`, takes optional boolean parameter `clearLastPieceColour` to allow/disallow further premoves of the last moved piece color. `Default: true`\r\n- Board Orientation Choice\r\n- Custom Actions\r\n  - getPositionObject\r\n  - onArrowsChange\r\n  - onDragOverSquare\r\n  - onMouseOutSquare\r\n  - onMouseOverSquare\r\n  - onPieceClick\r\n  - onPieceDragBegin\r\n  - onPieceDragEnd\r\n  - onPieceDrop\r\n  - onSquareClick\r\n  - onSquareRightClick\r\n- Customisable Board Styles\r\n- Customisable Pieces\r\n- Customisable Square Styles\r\n- Drag and Drop\r\n- Draw Arrows with Drag or Props\r\n- Mobile Compatibility\r\n- Moving Piece Animations\r\n- Optional Square Coordinates Notation\r\n- Position Control\r\n- Premoves\r\n- Responsive Board Width\r\n- TypeScript Support\r\n\r\n### Planned\r\n\r\n- Promotion Piece Select\r\n- Spare Pieces\r\n\r\n### Notes\r\n\r\n- Between version 0.0.3 and 0.0.4, onPieceDrop was changed to allow you to return a value of `true` or `false` depending on whether the move was successful or not.\r\n- If more than one board is rendered and draggable on a low end device, performance will struggle due to performance issues with react-dnd.\r\n- In the rare case that react-chessboard component is hot swapped out for another in its place, this will cause an issue with the CustomDragLayer. To prevent this, the react-chessboard component needs to be completely unmounted before being replaced.\r\n\r\n## Usage\r\n\r\n### Bare Minimum\r\n\r\n```jsx\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Chessboard id=\"BasicBoard\" />\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\n### Basic Example\r\n\r\n```jsx\r\nimport { useState } from \"react\";\r\nimport Chess from \"chess.js\";\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function PlayRandomMoveEngine() {\r\n  const [game, setGame] = useState(new Chess());\r\n\r\n  function makeAMove(move) {\r\n    const gameCopy = { ...game };\r\n    const result = gameCopy.move(move);\r\n    setGame(gameCopy);\r\n    return result; // null if the move was illegal, the move object if the move was legal\r\n  }\r\n\r\n  function makeRandomMove() {\r\n    const possibleMoves = game.moves();\r\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return; // exit if the game is over\r\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);\r\n    makeAMove(possibleMoves[randomIndex]);\r\n  }\r\n\r\n  function onDrop(sourceSquare, targetSquare) {\r\n    const move = makeAMove({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: \"q\", // always promote to a queen for example simplicity\r\n    });\r\n\r\n    // illegal move\r\n    if (move === null) return false;\r\n\r\n    setTimeout(makeRandomMove, 200);\r\n    return true;\r\n  }\r\n\r\n  return <Chessboard position={game.fen()} onPieceDrop={onDrop} />;\r\n}\r\n```\r\n\r\n### Advanced Examples\r\n\r\nFor more advanced code usage examples, please see example boards shown in [`example/src/boards`](https://github.com/Clariity/react-chessboard/tree/main/example/src/boards).\r\n\r\n### Props\r\n\r\n| Prop                          | Default Value                                                     | Options                                            | Description                                                                                                                                                                                                                                                                                                                                                                          |\r\n| ----------------------------- | ----------------------------------------------------------------- | -------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r\n| animationDuration             | number: 300                                                       |                                                    | Time in milliseconds for piece to slide to target square. Only used when the position is programmatically changed. If a new position is set before the animation is complete, the board will cancel the current animation and snap to the new position.                                                                                                                              |\r\n| areArrowsAllowed              | boolean: true                                                     | [true, false]                                      | Whether or not arrows can be drawn with right click and dragging.                                                                                                                                                                                                                                                                                                                    |\r\n| arePiecesDraggable            | boolean: true                                                     | [true, false]                                      | Whether or not all pieces are draggable.                                                                                                                                                                                                                                                                                                                                             |\r\n| arePremovesAllowed            | boolean: false                                                    | [true, false]                                      | Whether or not premoves are allowed.                                                                                                                                                                                                                                                                                                                                                 |\r\n| boardOrientation              | string: 'white'                                                   | ['white', 'black']                                 | The orientation of the board, the chosen colour will be at the bottom of the board.                                                                                                                                                                                                                                                                                                  |\r\n| boardWidth                    | number: 560                                                       |                                                    | The width of the board in pixels.                                                                                                                                                                                                                                                                                                                                                    |\r\n| clearPremovesOnRightClick     | boolean: true                                                     | [true, false]                                      | If premoves are allowed, whether or not to clear the premove queue on right click.                                                                                                                                                                                                                                                                                                   |\r\n| customArrowColor              | string: 'rgb(255,170,0)'                                          | rgb or hex string                                  | String with rgb or hex value to colour drawn arrows.                                                                                                                                                                                                                                                                                                                                 |\r\n| customArrows                  | string[][]: []                                                    | array of string arrays                             | Array of custom arrows to draw on the board. Each arrow within the array must be an array of length 2 with strings denoting the from and to square to draw the arrow e.g. [ ['a3', 'a5'], ['g1', 'f3'] ].                                                                                                                                                                            |\r\n| customBoardStyle              | object: {}                                                        | inline CSS styling                                 | Custom board style object e.g. { borderRadius: '5px', boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5 '}.                                                                                                                                                                                                                                                                                   |\r\n| customDarkSquareStyle         | object: { backgroundColor: '#B58863' }                            | inline CSS styling                                 | Custom dark square style object.                                                                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackend              | BackendFactory: undefined                                         |                                                    | Custom react-dnd backend to use instead of the one provided by react-chessboard.                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackendOptions       | any: undefined                                                    |                                                    | Options to use for the given custom react-dnd backend. See customDndBackend.                                                                                                                                                                                                                                                                                                         |\r\n| customDropSquareStyle         | object: { boxShadow: 'inset 0 0 1px 6px rgba(255,255,255,0.75)' } | inline CSS styling                                 | Custom drop square style object (Square being hovered over with dragged piece).                                                                                                                                                                                                                                                                                                      |\r\n| customLightSquareStyle        | object: { backgroundColor: '#F0D9B5' }                            | inline CSS styling                                 | Custom light square style object.                                                                                                                                                                                                                                                                                                                                                    |\r\n| customPieces                  | object: {}                                                        |                                                    | Custom pieces object where each key must match a corresponding chess piece (wP, wB, wN, wR, wQ, wK, bP, bB, bN, bR, bQ, bK). The value of each piece is a function that takes in some optional arguments to use and must return JSX to render. e.g. { wK: ({ isDragging: boolean, squareWidth: number, droppedPiece: string, targetSquare: string, sourceSquare: string }) => jsx }. |\r\n| customPremoveDarkSquareStyle  | object: { backgroundColor: '#A42323' }                            | inline CSS styling                                 | Custom premove dark square style object.                                                                                                                                                                                                                                                                                                                                             |\r\n| customPremoveLightSquareStyle | object: { backgroundColor: '#BD2828' }                            | inline CSS styling                                 | Custom premove light square style object.                                                                                                                                                                                                                                                                                                                                            |\r\n| customSquareStyles            | object: {}                                                        | inline CSS styling                                 | Custom styles for all squares.                                                                                                                                                                                                                                                                                                                                                       |\r\n| id                            | number: 0                                                         | [string, number]                                   | Board identifier, necessary if more than one board is mounted for drag and drop.                                                                                                                                                                                                                                                                                                     |\r\n| isDraggablePiece              | function: ({ piece, sourceSquare }) => true                       | returns [true, false]                              | Function called when a piece drag is attempted. Returns if piece is draggable.                                                                                                                                                                                                                                                                                                       |\r\n| getPositionObject             | function: (currentPosition) => {}                                 |                                                    | User function that receives current position object when position changes.                                                                                                                                                                                                                                                                                                           |\r\n| onArrowsChange                | function: (squares) => {}                                         |                                                    | User function is run when arrows are set on the board.                                                                                                                                                                                                                                                                                                                               |\r\n| onDragOverSquare              | function: (square) => {}                                          |                                                    | User function that is run when piece is dragged over a square.                                                                                                                                                                                                                                                                                                                       |\r\n| onMouseOutSquare              | function: (square) => {}                                          |                                                    | User function that is run when mouse leaves a square.                                                                                                                                                                                                                                                                                                                                |\r\n| onMouseOverSquare             | function: (square) => {}                                          |                                                    | User function that is run when mouse is over a square.                                                                                                                                                                                                                                                                                                                               |\r\n| onPieceClick                  | function: (piece) => {}                                           |                                                    | User function that is run when piece is clicked.                                                                                                                                                                                                                                                                                                                                     |\r\n| onPieceDragBegin              | function: (piece, sourceSquare) => {}                             |                                                    | User function that is run when piece is grabbed to start dragging.                                                                                                                                                                                                                                                                                                                   |\r\n| onPieceDragEnd                | function: (piece, sourceSquare) => {}                             |                                                    | User function that is run when piece is let go after dragging.                                                                                                                                                                                                                                                                                                                       |\r\n| onPieceDrop                   | function: (sourceSquare, targetSquare, piece) => true             | returns [true, false]                              | User function that is run when piece is dropped on a square. Must return whether the move was successful or not. This return value does not control whether or not the piece was placed (as that is controlled by the `position` prop) but instead controls premove logic.                                                                                                           |\r\n| onSquareClick                 | function: (square) => {}                                          |                                                    | User function that is run when a square is clicked.                                                                                                                                                                                                                                                                                                                                  |\r\n| onSquareRightClick            | function: (square) => {}                                          |                                                    | User function that is run when a square is right clicked.                                                                                                                                                                                                                                                                                                                            |\r\n| position                      | string: 'start'                                                   | ['start', FEN string, { e5: 'wK', e4: 'wP', ... }] | FEN string or position object notating where the chess pieces are on the board. Start position can also be notated with the string: 'start'.                                                                                                                                                                                                                                         |\r\n| showBoardNotation             | boolean: true                                                     | [true, false]                                      | Whether or not to show the file and rank co-ordinates (a..h, 1..8).                                                                                                                                                                                                                                                                                                                  |\r\n| snapToCursor                  | boolean: true                                                     | [true, false]                                      | Whether or not to center dragged pieces on the mouse cursor.                                                                                                                                                                                                                                                                                                                         |\r\n\r\n## Contributing\r\n\r\n1. Fork this repository\r\n2. Clone your forked repository onto your development machine\r\n   `git clone https://github.com/yourUsernameHere/react-chessboard.git`\r\n   `cd react-chessboard`\r\n3. Create a branch for your PR\r\n   `git checkout -b your-branch-name`\r\n4. Set upstream remote\r\n   `git remote add upstream https://github.com/Clariity/react-chessboard.git`\r\n5. Make your changes\r\n6. Test your changes using the example folder\r\n   `npm run build`\r\n   `cd example`\r\n   `npm start`\r\n7. Push your changes\r\n   `git add .`\r\n   `git commit -m \"feature/cool-new-feature\"`\r\n   `git push --set-upstream origin your-branch-name`\r\n8. Create pull request on GitHub\r\n9. Contribute again\r\n   `git checkout main`\r\n   `git pull upstream main`\r\n   `git checkout -b your-new-branch-name`\r\n\r\n## LICENSE\r\n\r\nMIT\r\n\r\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\r\n[version-badge]: https://img.shields.io/npm/v/react-chessboard.svg?style=flat-square\r\n[license-badge]: https://img.shields.io/npm/l/react-chessboard.svg?style=flat-square\r\n[prs]: https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github\r\n[version]: https://www.npmjs.com/package/react-chessboard\r\n[license]: https://github.com/Clariity/react-chessboard/blob/main/LICENSE\r\n","readmeFilename":"README.md","gitHead":"73fac6191075db615cf5bdbe86bda56eb237cd7c","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@2.0.2","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-eFVFhXe89RThHnWkDrpzWpgcehEEoNaeB7AHu9DPYdU2wWdjU4sVzOgDXvyJzPe4LAUXHBGlZusheYCq7Zk7rg==","shasum":"f712b9b50c07134a8d2e20686acbb11c531d51db","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-2.0.2.tgz","fileCount":33,"unpackedSize":106257,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEi3Pecf6pYEs/VLMsF9sjWo6MWC4sYxPab19HGaSrjJAiAxEGHs1gS6Jx3gHU4Mx7/75v4Peh125sP7ZszYFCTb3A=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjsyUnACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqMpA//SW7+xYpVzH7lxK4lLttc5IWDte7iEKdxP5XdTkxyLl5AzufD\r\neGi4U/angP+M5ujsvcIdNgpBUZpxL984oLToU4u1Q4H6W1XW621E3gaWPY+0\r\ncog5JK66t9Gcyt06NTB1yrrvgWzXd22pqhteeIjokcSkFRDNrJVD6vtvG70Y\r\n0rdg8Rx939J+4rYuHPPMNO1Om9Spe2uWtH99NgltvCK+m7FbCZD5mG+fZ8Az\r\nt9tSACzxTmFGd1ow3IXy8P8RVIYi1XelreBxQfB5a4sKBzMkHICpqjiXCZ0F\r\n/yMKMfFgb5iq6HW/hE8WThOBTMRX3YKcj/bsLY9cvESMib5a1lkYgEiAeIzX\r\nhVvLUrrWtLZeIhfqEYM7R8poblEW00CNaQIVOQIOBzS1ug7Q9NYYEHVJhRES\r\npNcQmc5Q8UZ/iN5lyrzD2djeAU61ckz3d0y66Ofyt9987ElghzxEnNdfw11L\r\nZZRscR9FrOmzXRAkcZkk0594LyfG8Wno65S8eF0ydrEkMSp6dG+y+M/GNyZ6\r\nMvBCPy/i/2DHmlVaOhrvtMRAw6nA0BevJsjS6+yciLFjRuGvVZ32CakPRTxJ\r\n+TdkemmNPxXKtbHOrZzyqQ7AJu+eUTMIPbBlnCn+1NFphAAw0/KEEEA3YpUO\r\n2uC3iQoWVGKHEZPOeDxuOdy5dVwnveQ3cLA=\r\n=Og84\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_2.0.2_1672684838916_0.4089789791121612"},"_hasShrinkwrap":false},"2.0.3":{"name":"react-chessboard","version":"2.0.3","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","type":"module","scripts":{"build":"rm -rf /dist && tsc","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"types":"./dist/index.d.ts","readme":"<div align=\"center\" markdown=\"1\">\r\n\r\n# [react-chessboard](https://react-chessboard.com)\r\n\r\n<img src=\"./media/chessboard.png\" alt=\"react chessboard\" width=\"300\">\r\n\r\n## The React Chessboard Library used at [ChessOpenings.co.uk](https://chessopenings.co.uk)\r\n\r\n### Inspired and adapted from the unmaintained [chessboardjsx](https://github.com/willb335/chessboardjsx)\r\n\r\n[![Pull Requests][prs-badge]][prs] [![Version][version-badge]][version] [![MIT License][license-badge]][license]\r\n\r\n</div>\r\n\r\n## What is react-chessboard?\r\n\r\nreact-chessboard is a React component that provides chessboard functionality to your application. The Chess game logic that controls the board should be independent to the board, using a library such as [Chess.js](https://github.com/jhlywa/chess.js). An example of these two working together is shown [in the example below](#basic-example). For interactive examples visit [react-chessboard.com](https://react-chessboard.com).\r\n\r\n[ChessOpenings.co.uk](https://chessopenings.co.uk) was originally built utilising the [chessboardjsx](https://github.com/willb335/chessboardjsx) library. With [chessboardjsx](https://github.com/willb335/chessboardjsx) being unmaintained, it made it difficult to add functionality or optimise performance, so react-chessboard was made.\r\n\r\n## Installation\r\n\r\n```\r\nnpm i react-chessboard\r\n```\r\n\r\n## Features\r\n\r\n### Current\r\n\r\n- Accessible Functions\r\n  - `chessboardRef.current.clearPremoves();`, takes optional boolean parameter `clearLastPieceColour` to allow/disallow further premoves of the last moved piece color. `Default: true`\r\n- Board Orientation Choice\r\n- Custom Actions\r\n  - getPositionObject\r\n  - onArrowsChange\r\n  - onDragOverSquare\r\n  - onMouseOutSquare\r\n  - onMouseOverSquare\r\n  - onPieceClick\r\n  - onPieceDragBegin\r\n  - onPieceDragEnd\r\n  - onPieceDrop\r\n  - onSquareClick\r\n  - onSquareRightClick\r\n- Customisable Board Styles\r\n- Customisable Pieces\r\n- Customisable Square Styles\r\n- Drag and Drop\r\n- Draw Arrows with Drag or Props\r\n- Mobile Compatibility\r\n- Moving Piece Animations\r\n- Optional Square Coordinates Notation\r\n- Position Control\r\n- Premoves\r\n- Responsive Board Width\r\n- TypeScript Support\r\n\r\n### Planned\r\n\r\n- Promotion Piece Select\r\n- Spare Pieces\r\n\r\n### Notes\r\n\r\n- Between version 0.0.3 and 0.0.4, onPieceDrop was changed to allow you to return a value of `true` or `false` depending on whether the move was successful or not.\r\n- If more than one board is rendered and draggable on a low end device, performance will struggle due to performance issues with react-dnd.\r\n- In the rare case that react-chessboard component is hot swapped out for another in its place, this will cause an issue with the CustomDragLayer. To prevent this, the react-chessboard component needs to be completely unmounted before being replaced.\r\n\r\n## Usage\r\n\r\n### Bare Minimum\r\n\r\n```jsx\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Chessboard id=\"BasicBoard\" />\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\n### Basic Example\r\n\r\n```jsx\r\nimport { useState } from \"react\";\r\nimport Chess from \"chess.js\";\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function PlayRandomMoveEngine() {\r\n  const [game, setGame] = useState(new Chess());\r\n\r\n  function makeAMove(move) {\r\n    const gameCopy = { ...game };\r\n    const result = gameCopy.move(move);\r\n    setGame(gameCopy);\r\n    return result; // null if the move was illegal, the move object if the move was legal\r\n  }\r\n\r\n  function makeRandomMove() {\r\n    const possibleMoves = game.moves();\r\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return; // exit if the game is over\r\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);\r\n    makeAMove(possibleMoves[randomIndex]);\r\n  }\r\n\r\n  function onDrop(sourceSquare, targetSquare) {\r\n    const move = makeAMove({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: \"q\", // always promote to a queen for example simplicity\r\n    });\r\n\r\n    // illegal move\r\n    if (move === null) return false;\r\n\r\n    setTimeout(makeRandomMove, 200);\r\n    return true;\r\n  }\r\n\r\n  return <Chessboard position={game.fen()} onPieceDrop={onDrop} />;\r\n}\r\n```\r\n\r\n### Advanced Examples\r\n\r\nFor more advanced code usage examples, please see example boards shown in [`example/src/boards`](https://github.com/Clariity/react-chessboard/tree/main/example/src/boards).\r\n\r\n### Props\r\n\r\n| Prop                          | Default Value                                                     | Options                                            | Description                                                                                                                                                                                                                                                                                                                                                                          |\r\n| ----------------------------- | ----------------------------------------------------------------- | -------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r\n| animationDuration             | number: 300                                                       |                                                    | Time in milliseconds for piece to slide to target square. Only used when the position is programmatically changed. If a new position is set before the animation is complete, the board will cancel the current animation and snap to the new position.                                                                                                                              |\r\n| areArrowsAllowed              | boolean: true                                                     | [true, false]                                      | Whether or not arrows can be drawn with right click and dragging.                                                                                                                                                                                                                                                                                                                    |\r\n| arePiecesDraggable            | boolean: true                                                     | [true, false]                                      | Whether or not all pieces are draggable.                                                                                                                                                                                                                                                                                                                                             |\r\n| arePremovesAllowed            | boolean: false                                                    | [true, false]                                      | Whether or not premoves are allowed.                                                                                                                                                                                                                                                                                                                                                 |\r\n| boardOrientation              | string: 'white'                                                   | ['white', 'black']                                 | The orientation of the board, the chosen colour will be at the bottom of the board.                                                                                                                                                                                                                                                                                                  |\r\n| boardWidth                    | number: 560                                                       |                                                    | The width of the board in pixels.                                                                                                                                                                                                                                                                                                                                                    |\r\n| clearPremovesOnRightClick     | boolean: true                                                     | [true, false]                                      | If premoves are allowed, whether or not to clear the premove queue on right click.                                                                                                                                                                                                                                                                                                   |\r\n| customArrowColor              | string: 'rgb(255,170,0)'                                          | rgb or hex string                                  | String with rgb or hex value to colour drawn arrows.                                                                                                                                                                                                                                                                                                                                 |\r\n| customArrows                  | string[][]: []                                                    | array of string arrays                             | Array of custom arrows to draw on the board. Each arrow within the array must be an array of length 2 with strings denoting the from and to square to draw the arrow e.g. [ ['a3', 'a5'], ['g1', 'f3'] ].                                                                                                                                                                            |\r\n| customBoardStyle              | object: {}                                                        | inline CSS styling                                 | Custom board style object e.g. { borderRadius: '5px', boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5 '}.                                                                                                                                                                                                                                                                                   |\r\n| customDarkSquareStyle         | object: { backgroundColor: '#B58863' }                            | inline CSS styling                                 | Custom dark square style object.                                                                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackend              | BackendFactory: undefined                                         |                                                    | Custom react-dnd backend to use instead of the one provided by react-chessboard.                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackendOptions       | any: undefined                                                    |                                                    | Options to use for the given custom react-dnd backend. See customDndBackend.                                                                                                                                                                                                                                                                                                         |\r\n| customDropSquareStyle         | object: { boxShadow: 'inset 0 0 1px 6px rgba(255,255,255,0.75)' } | inline CSS styling                                 | Custom drop square style object (Square being hovered over with dragged piece).                                                                                                                                                                                                                                                                                                      |\r\n| customLightSquareStyle        | object: { backgroundColor: '#F0D9B5' }                            | inline CSS styling                                 | Custom light square style object.                                                                                                                                                                                                                                                                                                                                                    |\r\n| customPieces                  | object: {}                                                        |                                                    | Custom pieces object where each key must match a corresponding chess piece (wP, wB, wN, wR, wQ, wK, bP, bB, bN, bR, bQ, bK). The value of each piece is a function that takes in some optional arguments to use and must return JSX to render. e.g. { wK: ({ isDragging: boolean, squareWidth: number, droppedPiece: string, targetSquare: string, sourceSquare: string }) => jsx }. |\r\n| customPremoveDarkSquareStyle  | object: { backgroundColor: '#A42323' }                            | inline CSS styling                                 | Custom premove dark square style object.                                                                                                                                                                                                                                                                                                                                             |\r\n| customPremoveLightSquareStyle | object: { backgroundColor: '#BD2828' }                            | inline CSS styling                                 | Custom premove light square style object.                                                                                                                                                                                                                                                                                                                                            |\r\n| customSquareStyles            | object: {}                                                        | inline CSS styling                                 | Custom styles for all squares.                                                                                                                                                                                                                                                                                                                                                       |\r\n| id                            | number: 0                                                         | [string, number]                                   | Board identifier, necessary if more than one board is mounted for drag and drop.                                                                                                                                                                                                                                                                                                     |\r\n| isDraggablePiece              | function: ({ piece, sourceSquare }) => true                       | returns [true, false]                              | Function called when a piece drag is attempted. Returns if piece is draggable.                                                                                                                                                                                                                                                                                                       |\r\n| getPositionObject             | function: (currentPosition) => {}                                 |                                                    | User function that receives current position object when position changes.                                                                                                                                                                                                                                                                                                           |\r\n| onArrowsChange                | function: (squares) => {}                                         |                                                    | User function is run when arrows are set on the board.                                                                                                                                                                                                                                                                                                                               |\r\n| onDragOverSquare              | function: (square) => {}                                          |                                                    | User function that is run when piece is dragged over a square.                                                                                                                                                                                                                                                                                                                       |\r\n| onMouseOutSquare              | function: (square) => {}                                          |                                                    | User function that is run when mouse leaves a square.                                                                                                                                                                                                                                                                                                                                |\r\n| onMouseOverSquare             | function: (square) => {}                                          |                                                    | User function that is run when mouse is over a square.                                                                                                                                                                                                                                                                                                                               |\r\n| onPieceClick                  | function: (piece) => {}                                           |                                                    | User function that is run when piece is clicked.                                                                                                                                                                                                                                                                                                                                     |\r\n| onPieceDragBegin              | function: (piece, sourceSquare) => {}                             |                                                    | User function that is run when piece is grabbed to start dragging.                                                                                                                                                                                                                                                                                                                   |\r\n| onPieceDragEnd                | function: (piece, sourceSquare) => {}                             |                                                    | User function that is run when piece is let go after dragging.                                                                                                                                                                                                                                                                                                                       |\r\n| onPieceDrop                   | function: (sourceSquare, targetSquare, piece) => true             | returns [true, false]                              | User function that is run when piece is dropped on a square. Must return whether the move was successful or not. This return value does not control whether or not the piece was placed (as that is controlled by the `position` prop) but instead controls premove logic.                                                                                                           |\r\n| onSquareClick                 | function: (square) => {}                                          |                                                    | User function that is run when a square is clicked.                                                                                                                                                                                                                                                                                                                                  |\r\n| onSquareRightClick            | function: (square) => {}                                          |                                                    | User function that is run when a square is right clicked.                                                                                                                                                                                                                                                                                                                            |\r\n| position                      | string: 'start'                                                   | ['start', FEN string, { e5: 'wK', e4: 'wP', ... }] | FEN string or position object notating where the chess pieces are on the board. Start position can also be notated with the string: 'start'.                                                                                                                                                                                                                                         |\r\n| showBoardNotation             | boolean: true                                                     | [true, false]                                      | Whether or not to show the file and rank co-ordinates (a..h, 1..8).                                                                                                                                                                                                                                                                                                                  |\r\n| snapToCursor                  | boolean: true                                                     | [true, false]                                      | Whether or not to center dragged pieces on the mouse cursor.                                                                                                                                                                                                                                                                                                                         |\r\n\r\n## Contributing\r\n\r\n1. Fork this repository\r\n2. Clone your forked repository onto your development machine\r\n   `git clone https://github.com/yourUsernameHere/react-chessboard.git`\r\n   `cd react-chessboard`\r\n3. Create a branch for your PR\r\n   `git checkout -b your-branch-name`\r\n4. Set upstream remote\r\n   `git remote add upstream https://github.com/Clariity/react-chessboard.git`\r\n5. Make your changes\r\n6. Test your changes using the example folder\r\n   `npm run build`\r\n   `cd example`\r\n   `npm start`\r\n7. Push your changes\r\n   `git add .`\r\n   `git commit -m \"feature/cool-new-feature\"`\r\n   `git push --set-upstream origin your-branch-name`\r\n8. Create pull request on GitHub\r\n9. Contribute again\r\n   `git checkout main`\r\n   `git pull upstream main`\r\n   `git checkout -b your-new-branch-name`\r\n\r\n## LICENSE\r\n\r\nMIT\r\n\r\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\r\n[version-badge]: https://img.shields.io/npm/v/react-chessboard.svg?style=flat-square\r\n[license-badge]: https://img.shields.io/npm/l/react-chessboard.svg?style=flat-square\r\n[prs]: https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github\r\n[version]: https://www.npmjs.com/package/react-chessboard\r\n[license]: https://github.com/Clariity/react-chessboard/blob/main/LICENSE\r\n","readmeFilename":"README.md","gitHead":"aa488cc3e2dc82fcf2d3a41c3887a3f00285e60c","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@2.0.3","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-iCoo3XZqpIyNgfnXrbZR31I9fzOB80K/sXMqgAqEIYXGEm8QgwF7r8APqCmQp/K8UeUDqZMtsmfIulcztpzwQw==","shasum":"eb9127bb26988502f370b26c4c4162e85bc3a603","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-2.0.3.tgz","fileCount":33,"unpackedSize":106338,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBBJ5Fhur7KSPbXOcq2ZBYcjae3k+ese8BXn4IxMSYjvAiAt4x3gBe5H2VAmbGRpIZs19dsq6+w9ynwrMPWIYtzXOw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjsyXaACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmopAg/7BD1OPz+DtnmqEm9rHCmujUGuAz6aOjNspz9N96DaaqJBDsvz\r\njUfW/jM/FcvhPjK7mfuyReJJNnidqh23NexoHjHnpP1fv37gJ16qzd5/Irkf\r\nm9ncL/YksJI6iXTPUddz8GW15xO6l/dhbMUd/H9mLJ3gaqITki7to+Rr0isW\r\nvIPw+0ZsmEjbyIPzW5HWtMjrS/AgV4BG0Kze5KGXzfspaXCifrJmjINDuWc8\r\nTrJVj7PQW2wVyeXcSOUlDlzW2n6Y1T61BRPgNDmAlBJbLtLB+0XjSjo6SfDD\r\ngQVKVahdrt9CkqP2/OegPbBECUnIJrkLbneW3CLqee8Ux0p+ShgKkgVLPWc/\r\nBJJS31ASXPew7U6EYP9McsOWIPcM9vZZWFklGmJr194KcSZx2cBibr7pV+Tn\r\nRRqF2A05wzSD+qUsjJ1TQwZOs4lmkvN9tsJBxRZyeyVdnuYD/O9/23uhLNxU\r\np1FEISyLA19vMHOKKv9iqNREiWkJfxmv5M+ByKv13c5lCV46B3FN18Jjzlh/\r\nARa4XZOaLA5d/IvWmlIBBuaN8oRtmYPkogvuMp1CSkyf/aV7bllxfjvQd1qB\r\ny43VChpjPY0EiH3mZ/ModMkLOuFNPITabfHp0Xfuqox/GrEErM/jgPlIOWJp\r\noMOrqbk273F/3OMBQrFbxyLFU3AAqRmdh18=\r\n=ejxA\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_2.0.3_1672685017880_0.02674141099998284"},"_hasShrinkwrap":false},"2.0.4":{"name":"react-chessboard","version":"2.0.4","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"readme":"<div align=\"center\" markdown=\"1\">\r\n\r\n# [react-chessboard](https://react-chessboard.com)\r\n\r\n<img src=\"./media/chessboard.png\" alt=\"react chessboard\" width=\"300\">\r\n\r\n## The React Chessboard Library used at [ChessOpenings.co.uk](https://chessopenings.co.uk)\r\n\r\n### Inspired and adapted from the unmaintained [chessboardjsx](https://github.com/willb335/chessboardjsx)\r\n\r\n[![Pull Requests][prs-badge]][prs] [![Version][version-badge]][version] [![MIT License][license-badge]][license]\r\n\r\n</div>\r\n\r\n## What is react-chessboard?\r\n\r\nreact-chessboard is a React component that provides chessboard functionality to your application. The Chess game logic that controls the board should be independent to the board, using a library such as [Chess.js](https://github.com/jhlywa/chess.js). An example of these two working together is shown [in the example below](#basic-example). For interactive examples visit [react-chessboard.com](https://react-chessboard.com).\r\n\r\n[ChessOpenings.co.uk](https://chessopenings.co.uk) was originally built utilising the [chessboardjsx](https://github.com/willb335/chessboardjsx) library. With [chessboardjsx](https://github.com/willb335/chessboardjsx) being unmaintained, it made it difficult to add functionality or optimise performance, so react-chessboard was made.\r\n\r\n## Installation\r\n\r\n```\r\nnpm i react-chessboard\r\n```\r\n\r\n## Features\r\n\r\n### Current\r\n\r\n- Accessible Functions\r\n  - `chessboardRef.current.clearPremoves();`, takes optional boolean parameter `clearLastPieceColour` to allow/disallow further premoves of the last moved piece color. `Default: true`\r\n- Board Orientation Choice\r\n- Custom Actions\r\n  - getPositionObject\r\n  - onArrowsChange\r\n  - onDragOverSquare\r\n  - onMouseOutSquare\r\n  - onMouseOverSquare\r\n  - onPieceClick\r\n  - onPieceDragBegin\r\n  - onPieceDragEnd\r\n  - onPieceDrop\r\n  - onSquareClick\r\n  - onSquareRightClick\r\n- Customisable Board Styles\r\n- Customisable Pieces\r\n- Customisable Square Styles\r\n- Drag and Drop\r\n- Draw Arrows with Drag or Props\r\n- Mobile Compatibility\r\n- Moving Piece Animations\r\n- Optional Square Coordinates Notation\r\n- Position Control\r\n- Premoves\r\n- Responsive Board Width\r\n- TypeScript Support\r\n\r\n### Planned\r\n\r\n- Promotion Piece Select\r\n- Spare Pieces\r\n\r\n### Notes\r\n\r\n- Between version 0.0.3 and 0.0.4, onPieceDrop was changed to allow you to return a value of `true` or `false` depending on whether the move was successful or not.\r\n- If more than one board is rendered and draggable on a low end device, performance will struggle due to performance issues with react-dnd.\r\n- In the rare case that react-chessboard component is hot swapped out for another in its place, this will cause an issue with the CustomDragLayer. To prevent this, the react-chessboard component needs to be completely unmounted before being replaced.\r\n\r\n## Usage\r\n\r\n### Bare Minimum\r\n\r\n```jsx\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Chessboard id=\"BasicBoard\" />\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\n### Basic Example\r\n\r\n```jsx\r\nimport { useState } from \"react\";\r\nimport Chess from \"chess.js\";\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function PlayRandomMoveEngine() {\r\n  const [game, setGame] = useState(new Chess());\r\n\r\n  function makeAMove(move) {\r\n    const gameCopy = { ...game };\r\n    const result = gameCopy.move(move);\r\n    setGame(gameCopy);\r\n    return result; // null if the move was illegal, the move object if the move was legal\r\n  }\r\n\r\n  function makeRandomMove() {\r\n    const possibleMoves = game.moves();\r\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return; // exit if the game is over\r\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);\r\n    makeAMove(possibleMoves[randomIndex]);\r\n  }\r\n\r\n  function onDrop(sourceSquare, targetSquare) {\r\n    const move = makeAMove({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: \"q\", // always promote to a queen for example simplicity\r\n    });\r\n\r\n    // illegal move\r\n    if (move === null) return false;\r\n\r\n    setTimeout(makeRandomMove, 200);\r\n    return true;\r\n  }\r\n\r\n  return <Chessboard position={game.fen()} onPieceDrop={onDrop} />;\r\n}\r\n```\r\n\r\n### Advanced Examples\r\n\r\nFor more advanced code usage examples, please see example boards shown in [`example/src/boards`](https://github.com/Clariity/react-chessboard/tree/main/example/src/boards).\r\n\r\n### Props\r\n\r\n| Prop                          | Default Value                                                     | Options                                            | Description                                                                                                                                                                                                                                                                                                                                                                          |\r\n| ----------------------------- | ----------------------------------------------------------------- | -------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r\n| animationDuration             | number: 300                                                       |                                                    | Time in milliseconds for piece to slide to target square. Only used when the position is programmatically changed. If a new position is set before the animation is complete, the board will cancel the current animation and snap to the new position.                                                                                                                              |\r\n| areArrowsAllowed              | boolean: true                                                     | [true, false]                                      | Whether or not arrows can be drawn with right click and dragging.                                                                                                                                                                                                                                                                                                                    |\r\n| arePiecesDraggable            | boolean: true                                                     | [true, false]                                      | Whether or not all pieces are draggable.                                                                                                                                                                                                                                                                                                                                             |\r\n| arePremovesAllowed            | boolean: false                                                    | [true, false]                                      | Whether or not premoves are allowed.                                                                                                                                                                                                                                                                                                                                                 |\r\n| boardOrientation              | string: 'white'                                                   | ['white', 'black']                                 | The orientation of the board, the chosen colour will be at the bottom of the board.                                                                                                                                                                                                                                                                                                  |\r\n| boardWidth                    | number: 560                                                       |                                                    | The width of the board in pixels.                                                                                                                                                                                                                                                                                                                                                    |\r\n| clearPremovesOnRightClick     | boolean: true                                                     | [true, false]                                      | If premoves are allowed, whether or not to clear the premove queue on right click.                                                                                                                                                                                                                                                                                                   |\r\n| customArrowColor              | string: 'rgb(255,170,0)'                                          | rgb or hex string                                  | String with rgb or hex value to colour drawn arrows.                                                                                                                                                                                                                                                                                                                                 |\r\n| customArrows                  | string[][]: []                                                    | array of string arrays                             | Array of custom arrows to draw on the board. Each arrow within the array must be an array of length 2 with strings denoting the from and to square to draw the arrow e.g. [ ['a3', 'a5'], ['g1', 'f3'] ].                                                                                                                                                                            |\r\n| customBoardStyle              | object: {}                                                        | inline CSS styling                                 | Custom board style object e.g. { borderRadius: '5px', boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5 '}.                                                                                                                                                                                                                                                                                   |\r\n| customDarkSquareStyle         | object: { backgroundColor: '#B58863' }                            | inline CSS styling                                 | Custom dark square style object.                                                                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackend              | BackendFactory: undefined                                         |                                                    | Custom react-dnd backend to use instead of the one provided by react-chessboard.                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackendOptions       | any: undefined                                                    |                                                    | Options to use for the given custom react-dnd backend. See customDndBackend.                                                                                                                                                                                                                                                                                                         |\r\n| customDropSquareStyle         | object: { boxShadow: 'inset 0 0 1px 6px rgba(255,255,255,0.75)' } | inline CSS styling                                 | Custom drop square style object (Square being hovered over with dragged piece).                                                                                                                                                                                                                                                                                                      |\r\n| customLightSquareStyle        | object: { backgroundColor: '#F0D9B5' }                            | inline CSS styling                                 | Custom light square style object.                                                                                                                                                                                                                                                                                                                                                    |\r\n| customPieces                  | object: {}                                                        |                                                    | Custom pieces object where each key must match a corresponding chess piece (wP, wB, wN, wR, wQ, wK, bP, bB, bN, bR, bQ, bK). The value of each piece is a function that takes in some optional arguments to use and must return JSX to render. e.g. { wK: ({ isDragging: boolean, squareWidth: number, droppedPiece: string, targetSquare: string, sourceSquare: string }) => jsx }. |\r\n| customPremoveDarkSquareStyle  | object: { backgroundColor: '#A42323' }                            | inline CSS styling                                 | Custom premove dark square style object.                                                                                                                                                                                                                                                                                                                                             |\r\n| customPremoveLightSquareStyle | object: { backgroundColor: '#BD2828' }                            | inline CSS styling                                 | Custom premove light square style object.                                                                                                                                                                                                                                                                                                                                            |\r\n| customSquareStyles            | object: {}                                                        | inline CSS styling                                 | Custom styles for all squares.                                                                                                                                                                                                                                                                                                                                                       |\r\n| id                            | number: 0                                                         | [string, number]                                   | Board identifier, necessary if more than one board is mounted for drag and drop.                                                                                                                                                                                                                                                                                                     |\r\n| isDraggablePiece              | function: ({ piece, sourceSquare }) => true                       | returns [true, false]                              | Function called when a piece drag is attempted. Returns if piece is draggable.                                                                                                                                                                                                                                                                                                       |\r\n| getPositionObject             | function: (currentPosition) => {}                                 |                                                    | User function that receives current position object when position changes.                                                                                                                                                                                                                                                                                                           |\r\n| onArrowsChange                | function: (squares) => {}                                         |                                                    | User function is run when arrows are set on the board.                                                                                                                                                                                                                                                                                                                               |\r\n| onDragOverSquare              | function: (square) => {}                                          |                                                    | User function that is run when piece is dragged over a square.                                                                                                                                                                                                                                                                                                                       |\r\n| onMouseOutSquare              | function: (square) => {}                                          |                                                    | User function that is run when mouse leaves a square.                                                                                                                                                                                                                                                                                                                                |\r\n| onMouseOverSquare             | function: (square) => {}                                          |                                                    | User function that is run when mouse is over a square.                                                                                                                                                                                                                                                                                                                               |\r\n| onPieceClick                  | function: (piece) => {}                                           |                                                    | User function that is run when piece is clicked.                                                                                                                                                                                                                                                                                                                                     |\r\n| onPieceDragBegin              | function: (piece, sourceSquare) => {}                             |                                                    | User function that is run when piece is grabbed to start dragging.                                                                                                                                                                                                                                                                                                                   |\r\n| onPieceDragEnd                | function: (piece, sourceSquare) => {}                             |                                                    | User function that is run when piece is let go after dragging.                                                                                                                                                                                                                                                                                                                       |\r\n| onPieceDrop                   | function: (sourceSquare, targetSquare, piece) => true             | returns [true, false]                              | User function that is run when piece is dropped on a square. Must return whether the move was successful or not. This return value does not control whether or not the piece was placed (as that is controlled by the `position` prop) but instead controls premove logic.                                                                                                           |\r\n| onSquareClick                 | function: (square) => {}                                          |                                                    | User function that is run when a square is clicked.                                                                                                                                                                                                                                                                                                                                  |\r\n| onSquareRightClick            | function: (square) => {}                                          |                                                    | User function that is run when a square is right clicked.                                                                                                                                                                                                                                                                                                                            |\r\n| position                      | string: 'start'                                                   | ['start', FEN string, { e5: 'wK', e4: 'wP', ... }] | FEN string or position object notating where the chess pieces are on the board. Start position can also be notated with the string: 'start'.                                                                                                                                                                                                                                         |\r\n| showBoardNotation             | boolean: true                                                     | [true, false]                                      | Whether or not to show the file and rank co-ordinates (a..h, 1..8).                                                                                                                                                                                                                                                                                                                  |\r\n| snapToCursor                  | boolean: true                                                     | [true, false]                                      | Whether or not to center dragged pieces on the mouse cursor.                                                                                                                                                                                                                                                                                                                         |\r\n\r\n## Contributing\r\n\r\n1. Fork this repository\r\n2. Clone your forked repository onto your development machine\r\n   `git clone https://github.com/yourUsernameHere/react-chessboard.git`\r\n   `cd react-chessboard`\r\n3. Create a branch for your PR\r\n   `git checkout -b your-branch-name`\r\n4. Set upstream remote\r\n   `git remote add upstream https://github.com/Clariity/react-chessboard.git`\r\n5. Make your changes\r\n6. Test your changes using the example folder\r\n   `npm run build`\r\n   `cd example`\r\n   `npm start`\r\n7. Push your changes\r\n   `git add .`\r\n   `git commit -m \"feature/cool-new-feature\"`\r\n   `git push --set-upstream origin your-branch-name`\r\n8. Create pull request on GitHub\r\n9. Contribute again\r\n   `git checkout main`\r\n   `git pull upstream main`\r\n   `git checkout -b your-new-branch-name`\r\n\r\n## LICENSE\r\n\r\nMIT\r\n\r\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\r\n[version-badge]: https://img.shields.io/npm/v/react-chessboard.svg?style=flat-square\r\n[license-badge]: https://img.shields.io/npm/l/react-chessboard.svg?style=flat-square\r\n[prs]: https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github\r\n[version]: https://www.npmjs.com/package/react-chessboard\r\n[license]: https://github.com/Clariity/react-chessboard/blob/main/LICENSE\r\n","readmeFilename":"README.md","gitHead":"d9e6e1394d1c7834e88f241590ea6b1f75cc1ffd","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@2.0.4","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-9XKGqtMAd6MRsw5Ri/WRHsOTjXn1WQbsnXQ/VB3p7O3ADtALdZTx5uGSZR0nXo3BnYWMc/TyHc5qjH452TBOTw==","shasum":"5382272d9c33ebdeaf5283f18ddc2446a2847d53","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-2.0.4.tgz","fileCount":20,"unpackedSize":483173,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDE6RR/zzGpdgysmp3DVh+mEmXhTOMSJk9RxbHkfojuTAIhAJxaQRL65BBopV7+NviuwNWS4CKBnqFnVOB8QpUibQLf"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjsy3BACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr5UQ//Saz18iaZYkleU8L4+ibaP8xySWTzMDwYPVaWGlX7PN4gP2C2\r\n42Ts5cM+f9CpALKLQJojYN5S8M+iMDRolWqsTC2ukWHe4tCSzGT1xnZHLV0B\r\nWDFd3JKm9cG4qJq17lDNqv9xeVO+NPOCGvXPmV/uLVvYM9+T5Qu9NuJWedlK\r\nxGIfkD6nr9sXlc31SWxK3hPq8WUnB95rcZX2xh11s13a4bJpZqsXSIDjwGMg\r\nnU9yLLlYkCxWaiuFL/8h+lO0iyxLWkk3LzVokHDyDkNUC95bm1A0MFmfPwpX\r\nylL4opNQgTMuRiHnM0pcAEzPwLX9tfAldx4Ads+Z7oBppyxNkHQBq8nF30x8\r\n/xEU7MUGcHawYZkj0Ymg6o9L39FwKfW4WA2wOjTLmBBj4BYRFDOIW7nBL4h7\r\nMGWabfAfOi+gJgVRO6P8DDnDMCiW++5Z8ofJaqF7s5dC/mMknOMsBOHsPJMP\r\niqcY+JWYYKUMYY9Du1G6lQoH0PVP7olISxKMg/uRJda//akRNAn4NivK0DZM\r\nhO5oXEJvlChru3SmrbrgjzYxZDZduIOKDOPKyc7csoy/ImCbIW8BHPVFZif9\r\nX9645dOWA9Q3btrD0quHbjDvnFu+y4DdEVc/8GDOJ3D2h9qW7MoaF2/w+LIJ\r\n/YwZF3VICf0cx0auboTp45JCQ7AM3YYIDe0=\r\n=gSpt\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_2.0.4_1672687041239_0.2510281120142672"},"_hasShrinkwrap":false},"2.0.5":{"name":"react-chessboard","version":"2.0.5","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-dts":"^5.1.0","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"readme":"<div align=\"center\" markdown=\"1\">\r\n\r\n# [react-chessboard](https://react-chessboard.com)\r\n\r\n<img src=\"./media/chessboard.png\" alt=\"react chessboard\" width=\"300\">\r\n\r\n## The React Chessboard Library used at [ChessOpenings.co.uk](https://chessopenings.co.uk)\r\n\r\n### Inspired and adapted from the unmaintained [chessboardjsx](https://github.com/willb335/chessboardjsx)\r\n\r\n[![Pull Requests][prs-badge]][prs] [![Version][version-badge]][version] [![MIT License][license-badge]][license]\r\n\r\n</div>\r\n\r\n## What is react-chessboard?\r\n\r\nreact-chessboard is a React component that provides chessboard functionality to your application. The Chess game logic that controls the board should be independent to the board, using a library such as [Chess.js](https://github.com/jhlywa/chess.js). An example of these two working together is shown [in the example below](#basic-example). For interactive examples visit [react-chessboard.com](https://react-chessboard.com).\r\n\r\n[ChessOpenings.co.uk](https://chessopenings.co.uk) was originally built utilising the [chessboardjsx](https://github.com/willb335/chessboardjsx) library. With [chessboardjsx](https://github.com/willb335/chessboardjsx) being unmaintained, it made it difficult to add functionality or optimise performance, so react-chessboard was made.\r\n\r\n## Installation\r\n\r\n```\r\nnpm i react-chessboard\r\n```\r\n\r\n## Features\r\n\r\n### Current\r\n\r\n- Accessible Functions\r\n  - `chessboardRef.current.clearPremoves();`, takes optional boolean parameter `clearLastPieceColour` to allow/disallow further premoves of the last moved piece color. `Default: true`\r\n- Board Orientation Choice\r\n- Custom Actions\r\n  - getPositionObject\r\n  - onArrowsChange\r\n  - onDragOverSquare\r\n  - onMouseOutSquare\r\n  - onMouseOverSquare\r\n  - onPieceClick\r\n  - onPieceDragBegin\r\n  - onPieceDragEnd\r\n  - onPieceDrop\r\n  - onSquareClick\r\n  - onSquareRightClick\r\n- Customisable Board Styles\r\n- Customisable Pieces\r\n- Customisable Square Styles\r\n- Drag and Drop\r\n- Draw Arrows with Drag or Props\r\n- Mobile Compatibility\r\n- Moving Piece Animations\r\n- Optional Square Coordinates Notation\r\n- Position Control\r\n- Premoves\r\n- Responsive Board Width\r\n- TypeScript Support\r\n\r\n### Planned\r\n\r\n- Promotion Piece Select\r\n- Spare Pieces\r\n\r\n### Notes\r\n\r\n- Between version 0.0.3 and 0.0.4, onPieceDrop was changed to allow you to return a value of `true` or `false` depending on whether the move was successful or not.\r\n- If more than one board is rendered and draggable on a low end device, performance will struggle due to performance issues with react-dnd.\r\n- In the rare case that react-chessboard component is hot swapped out for another in its place, this will cause an issue with the CustomDragLayer. To prevent this, the react-chessboard component needs to be completely unmounted before being replaced.\r\n\r\n## Usage\r\n\r\n### Bare Minimum\r\n\r\n```jsx\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Chessboard id=\"BasicBoard\" />\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\n### Basic Example\r\n\r\n```jsx\r\nimport { useState } from \"react\";\r\nimport Chess from \"chess.js\";\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function PlayRandomMoveEngine() {\r\n  const [game, setGame] = useState(new Chess());\r\n\r\n  function makeAMove(move) {\r\n    const gameCopy = { ...game };\r\n    const result = gameCopy.move(move);\r\n    setGame(gameCopy);\r\n    return result; // null if the move was illegal, the move object if the move was legal\r\n  }\r\n\r\n  function makeRandomMove() {\r\n    const possibleMoves = game.moves();\r\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return; // exit if the game is over\r\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);\r\n    makeAMove(possibleMoves[randomIndex]);\r\n  }\r\n\r\n  function onDrop(sourceSquare, targetSquare) {\r\n    const move = makeAMove({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: \"q\", // always promote to a queen for example simplicity\r\n    });\r\n\r\n    // illegal move\r\n    if (move === null) return false;\r\n\r\n    setTimeout(makeRandomMove, 200);\r\n    return true;\r\n  }\r\n\r\n  return <Chessboard position={game.fen()} onPieceDrop={onDrop} />;\r\n}\r\n```\r\n\r\n### Advanced Examples\r\n\r\nFor more advanced code usage examples, please see example boards shown in [`example/src/boards`](https://github.com/Clariity/react-chessboard/tree/main/example/src/boards).\r\n\r\n### Props\r\n\r\n| Prop                          | Default Value                                                     | Options                                            | Description                                                                                                                                                                                                                                                                                                                                                                          |\r\n| ----------------------------- | ----------------------------------------------------------------- | -------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r\n| animationDuration             | number: 300                                                       |                                                    | Time in milliseconds for piece to slide to target square. Only used when the position is programmatically changed. If a new position is set before the animation is complete, the board will cancel the current animation and snap to the new position.                                                                                                                              |\r\n| areArrowsAllowed              | boolean: true                                                     | [true, false]                                      | Whether or not arrows can be drawn with right click and dragging.                                                                                                                                                                                                                                                                                                                    |\r\n| arePiecesDraggable            | boolean: true                                                     | [true, false]                                      | Whether or not all pieces are draggable.                                                                                                                                                                                                                                                                                                                                             |\r\n| arePremovesAllowed            | boolean: false                                                    | [true, false]                                      | Whether or not premoves are allowed.                                                                                                                                                                                                                                                                                                                                                 |\r\n| boardOrientation              | string: 'white'                                                   | ['white', 'black']                                 | The orientation of the board, the chosen colour will be at the bottom of the board.                                                                                                                                                                                                                                                                                                  |\r\n| boardWidth                    | number: 560                                                       |                                                    | The width of the board in pixels.                                                                                                                                                                                                                                                                                                                                                    |\r\n| clearPremovesOnRightClick     | boolean: true                                                     | [true, false]                                      | If premoves are allowed, whether or not to clear the premove queue on right click.                                                                                                                                                                                                                                                                                                   |\r\n| customArrowColor              | string: 'rgb(255,170,0)'                                          | rgb or hex string                                  | String with rgb or hex value to colour drawn arrows.                                                                                                                                                                                                                                                                                                                                 |\r\n| customArrows                  | string[][]: []                                                    | array of string arrays                             | Array of custom arrows to draw on the board. Each arrow within the array must be an array of length 2 with strings denoting the from and to square to draw the arrow e.g. [ ['a3', 'a5'], ['g1', 'f3'] ].                                                                                                                                                                            |\r\n| customBoardStyle              | object: {}                                                        | inline CSS styling                                 | Custom board style object e.g. { borderRadius: '5px', boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5 '}.                                                                                                                                                                                                                                                                                   |\r\n| customDarkSquareStyle         | object: { backgroundColor: '#B58863' }                            | inline CSS styling                                 | Custom dark square style object.                                                                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackend              | BackendFactory: undefined                                         |                                                    | Custom react-dnd backend to use instead of the one provided by react-chessboard.                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackendOptions       | any: undefined                                                    |                                                    | Options to use for the given custom react-dnd backend. See customDndBackend.                                                                                                                                                                                                                                                                                                         |\r\n| customDropSquareStyle         | object: { boxShadow: 'inset 0 0 1px 6px rgba(255,255,255,0.75)' } | inline CSS styling                                 | Custom drop square style object (Square being hovered over with dragged piece).                                                                                                                                                                                                                                                                                                      |\r\n| customLightSquareStyle        | object: { backgroundColor: '#F0D9B5' }                            | inline CSS styling                                 | Custom light square style object.                                                                                                                                                                                                                                                                                                                                                    |\r\n| customPieces                  | object: {}                                                        |                                                    | Custom pieces object where each key must match a corresponding chess piece (wP, wB, wN, wR, wQ, wK, bP, bB, bN, bR, bQ, bK). The value of each piece is a function that takes in some optional arguments to use and must return JSX to render. e.g. { wK: ({ isDragging: boolean, squareWidth: number, droppedPiece: string, targetSquare: string, sourceSquare: string }) => jsx }. |\r\n| customPremoveDarkSquareStyle  | object: { backgroundColor: '#A42323' }                            | inline CSS styling                                 | Custom premove dark square style object.                                                                                                                                                                                                                                                                                                                                             |\r\n| customPremoveLightSquareStyle | object: { backgroundColor: '#BD2828' }                            | inline CSS styling                                 | Custom premove light square style object.                                                                                                                                                                                                                                                                                                                                            |\r\n| customSquareStyles            | object: {}                                                        | inline CSS styling                                 | Custom styles for all squares.                                                                                                                                                                                                                                                                                                                                                       |\r\n| id                            | number: 0                                                         | [string, number]                                   | Board identifier, necessary if more than one board is mounted for drag and drop.                                                                                                                                                                                                                                                                                                     |\r\n| isDraggablePiece              | function: ({ piece, sourceSquare }) => true                       | returns [true, false]                              | Function called when a piece drag is attempted. Returns if piece is draggable.                                                                                                                                                                                                                                                                                                       |\r\n| getPositionObject             | function: (currentPosition) => {}                                 |                                                    | User function that receives current position object when position changes.                                                                                                                                                                                                                                                                                                           |\r\n| onArrowsChange                | function: (squares) => {}                                         |                                                    | User function is run when arrows are set on the board.                                                                                                                                                                                                                                                                                                                               |\r\n| onDragOverSquare              | function: (square) => {}                                          |                                                    | User function that is run when piece is dragged over a square.                                                                                                                                                                                                                                                                                                                       |\r\n| onMouseOutSquare              | function: (square) => {}                                          |                                                    | User function that is run when mouse leaves a square.                                                                                                                                                                                                                                                                                                                                |\r\n| onMouseOverSquare             | function: (square) => {}                                          |                                                    | User function that is run when mouse is over a square.                                                                                                                                                                                                                                                                                                                               |\r\n| onPieceClick                  | function: (piece) => {}                                           |                                                    | User function that is run when piece is clicked.                                                                                                                                                                                                                                                                                                                                     |\r\n| onPieceDragBegin              | function: (piece, sourceSquare) => {}                             |                                                    | User function that is run when piece is grabbed to start dragging.                                                                                                                                                                                                                                                                                                                   |\r\n| onPieceDragEnd                | function: (piece, sourceSquare) => {}                             |                                                    | User function that is run when piece is let go after dragging.                                                                                                                                                                                                                                                                                                                       |\r\n| onPieceDrop                   | function: (sourceSquare, targetSquare, piece) => true             | returns [true, false]                              | User function that is run when piece is dropped on a square. Must return whether the move was successful or not. This return value does not control whether or not the piece was placed (as that is controlled by the `position` prop) but instead controls premove logic.                                                                                                           |\r\n| onSquareClick                 | function: (square) => {}                                          |                                                    | User function that is run when a square is clicked.                                                                                                                                                                                                                                                                                                                                  |\r\n| onSquareRightClick            | function: (square) => {}                                          |                                                    | User function that is run when a square is right clicked.                                                                                                                                                                                                                                                                                                                            |\r\n| position                      | string: 'start'                                                   | ['start', FEN string, { e5: 'wK', e4: 'wP', ... }] | FEN string or position object notating where the chess pieces are on the board. Start position can also be notated with the string: 'start'.                                                                                                                                                                                                                                         |\r\n| showBoardNotation             | boolean: true                                                     | [true, false]                                      | Whether or not to show the file and rank co-ordinates (a..h, 1..8).                                                                                                                                                                                                                                                                                                                  |\r\n| snapToCursor                  | boolean: true                                                     | [true, false]                                      | Whether or not to center dragged pieces on the mouse cursor.                                                                                                                                                                                                                                                                                                                         |\r\n\r\n## Contributing\r\n\r\n1. Fork this repository\r\n2. Clone your forked repository onto your development machine\r\n   `git clone https://github.com/yourUsernameHere/react-chessboard.git`\r\n   `cd react-chessboard`\r\n3. Create a branch for your PR\r\n   `git checkout -b your-branch-name`\r\n4. Set upstream remote\r\n   `git remote add upstream https://github.com/Clariity/react-chessboard.git`\r\n5. Make your changes\r\n6. Test your changes using the example folder\r\n   `npm run build`\r\n   `cd example`\r\n   `npm start`\r\n7. Push your changes\r\n   `git add .`\r\n   `git commit -m \"feature/cool-new-feature\"`\r\n   `git push --set-upstream origin your-branch-name`\r\n8. Create pull request on GitHub\r\n9. Contribute again\r\n   `git checkout main`\r\n   `git pull upstream main`\r\n   `git checkout -b your-new-branch-name`\r\n\r\n## LICENSE\r\n\r\nMIT\r\n\r\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\r\n[version-badge]: https://img.shields.io/npm/v/react-chessboard.svg?style=flat-square\r\n[license-badge]: https://img.shields.io/npm/l/react-chessboard.svg?style=flat-square\r\n[prs]: https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github\r\n[version]: https://www.npmjs.com/package/react-chessboard\r\n[license]: https://github.com/Clariity/react-chessboard/blob/main/LICENSE\r\n","readmeFilename":"README.md","gitHead":"d9e6e1394d1c7834e88f241590ea6b1f75cc1ffd","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@2.0.5","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-9IFFHYtwKTFjg/9qy76q47KPY9ZrUMKx3bzli6inVNmXDjw1FpaM/LCeyldCQQG/gqHYQkuG85+r6/wnR1CnDA==","shasum":"243de350b128452eba932d26e7e7055d58c6b84b","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-2.0.5.tgz","fileCount":6,"unpackedSize":475203,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCRT4YCbDi6Pqzym6JIOJBpbQLAiXo22qa0l1Vs9zVkXQIgc1mMxwbBl2eHh17G+PIThKRWQZbFfOPvXIo/ampMeGA="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjszBtACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpsVhAApI4rFAY525ClPVr5SUIthCmoX+KEB577HAbhE9ZxxQ5FdcfD\r\nDnRXs8Ifw9yuEp0bhayRQsqa6LDXm0HTekyS1zjXHxfMaoFqAg8uz6l+LLka\r\nae7thF0plq3tc1BOq/+5ka78LW0YA1nXLBxfs9zo1unYA99WvByOsjTdFZcX\r\nt0KB+vb+kxmAE4v9uyYOUcHnHf+pGlO5BZCwyIh0UZujIpp56VtlPkkfZHeR\r\ntPNqlrt9zA339dR3uuStDGvaBUoIOHY18ew3On3fL4/AQcDcKTRdH55ZBCq/\r\n0gj+u1PYx0r/4T4vzq3FMyay2DAeF6rpUmZVOIqRd5AhxsNE1SlFHesIwmYp\r\n0KBI6cKZ5PX88DmjuqblzFY2kmlphmly69nKXf5zjtoh8Qd/WbctcoQjjSwD\r\nbmYOf9e/C5m56z+C7TtvYaR70y3tpvqf9Y5fssxjm1YAe2WxFLDiMB/P4i2t\r\n3cmwYY7P5wyMZD4QrTGlAoFslQhXshh2S8xTCQi84lmSzml0JoBD/zvdfXRZ\r\nzK9JmjkHwuVAk30Cspaggg0j3NJhS5AYFsrWVHi5EL6rsBXFLNzBcgsEXLrV\r\nHuAjTX8Tct+ULc5UlPiSw7y2PeyZhml1447bWUMI8hOW8gtMXxZVb5WdFlku\r\n+OgNfAQnvNO21RUQvheGTYeu28NRmuGep3c=\r\n=zWgB\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_2.0.5_1672687725053_0.7889762826754905"},"_hasShrinkwrap":false},"2.0.6":{"name":"react-chessboard","version":"2.0.6","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"readme":"<div align=\"center\" markdown=\"1\">\r\n\r\n# [react-chessboard](https://react-chessboard.com)\r\n\r\n<img src=\"./media/chessboard.png\" alt=\"react chessboard\" width=\"300\">\r\n\r\n## The React Chessboard Library used at [ChessOpenings.co.uk](https://chessopenings.co.uk)\r\n\r\n### Inspired and adapted from the unmaintained [chessboardjsx](https://github.com/willb335/chessboardjsx)\r\n\r\n[![Pull Requests][prs-badge]][prs] [![Version][version-badge]][version] [![MIT License][license-badge]][license]\r\n\r\n</div>\r\n\r\n## What is react-chessboard?\r\n\r\nreact-chessboard is a React component that provides chessboard functionality to your application. The Chess game logic that controls the board should be independent to the board, using a library such as [Chess.js](https://github.com/jhlywa/chess.js). An example of these two working together is shown [in the example below](#basic-example). For interactive examples visit [react-chessboard.com](https://react-chessboard.com).\r\n\r\n[ChessOpenings.co.uk](https://chessopenings.co.uk) was originally built utilising the [chessboardjsx](https://github.com/willb335/chessboardjsx) library. With [chessboardjsx](https://github.com/willb335/chessboardjsx) being unmaintained, it made it difficult to add functionality or optimise performance, so react-chessboard was made.\r\n\r\n## Installation\r\n\r\n```\r\nnpm i react-chessboard\r\n```\r\n\r\n## Features\r\n\r\n### Current\r\n\r\n- Accessible Functions\r\n  - `chessboardRef.current.clearPremoves();`, takes optional boolean parameter `clearLastPieceColour` to allow/disallow further premoves of the last moved piece color. `Default: true`\r\n- Board Orientation Choice\r\n- Custom Actions\r\n  - getPositionObject\r\n  - onArrowsChange\r\n  - onDragOverSquare\r\n  - onMouseOutSquare\r\n  - onMouseOverSquare\r\n  - onPieceClick\r\n  - onPieceDragBegin\r\n  - onPieceDragEnd\r\n  - onPieceDrop\r\n  - onSquareClick\r\n  - onSquareRightClick\r\n- Customisable Board Styles\r\n- Customisable Pieces\r\n- Customisable Square Styles\r\n- Drag and Drop\r\n- Draw Arrows with Drag or Props\r\n- Mobile Compatibility\r\n- Moving Piece Animations\r\n- Optional Square Coordinates Notation\r\n- Position Control\r\n- Premoves\r\n- Responsive Board Width\r\n- TypeScript Support\r\n\r\n### Planned\r\n\r\n- Promotion Piece Select\r\n- Spare Pieces\r\n\r\n### Notes\r\n\r\n- Between version 0.0.3 and 0.0.4, onPieceDrop was changed to allow you to return a value of `true` or `false` depending on whether the move was successful or not.\r\n- If more than one board is rendered and draggable on a low end device, performance will struggle due to performance issues with react-dnd.\r\n- In the rare case that react-chessboard component is hot swapped out for another in its place, this will cause an issue with the CustomDragLayer. To prevent this, the react-chessboard component needs to be completely unmounted before being replaced.\r\n\r\n## Usage\r\n\r\n### Bare Minimum\r\n\r\n```jsx\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Chessboard id=\"BasicBoard\" />\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\n### Basic Example\r\n\r\n```jsx\r\nimport { useState } from \"react\";\r\nimport Chess from \"chess.js\";\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function PlayRandomMoveEngine() {\r\n  const [game, setGame] = useState(new Chess());\r\n\r\n  function makeAMove(move) {\r\n    const gameCopy = { ...game };\r\n    const result = gameCopy.move(move);\r\n    setGame(gameCopy);\r\n    return result; // null if the move was illegal, the move object if the move was legal\r\n  }\r\n\r\n  function makeRandomMove() {\r\n    const possibleMoves = game.moves();\r\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return; // exit if the game is over\r\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);\r\n    makeAMove(possibleMoves[randomIndex]);\r\n  }\r\n\r\n  function onDrop(sourceSquare, targetSquare) {\r\n    const move = makeAMove({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: \"q\", // always promote to a queen for example simplicity\r\n    });\r\n\r\n    // illegal move\r\n    if (move === null) return false;\r\n\r\n    setTimeout(makeRandomMove, 200);\r\n    return true;\r\n  }\r\n\r\n  return <Chessboard position={game.fen()} onPieceDrop={onDrop} />;\r\n}\r\n```\r\n\r\n### Advanced Examples\r\n\r\nFor more advanced code usage examples, please see example boards shown in [`example/src/boards`](https://github.com/Clariity/react-chessboard/tree/main/example/src/boards).\r\n\r\n### Props\r\n\r\n| Prop                          | Default Value                                                     | Options                                            | Description                                                                                                                                                                                                                                                                                                                                                                          |\r\n| ----------------------------- | ----------------------------------------------------------------- | -------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r\n| animationDuration             | number: 300                                                       |                                                    | Time in milliseconds for piece to slide to target square. Only used when the position is programmatically changed. If a new position is set before the animation is complete, the board will cancel the current animation and snap to the new position.                                                                                                                              |\r\n| areArrowsAllowed              | boolean: true                                                     | [true, false]                                      | Whether or not arrows can be drawn with right click and dragging.                                                                                                                                                                                                                                                                                                                    |\r\n| arePiecesDraggable            | boolean: true                                                     | [true, false]                                      | Whether or not all pieces are draggable.                                                                                                                                                                                                                                                                                                                                             |\r\n| arePremovesAllowed            | boolean: false                                                    | [true, false]                                      | Whether or not premoves are allowed.                                                                                                                                                                                                                                                                                                                                                 |\r\n| boardOrientation              | string: 'white'                                                   | ['white', 'black']                                 | The orientation of the board, the chosen colour will be at the bottom of the board.                                                                                                                                                                                                                                                                                                  |\r\n| boardWidth                    | number: 560                                                       |                                                    | The width of the board in pixels.                                                                                                                                                                                                                                                                                                                                                    |\r\n| clearPremovesOnRightClick     | boolean: true                                                     | [true, false]                                      | If premoves are allowed, whether or not to clear the premove queue on right click.                                                                                                                                                                                                                                                                                                   |\r\n| customArrowColor              | string: 'rgb(255,170,0)'                                          | rgb or hex string                                  | String with rgb or hex value to colour drawn arrows.                                                                                                                                                                                                                                                                                                                                 |\r\n| customArrows                  | string[][]: []                                                    | array of string arrays                             | Array of custom arrows to draw on the board. Each arrow within the array must be an array of length 2 with strings denoting the from and to square to draw the arrow e.g. [ ['a3', 'a5'], ['g1', 'f3'] ].                                                                                                                                                                            |\r\n| customBoardStyle              | object: {}                                                        | inline CSS styling                                 | Custom board style object e.g. { borderRadius: '5px', boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5 '}.                                                                                                                                                                                                                                                                                   |\r\n| customDarkSquareStyle         | object: { backgroundColor: '#B58863' }                            | inline CSS styling                                 | Custom dark square style object.                                                                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackend              | BackendFactory: undefined                                         |                                                    | Custom react-dnd backend to use instead of the one provided by react-chessboard.                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackendOptions       | any: undefined                                                    |                                                    | Options to use for the given custom react-dnd backend. See customDndBackend.                                                                                                                                                                                                                                                                                                         |\r\n| customDropSquareStyle         | object: { boxShadow: 'inset 0 0 1px 6px rgba(255,255,255,0.75)' } | inline CSS styling                                 | Custom drop square style object (Square being hovered over with dragged piece).                                                                                                                                                                                                                                                                                                      |\r\n| customLightSquareStyle        | object: { backgroundColor: '#F0D9B5' }                            | inline CSS styling                                 | Custom light square style object.                                                                                                                                                                                                                                                                                                                                                    |\r\n| customPieces                  | object: {}                                                        |                                                    | Custom pieces object where each key must match a corresponding chess piece (wP, wB, wN, wR, wQ, wK, bP, bB, bN, bR, bQ, bK). The value of each piece is a function that takes in some optional arguments to use and must return JSX to render. e.g. { wK: ({ isDragging: boolean, squareWidth: number, droppedPiece: string, targetSquare: string, sourceSquare: string }) => jsx }. |\r\n| customPremoveDarkSquareStyle  | object: { backgroundColor: '#A42323' }                            | inline CSS styling                                 | Custom premove dark square style object.                                                                                                                                                                                                                                                                                                                                             |\r\n| customPremoveLightSquareStyle | object: { backgroundColor: '#BD2828' }                            | inline CSS styling                                 | Custom premove light square style object.                                                                                                                                                                                                                                                                                                                                            |\r\n| customSquareStyles            | object: {}                                                        | inline CSS styling                                 | Custom styles for all squares.                                                                                                                                                                                                                                                                                                                                                       |\r\n| id                            | number: 0                                                         | [string, number]                                   | Board identifier, necessary if more than one board is mounted for drag and drop.                                                                                                                                                                                                                                                                                                     |\r\n| isDraggablePiece              | function: ({ piece, sourceSquare }) => true                       | returns [true, false]                              | Function called when a piece drag is attempted. Returns if piece is draggable.                                                                                                                                                                                                                                                                                                       |\r\n| getPositionObject             | function: (currentPosition) => {}                                 |                                                    | User function that receives current position object when position changes.                                                                                                                                                                                                                                                                                                           |\r\n| onArrowsChange                | function: (squares) => {}                                         |                                                    | User function is run when arrows are set on the board.                                                                                                                                                                                                                                                                                                                               |\r\n| onDragOverSquare              | function: (square) => {}                                          |                                                    | User function that is run when piece is dragged over a square.                                                                                                                                                                                                                                                                                                                       |\r\n| onMouseOutSquare              | function: (square) => {}                                          |                                                    | User function that is run when mouse leaves a square.                                                                                                                                                                                                                                                                                                                                |\r\n| onMouseOverSquare             | function: (square) => {}                                          |                                                    | User function that is run when mouse is over a square.                                                                                                                                                                                                                                                                                                                               |\r\n| onPieceClick                  | function: (piece) => {}                                           |                                                    | User function that is run when piece is clicked.                                                                                                                                                                                                                                                                                                                                     |\r\n| onPieceDragBegin              | function: (piece, sourceSquare) => {}                             |                                                    | User function that is run when piece is grabbed to start dragging.                                                                                                                                                                                                                                                                                                                   |\r\n| onPieceDragEnd                | function: (piece, sourceSquare) => {}                             |                                                    | User function that is run when piece is let go after dragging.                                                                                                                                                                                                                                                                                                                       |\r\n| onPieceDrop                   | function: (sourceSquare, targetSquare, piece) => true             | returns [true, false]                              | User function that is run when piece is dropped on a square. Must return whether the move was successful or not. This return value does not control whether or not the piece was placed (as that is controlled by the `position` prop) but instead controls premove logic.                                                                                                           |\r\n| onSquareClick                 | function: (square) => {}                                          |                                                    | User function that is run when a square is clicked.                                                                                                                                                                                                                                                                                                                                  |\r\n| onSquareRightClick            | function: (square) => {}                                          |                                                    | User function that is run when a square is right clicked.                                                                                                                                                                                                                                                                                                                            |\r\n| position                      | string: 'start'                                                   | ['start', FEN string, { e5: 'wK', e4: 'wP', ... }] | FEN string or position object notating where the chess pieces are on the board. Start position can also be notated with the string: 'start'.                                                                                                                                                                                                                                         |\r\n| showBoardNotation             | boolean: true                                                     | [true, false]                                      | Whether or not to show the file and rank co-ordinates (a..h, 1..8).                                                                                                                                                                                                                                                                                                                  |\r\n| snapToCursor                  | boolean: true                                                     | [true, false]                                      | Whether or not to center dragged pieces on the mouse cursor.                                                                                                                                                                                                                                                                                                                         |\r\n\r\n## Contributing\r\n\r\n1. Fork this repository\r\n2. Clone your forked repository onto your development machine\r\n   `git clone https://github.com/yourUsernameHere/react-chessboard.git`\r\n   `cd react-chessboard`\r\n3. Create a branch for your PR\r\n   `git checkout -b your-branch-name`\r\n4. Set upstream remote\r\n   `git remote add upstream https://github.com/Clariity/react-chessboard.git`\r\n5. Make your changes\r\n6. Test your changes using the example folder\r\n   `npm run build`\r\n   `cd example`\r\n   `npm start`\r\n7. Push your changes\r\n   `git add .`\r\n   `git commit -m \"feature/cool-new-feature\"`\r\n   `git push --set-upstream origin your-branch-name`\r\n8. Create pull request on GitHub\r\n9. Contribute again\r\n   `git checkout main`\r\n   `git pull upstream main`\r\n   `git checkout -b your-new-branch-name`\r\n\r\n## LICENSE\r\n\r\nMIT\r\n\r\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\r\n[version-badge]: https://img.shields.io/npm/v/react-chessboard.svg?style=flat-square\r\n[license-badge]: https://img.shields.io/npm/l/react-chessboard.svg?style=flat-square\r\n[prs]: https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github\r\n[version]: https://www.npmjs.com/package/react-chessboard\r\n[license]: https://github.com/Clariity/react-chessboard/blob/main/LICENSE\r\n","readmeFilename":"README.md","gitHead":"05c2771ff3f41795fde0113c4e322122e986062e","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@2.0.6","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-iGMPQXTd/OlJ/wovrRUDEjtPxAZiwRMfJot/Y/nvUqBqr4ZExR1GUfunlCf+bLGs5uvx/vs2sg/DLq6Tj6xdtw==","shasum":"52f1fe3a3be6874afd016bbc4fbebe14f215a56d","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-2.0.6.tgz","fileCount":20,"unpackedSize":483173,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD0HjXNA5PHv82Th2qtknz3EU5QiTIZO3um6gDsejIBDgIhAM1t8DYym0jw5t7QWSg/xTpy9H9Rr2q/SRVTYOipXCv3"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjszGhACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpwQA/+JNnKn+OxBw2adzZbQDjMmRujt/I/mm6hZpwflAfvzEHeWiIF\r\nLq+1CSgZF9slXHYxjOtlS4TVQLIXPnvJ2Db3G8o7b5tqHgfhWYACezllnoWD\r\nZhqkzK8qXL98RI4H4RZAuHjl1YVaSfEpdVzGtLUmN3sUsjCR6hsE6yBDe5pz\r\nh1jCfdbP1BRwuTj6w3e23xxFj2d4ULgv39/6knjcXpYzrbZtCJzZw+hAg76F\r\nrY+/0lCGgfmMwiQpTVItX6AgBGif7ss/VkRtdSEklCHIUx/Iv9C0Leb1gn9s\r\ntpD1yl708PCvBtRqJ84ygyzyva8aua4SqO6eU86URV0Dcwc0sYdH9nBqH75I\r\nD/ANH5Wm3KK9Tuce23VaqGmEtNxEXjzcfCxoElBEoi+wjFo7q7p0zUKbCEOG\r\nrFxtt7q4qZZw/XjwvnzXyZ2RAVINXQQQYX5HHRI1g25Hbc85sRRh7gC/RSzI\r\nnHkKzingf6t8VL7mxk2OmiVBpX8LssDdZC9GWZIbY30xvKdoizJsUf+5jYzc\r\n6koEqoSHnGQ9R9t9MUAf/cZCx5cdC1gfdsZeEyfy022QIimedjfh76GnGy46\r\nDt+bNoli4xuC6+FSj8dv6houiAd5eVH53jhuqFvwCuYpArP+f16Bcc1jneX4\r\njtiw/ZWPYgt37KTUlTPB3HAPeBaLUABp6+s=\r\n=jPKl\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_2.0.6_1672688033460_0.14264977620117447"},"_hasShrinkwrap":false},"2.0.7":{"name":"react-chessboard","version":"2.0.7","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"a42457adbc72eaedd1bfc862a31c243f146fe0f5","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@2.0.7","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-RUtLb6GlNGMyuA8kPvUHywDEAwoIu94+2dhx4dfY6vay1WzLj8aCGGqG8OlnUD2VjC2QLDb/x8RIy1WMeYl3pQ==","shasum":"551b1e17c5167a5a6b3769937b57e6635f99162e","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-2.0.7.tgz","fileCount":20,"unpackedSize":483221,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAuiXOGIaF8a3YUKjb5qb97SJFL0oJiMDznssDLcOQ0FAiAvDEnjvg7/z9zlKfqnxSKqYA5ugYGECNE6xVtiCEM1cg=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjs0JuACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo8+Q/9HDSUqZH6dSZSdeUphaaTMfoH5ka9vlH+MtuWE8HdEc1vFNN6\r\n3KNy9juyep/OSFVwgx5bVSjucQOFNRGDrnTnqIrttnvvMhYxV4IkIOlLoCSr\r\nGEeyllNZBvy/9nxuc87khC6p4XrMtdkYIvfqdRLuozrhUj+/pj1mptmpZEzL\r\nSmCIWsSNAzcDCJghkLMYnrZPnRb+dIKLJTWUYbG4Wt+vemNJJfXczFKXjd1v\r\nwLxpy0nI8QAqHobK5YU2DU3BskdR+x+vFWjWsr4GPEiZSmbS/vjU3nyH1FPo\r\ncEKw+gnCKCxSc95EIxli7dSGfwNxJeAHiRODIItUVRhyBhKUpAaiT5g+MkZ/\r\nt3hk7ShZxpLWuZcj4I8+Upvr+evi/etqkqRrs71IjdY1ttDiUtW4zSrMnQfG\r\nhWjE0VCN9ffDIxzXo1o9Vcl+1kEg+SqGY4BdGOW3JMrvnVog1j3sLLsDXUyg\r\niBwuAQn+SKE6mOFLRek/tZbTliBawlITgnLB6Hx+ean1R82bGc6Qo3Bn6JY7\r\nWn+EETJHzGrLTSkqZZFQeCZk0sZj+hnBqY+Xx0vZuH5oWXv2aY38sBbG3pf2\r\nS21nf+j0y7BtUUHzaklh6ziN2Kn2MjuDuvbYcmDsSSMDc7YfJ46CoMJrq4Da\r\n7dT7pur0HmaYuEmbP83lVaK1x9vgliKsJ6c=\r\n=6hMy\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_2.0.7_1672692334077_0.19404756388648647"},"_hasShrinkwrap":false},"2.0.8":{"name":"react-chessboard","version":"2.0.8","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"5346aa2a6647a4e6de4f7c66e65148927488adab","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@2.0.8","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-givrBujFwjVEaXQIQJFSWYApnqAvjxpLCBaLR/8jfypJP1lzaySjtsO0Pw2J8HWc37jKWghyIXmHfzivO5XAeQ==","shasum":"3d79d9f056cd2838295c295727acfe6c6f5c3bfd","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-2.0.8.tgz","fileCount":20,"unpackedSize":483310,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEBc08P0wjrLlD4ww6nom/5WgELTRV2DZ8pqLmpjg4XzAiEA3y4baYgwkwRXd24DUN8wpPWT7tZQIA60M78F2GSXIVg="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjxARDACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrW3Q/+KTSDTMZKSKfvqsmOX3gnQorWtnTIsaKOMqRqLQS/8rcfWgc3\r\neTlf3A+SUB5UyzKZXm6Orf3dfK4q1v3IGDBSpZowfD3x+9xSDHqVS7cdyn6A\r\nLYY1gJOLnd5P8fUZwY0rHE/s3HMWpXSzxIaNazEWxZMetThV7ecHq0S0fN0v\r\ncBBCu/eT1Ly4kqP5M/2QDFMqnd572Y2AGUNeEqA87xlpB5bWv04HKv6QMvR1\r\nsZzuc+JfGOXVlMwMZdqJTrSgKZDNbqtRn7++Ecdn8PgeCuBC4vhJkCJWEoqr\r\nXrHkhWFVToTtU8s8sh1uJGNDzEBYuF+PFwwJubr1TVXK54jqQMeFZ8f0QV90\r\noXppyM0b/31nfRKM506KJBqCv7cD0bYMUvawlLiOnVsAKZFW7rL+JApKGC4v\r\nXB9tXNlooLiREVVJn+7jpeO3pb+SXUbpUHzxG5nJkiTZGKBHiFdl3t8j1GXc\r\nXY95Kd0CP83zTISvNo4XGXuSDtxIRffnaHeTo9pVDSigl+/h9SGRV03Ew/2+\r\nJTPcWBpGJ5giduPcflogRyah3KAtpAWVPlnDZCxTfuvHGC/IL6DZM4Ia/GWV\r\nyxHT54BOvcVq5td+pMUvWfxYlbLJC1imVnHqAZO2xgtxmoN33en1g9IVOwm9\r\n51NV2HEmCs1cLah9LD7345yNVoAWt3KpmC0=\r\n=HFp5\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_2.0.8_1673790531594_0.606177852475906"},"_hasShrinkwrap":false},"2.1.0":{"name":"react-chessboard","version":"2.1.0","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"c9dd9d1d4312f42846c8e724a43f26b82207f5f3","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@2.1.0","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-XKMcXvHJ/zsGJCdPetrS2Iq+ZV6rSnHanTCABtk012A5jVejXM/TfM9koFbL1NSzT5j+AYnBRUArxjm6ZYj92w==","shasum":"2d426f9d8866352788b5ac1d0832cba3c9f9d474","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-2.1.0.tgz","fileCount":20,"unpackedSize":485694,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHiGAR3u/GtaALM5mRJU8Ce/Tc29cbKhkLZ/HuTXtRWVAiABJu+lGDFzcHkItFbu6OKtCYurYcoV4Z4Rmf8uHAxG5Q=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj82dcACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpybA//U4Jwm2QZD9JZ4m2lx1uyYcUuv04IC0J+IvzdTMyeRxk8HpzP\r\nUSbdZLe5Ym8y9LcUXrIlsH6eSFX5YWjxdDKFIGkHWbMW6Xf0o4Bp2yO40XTp\r\n7++lCC/XRmpNvUy8AAxhZWMb0G6clIP/CfcxtNdLjSs6ImIT7uuHgERMCCen\r\nnDQdkuS6n7gkBj2Uuw97V2GsmDZPJHfLUlsoLIfHlGsz3tdq8tXKsvzkf2NY\r\nOU5fPaqAVXjUAYZ2R1z44QpTnjjZAyTe8WG9CGjLlLNjhDOr68sAeSIho3m7\r\n3/MuybdVH0OZJ6zWSuEBTzvWGCDavUZt8ZsL/uIQcjX/7g2XhvacUQIRPqso\r\nBe5RHSzZF/rllNbylYpklZa+BAlGlDBYMKE5ZPDMj/tl1Rymyn5Lv1pz7Iky\r\n9eI/yD74DgUzdab3z5WljT3RvQHQeByAIKYP+1o5jUumV265UKlGNLVj7zqi\r\nX9FesekFe37tjLbxX6g5L3Zr2F9Ewtbv9ufvoaUzSs8EWpFc3bV1jhgxjZ2W\r\nIlkq3zABZODo0a1KRYu69nkDNJnfogAKIoT0see01QCl5ry2BXlOMP3panyX\r\nuSbsGMaz6MpPfNP6i5YT6EI8W5ey7cz8ObELq/mpYg70X1U5Hp/LiD7nvmJw\r\nXPyHSERQLNdrTumWAT8rV8pViYoK03ItWXo=\r\n=KTo8\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_2.1.0_1676896092696_0.3484345842524401"},"_hasShrinkwrap":false},"2.1.1":{"name":"react-chessboard","version":"2.1.1","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"775b7b3af87a5ba6bdc7083f7be2f64536629887","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@2.1.1","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-gMydDcU1V61Lzc7+RpJJsyJUGtFWzJyp3zLaQQgj1C8MckSW28FBIF+UMLVSIIeT8YHNRqgSHVXTizm8hDjIUg==","shasum":"a2593b718bab48ff2c0d70880bd527bbdcf52fc5","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-2.1.1.tgz","fileCount":20,"unpackedSize":485856,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCVoPB1w8Gjq/TGx0u9I7oObLdoF2ReRMUTjLVt+l016gIgQO9h4/9Kj2CNpPf+6Yu1UCtwMoJKT25ejZPvpT6FNbM="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkD1DYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq+dQ//RrVBRRfsI9h60mLUbSTdnw1kqajNdL1ydsyzin+EGngf+ZWY\r\n7VE3q2F82UbQwW8NBDy7xoDqg4krzGkVBle6lw4WXfBp2umVGlrzPhKAyGtJ\r\nk3iBO6WKw1BUp37laqCmhPRbrdALqf3q9Irms209LIMndMa0iPVHS40ECiLX\r\nlE8WfbwAEqSu9vlFjz8P18bQpj4YeQpcMXcXIVR/PYW6t3Jsd6NiiHoEDMLt\r\nuujn46fcZMRt9j4n1Z7Ea9yRBUy29RyT1R6rdSldB7+I//cxkB07eP5lccsL\r\novtnV+4PMnjwLTKXvN5XOXr3h6GDrBS6vJ4JFn5FNS+Q90nkDF9zu9p0DE3p\r\ngnmue/kqnHIqLaBn0cEUqryRw/Xp5Y+y803V+4GJ53VQnmBNEXqGIFgCz2eX\r\n9YI/Ur4wtpoCYv6SkbH8sOrEheaN6VEob/6keIhvTMjt9lpMmzsw7QL+dZGS\r\nJHw3R4v+QwiuyYmKqiyFEIDMNhupLW0ibG4PQ8hSqf8B3cDjftusttW1Xb1G\r\nDOC9ijuKv7JclL6BORpRBU1EFbZuUdU7jjfBmyqDZfO3wM16A74/8/jGR/QD\r\nljOsZf5AM5VjFdWkuk1YOLffNVrPS3IP5G4kUmq2u1xT3XVNbcwD1e/YxjOY\r\na0z0L+rXrKkac4tXKdpDq88QrMJjuEAxrRg=\r\n=kxSW\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_2.1.1_1678725336120_0.9442700950671168"},"_hasShrinkwrap":false},"2.1.2":{"name":"react-chessboard","version":"2.1.2","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"852a34559a1ae17dd394abe9a2961ae32db86015","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@2.1.2","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-3cHveibDWo084BmLjAhdcPVy0FZoeOEAmhj03oj8ps1fihAM3+RIycxc92ZwbjqBXokBQ+sHDJLVVnSmZsg8wQ==","shasum":"85da656b0a513b2361fcb3943deece81b9b31d9f","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-2.1.2.tgz","fileCount":20,"unpackedSize":485871,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAy4K6lxGUubYAeCT6uKHu8YBUqOa0OEW+buKG/tOGq+AiEA/yEq3K2mfSzZ1FBLzJeUfCAPodBvvBmIb7+8LAYvuhM="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkEdPXACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqU2Q/+OtivJU/SujX1YRPbfe2bnoqdg1b3Y/5g/X6I+bq0cHA0f/DA\r\nAEDF9abQ2gyr1mr7UtH66uIRtZkbExqlDsIWPbBuPLIr4nXraUdJMAkh7c8z\r\nOichKn/Z905ofJ8Qew9tQEhkDN8gzZ57CPPi5iwTu8ESpm/Imgdo6RQeCSph\r\nohpiA+v3lU5RviD4AG8RRdBqtO5+8O3uaskb0+ndnF/SUd9khs/mb89unIB8\r\n+UtZjGzMfur4ZmJ1f4dgxCrr9YWmAG0X1AY18mXVHyaZLMQjTUJXHo/4NPJy\r\nNt/8TZLQnAghl5lhD/3H9xntfoFnoxqsBXb3jf6yaRl5ZoVC4tT8jAmamX0Q\r\nPHnPR7KDMvz65hYr7Ka+ZyY/sydNsm/m9OwvlOy8oTko4mCAgubMZLM30a2z\r\n3Wn1LPeY3+xWmxw7Ef0WAppTI+nCAOgAfO8Y6EHdINxNfKXgegenGf62Y7hq\r\n4uaq9TH6ZqhU2zug9bOeg53Ve3o4StfvLKp9EzgxGQuDmqPmWeTQz7z4TzkV\r\nbT26/XZcKvGtgkxDKnkOXgd8kAc4b3q7PHNR3+aD3lPTneDijuNOEgO4OcMC\r\ndumtElrD3IWZ2ual8EzEx9Sw9x90mmNDC6T7KZt8HnwGdnLKhfDkRJgIt1jo\r\nTx2Hv6o5eN9SR90OY8VsMd1igTQ68jkMRkk=\r\n=scBm\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_2.1.2_1678889942848_0.3858765573142855"},"_hasShrinkwrap":false},"2.1.3":{"name":"react-chessboard","version":"2.1.3","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"50f42e8087a70e23d9b3e34cce62bccffae70eff","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@2.1.3","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-2l9sx6N7PagTFkaLyfWXMzTDSPm73DL8u9Qpv/3ZoqOo2ZG8BGw1fEV38mpczHl3i9FNJkGfCM3WPsA7J/e84A==","shasum":"02de51e7cfbbfa3177a016cec7cd87ba4c5288be","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-2.1.3.tgz","fileCount":20,"unpackedSize":485871,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGnxpiVwA1ViLP3KsqvTgTFdxHZoF9TEg+9BFqSHyf0JAiEArUZsFJcS4lgi6bvzNeMQ5k9zLFcGoidgROR7eFqaiDs="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkOs9WACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpBxA/9Hy44mIQqtlAl6XFGFvhyU0wGgGNJYzSTZT1/ppnBqq8RQbgt\r\nNsmkCTkSihkVCuG+r3AHTjQWo6RERji46fGsMuwtikpXoU0D3/QkWp4XBQXO\r\np6dKVXzDO6yUonIJuSdpsJ8WvkJ1pqdF7ovjRop24TX6jAqWDzYULR8hPhgR\r\nqZphywvGX/CuU/LCBjv5ekmi4dpc68knkp0DzAZj+4b77USq1d7z8Rze6X4W\r\nudi7ILRnvEee3unwDogaD52Afh7FhzrKeHqjdkBgKdpeK0OES9rq65BKH3C0\r\nYqbW9Lu7ZwIXahgcXBBsaISbiOLzo8s+3aNO0jEi2G2c6NfLzXv/S2ZHaiwy\r\nRtrm0QtqsCmOSRDMd2HZpdjNGP0XFW3k2sL09u2dJY1Smoms5FlzJlCAfseU\r\no/GC69u9IXgNLw8AoYxH6VFJhfyenvDLmmtDlww8zzG/rCOgibsgeZ25xL0x\r\nFD2DnQ01PbvreXnQJ3iYp/PZ3HIWy2KwQ/SYUnlJM3etU6mwz+NVAl6N3vS2\r\naI6EfilPCM7jcHSppih8JTMMa/epRdGhUPbQEfpBENIp7rzPa3vutCj2Lh2d\r\nXKpf12KBTpn9LUfhdhvBR4p8SjwICIAQhs1cgYcmHw5g+6O61jGV6WrkhSio\r\ndP1hv4CJT0I4Q96xJoMnIByi+p/h2BYRmSs=\r\n=l2GV\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_2.1.3_1681575766383_0.9169107699989967"},"_hasShrinkwrap":false},"3.0.0":{"name":"react-chessboard","version":"3.0.0","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"66806d41eb412f36ddc3ef47a0010cb807b87e9c","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@3.0.0","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-w9e/gAn2PtPE/iWuIsY8pbM5OHtj0xHYZjqcoVPc+Q2NeWJ7eKUk7nBrRNov6vsODXrDSjgzcS3PGZdqiAIqag==","shasum":"6879a2ef3bbe01fdba7b40cea4a7aeb9214afc92","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-3.0.0.tgz","fileCount":20,"unpackedSize":487396,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDQfd9HGWvSzYL/1WVwkjQ4PTYsH78SO28gH175AS97UwIgCjwT0BVeT3scnKahUhGWLZLKR+iwOQAyNG9WhqKCRTI="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_3.0.0_1686824386922_0.8891522645104888"},"_hasShrinkwrap":false},"3.0.1":{"name":"react-chessboard","version":"3.0.1","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"672f0f6a9a6708c793262e44b55f5eb3526a90f9","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@3.0.1","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-PMkoOTvx92NFM48+/UzTifgC1e5B2tS2m3dnFhKrQ8wRtOJ/CgOPKS/3hqrdjlwEtFKuHNYp04brP16ylkosWw==","shasum":"c7a8bc86f81d2184f2d93bfc91ceaa2dd32b5d54","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-3.0.1.tgz","fileCount":24,"unpackedSize":510457,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDIpFxSaoBUnpMOKv2OIbELJMQaDYZZVyTwRM9Ju1VLWAiBnV6bZRRkh9KNrrDBoNOW6L4Vc2RsCMIKN4FTAHFZr0w=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_3.0.1_1687256875302_0.3044089903561844"},"_hasShrinkwrap":false},"3.1.0":{"name":"react-chessboard","version":"3.1.0","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@rollup/plugin-terser":"^0.4.3","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"ac02cde45b353384a145d7463bf3526ae337531c","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@3.1.0","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-CBWQOr63coJsKuNztx6u8SmJJeJzmE64njLjna78P6v/BzafdOyAyvDnuWCfiM9s9CIZoWgbRV4on+2hXtiq9A==","shasum":"a3c2b3756f40bb3932954df5ebf0850685279c2a","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-3.1.0.tgz","fileCount":24,"unpackedSize":244717,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICA1eDZ7CXBj9IcVjsftkWcffHwuYYUTZSxaCcBElPf8AiAmvNYpBCNaBubuIaAFD1GQLAcPGOH/lQZvuHjdH8qrXA=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_3.1.0_1687258465574_0.6360696946041009"},"_hasShrinkwrap":false},"3.1.1":{"name":"react-chessboard","version":"3.1.1","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@rollup/plugin-terser":"^0.4.3","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"984ba11515d18ea0a9c50a6fbcdfb55732e5961a","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@3.1.1","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-elrWvRYrL/tjbhvunTkdaTvEfp8kCCDDVdFIwnyScLR8H+4MO2nftGean2u/jacNpsgf88eM7Cj6jo1QMfW92A==","shasum":"5781110a151338b595ef7b448e5516bca3962927","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-3.1.1.tgz","fileCount":24,"unpackedSize":244793,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCZzk1XGPWF9M687kuDsuZ6/7QvoBPD0AikWKKfwNIIXwIhALIsjdzZmqKRvOpFZ0/Xpc4fkFTSZNRC9vmCsQSA486Z"}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_3.1.1_1688936951389_0.9918966966599576"},"_hasShrinkwrap":false},"3.2.0":{"name":"react-chessboard","version":"3.2.0","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@rollup/plugin-terser":"^0.4.3","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"881d43ce17a69e07381bc79112594279f6963869","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@3.2.0","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-CvHfR/Jlg0wwYzXINML2TA3wLGaVeJJJFNOR6Lxx0A0HWx52b4AI15nm9lkZ5jjP8qSAMZfeL4N6BN1A1JwugQ==","shasum":"3e13cd196df7088592f727e7c746dd42ac57ccc9","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-3.2.0.tgz","fileCount":24,"unpackedSize":245973,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC2sT80GfAf2dqCZobXspj+2ZhHd1E5YF3RHy+Mok7NgAIgHXK1kV4g7IqkJ8QhS6Zfl+nPD5ojLqUtWYj1Jq6Euzo="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_3.2.0_1688939662813_0.3988162697097666"},"_hasShrinkwrap":false},"4.0.0":{"name":"react-chessboard","version":"4.0.0","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@rollup/plugin-terser":"^0.4.3","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"9e311988b54a70e789f2cb547b88517e34e0f754","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@4.0.0","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-+5Tt8L23evqCxMccFdY8bLg0VxYBqi9NAL9mMK2CLyP9yFdN3KIGWGxfX143WOTgLxsRABuL/hydzdvutbop2w==","shasum":"4e9ec082ecc1071c19490fd9536f6751d9708d22","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-4.0.0.tgz","fileCount":24,"unpackedSize":246665,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBKzTFHCsJkDZm2PujC9IUCFyRSMmogFLZd8c+Hxw4s4AiEAkG0lnGOigdj1ihQQUnQ+w32sbIu7UIYQzkyQa2yK9Dg="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_4.0.0_1689602363615_0.03430983472098226"},"_hasShrinkwrap":false},"4.0.1":{"name":"react-chessboard","version":"4.0.1","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@rollup/plugin-terser":"^0.4.3","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"e2bd293168bbb3901de562e0c818d6eafebb8529","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@4.0.1","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-eJ5HDg+Nz7ZowVQaDY6xryZ9x7JSesOzNRIj5YPW4erUqZrV+WBK18OByUoFxI8l9ae59QASwOEgysWDhw2UCA==","shasum":"b8d888b28c9998330e6ab45e9777bd95d94741af","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-4.0.1.tgz","fileCount":24,"unpackedSize":246737,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIF157lHMDKMWOydHhnFWUmGDjCY9owDZj9fTSEOALHTyAiB1pzzt6Sq2VgF8tXtIRrfk5N34EYHn4ztK8iTpyFwhTQ=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_4.0.1_1690191044328_0.18255454634385115"},"_hasShrinkwrap":false},"4.1.0":{"name":"react-chessboard","version":"4.1.0","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@rollup/plugin-terser":"^0.4.3","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"f909ae49c725923c9cc8638c83714257a2e39585","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@4.1.0","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-jk8XBzH7VLWcN3c0po+lrWbRSS/P5WemE5JVPh/Eki9gg/gm3dxe4gaNtJqPWYbbXT2wyRhK2Hh7D7GG98bJfQ==","shasum":"ff7594b75b2ca056ed9f8bcc5782113753e99de5","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-4.1.0.tgz","fileCount":24,"unpackedSize":246771,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIB0EUYOg43nqZy6Bf2INgdkQOZ5Jbe75pZR+F7Lu8I3gAiEA3KWfWjEjH/f/3W33u3J5yhLO3LRPFR3rBhh2M0z7Zjg="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_4.1.0_1693325624591_0.2711138904168917"},"_hasShrinkwrap":false},"4.2.0":{"name":"react-chessboard","version":"4.2.0","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@rollup/plugin-terser":"^0.4.3","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"05aed4967ed53a4b86a93a894d4f4ff581bfd0cf","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@4.2.0","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-8SgCifZ+N1LD6ipG8n4VYFEFoINqpcgAI3Uj5ewHEaQgC4OSzHureWB98SAGWhRFicTn2Jqn0yn4h6LvWy2KhA==","shasum":"0699b2312822b290b0b3fc12664a0e616d0a23a9","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-4.2.0.tgz","fileCount":24,"unpackedSize":246768,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEzPRbt97NcRkvh5NQ3Kd1GzPaI6Bq+lE+kzLTZTsCGyAiEA32okeO5TTZMHmz9MY5C6N4BLv8u9nEBX+vHs12O4naM="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_4.2.0_1695134842811_0.892100192450112"},"_hasShrinkwrap":false},"4.2.1":{"name":"react-chessboard","version":"4.2.1","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@rollup/plugin-terser":"^0.4.3","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"868740ac2c6c80dd9d2f3984c04c8ebbb828f254","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@4.2.1","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-3Ythc/apMQulYCSX5YorIEusVlYVnXZumSeTr22x8xXPnXi3jDyunLOqQw66Q5BdDpmkEJ2GBCwZqtp9X+4okQ==","shasum":"438b04005e9bffca57d306140f3ce94b4e4b536a","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-4.2.1.tgz","fileCount":24,"unpackedSize":246882,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGGTyMK5t508Y4tNYPwaccs2plnWSpPKq5pd/I5jfMaTAiEAihqITRMLAHuZK35kt5vYRGdE0YS7L5HMAYGzTOMuSj4="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_4.2.1_1695667933910_0.7228185352058487"},"_hasShrinkwrap":false},"4.2.2":{"name":"react-chessboard","version":"4.2.2","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@rollup/plugin-terser":"^0.4.3","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"1ab2ee456cda107d8fa32710793b1c9a186af6d0","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@4.2.2","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-K0Jx8CDMJJGKabgAIxm1TRIRtQt+pR51OydtyeFUcaQW2qIsQkJH8fnD+L3zP/nT29y2kr2F51lXEbB+tBekEw==","shasum":"8e8ed5f9968b9383f2525ba892c834536c417b18","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-4.2.2.tgz","fileCount":24,"unpackedSize":246838,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIG8aTDwoTfYOS9D9t+tkiNj6bE1o5rHG08vCg4gR7wWeAiA5QzSEunUZHZCRdQ0I4ec61DMu5sdnDCroFh2z0vul/g=="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_4.2.2_1696851501071_0.8140356648925036"},"_hasShrinkwrap":false},"4.2.3":{"name":"react-chessboard","version":"4.2.3","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@rollup/plugin-terser":"^0.4.3","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"a6073f53a65824817238f23b28de191d9fa23b86","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@4.2.3","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-aJ1HYVq0zdv8S1a3s+e4mlJ7/lUfYd2o24ojr+zoUQA/3iqu0x7EANDv/WdIDUWprK+Ykoqkerty97GwiZwYtw==","shasum":"cdb9e70d6830fda4d754339e101809cfba9dca6f","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-4.2.3.tgz","fileCount":24,"unpackedSize":246846,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBDWG9RD53ZS5wiI4+k7+1YdfnQjNrsTEU3eKOACCOKkAiEA9+v98YV5ZTKmXSB10mDaOZ07OYLLpGtpoqY6V/yItC4="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_4.2.3_1697211339901_0.007069974353027142"},"_hasShrinkwrap":false},"4.3.0":{"name":"react-chessboard","version":"4.3.0","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@rollup/plugin-terser":"^0.4.3","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"a7eb0fdadf5cdad1f156ed420e11a4440d1b661c","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@4.3.0","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-CwD5i2crVmYQ2aS2bSc9nOO3X7AH087fU6MvKeAg+lHT4LsH3yoZJ0hrIFknghdP+RL+SyAZJhqXb0aJJO83Og==","shasum":"cb4454494c1f6f69634627ecfaa94829022fdec8","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-4.3.0.tgz","fileCount":24,"unpackedSize":257448,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDfk7EUcJmUivqX6LHNuTU10pj7U9hivyWz+yhImZj2kAIhAKAxR9ofIIkjC9ufKOMU+hhr2V84xkdQN3DUa6+SLDWt"}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_4.3.0_1698330620253_0.07583198976548511"},"_hasShrinkwrap":false},"4.3.1":{"name":"react-chessboard","version":"4.3.1","description":"The React Chessboard Library used at ChessOpenings.co.uk. Inspired and adapted from the unmaintained Chessboard.jsx.","author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"license":"MIT","main":"dist/index.js","module":"dist/index.esm.js","types":"dist/index.d.ts","scripts":{"build":"rm -rf /dist && rollup -c","test":"echo \"Error: no test specified\" && exit 1","storybook":"start-storybook -p 6006","build-storybook":"build-storybook","serve-storybook":"serve storybook-static"},"keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"devDependencies":{"@babel/core":"^7.20.7","@rollup/plugin-commonjs":"^24.0.0","@rollup/plugin-node-resolve":"^15.0.1","@rollup/plugin-terser":"^0.4.3","@storybook/addon-actions":"^6.5.15","@storybook/addon-essentials":"^6.5.15","@storybook/addon-interactions":"^6.5.15","@storybook/addon-links":"^6.5.15","@storybook/builder-webpack4":"^6.5.15","@storybook/manager-webpack4":"^6.5.15","@storybook/react":"^6.5.15","@storybook/testing-library":"^0.0.13","@types/node":"^18.11.18","@types/react":"^18.0.26","@types/react-dom":"^18.0.10","babel-loader":"^8.3.0","chess.js":"^0.12.0","react":"^18.2.0","react-dom":"^18.2.0","rollup":"^3.9.1","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-typescript2":"^0.34.1","typescript":"^4.9.4"},"peerDependencies":{"react":">=16.14.0","react-dom":">=16.14.0"},"dependencies":{"react-dnd":"^16.0.1","react-dnd-html5-backend":"^16.0.1","react-dnd-touch-backend":"^16.0.1"},"gitHead":"804b75eab0e203d0072329fba4a08c1125f74eff","bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"homepage":"https://github.com/Clariity/react-chessboard#readme","_id":"react-chessboard@4.3.1","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-2rFZLkWdEkUhhQ6Omr/Uymt4ki2t/7Ztg7U7zigbP8ivKlSok4eiAOIIkKquHt8UIOTueB6S/mwsCgqeEauxfg==","shasum":"22bc96536186a7917c873f74ba12aa78d48fdc6b","tarball":"https://registry.npmjs.org/react-chessboard/-/react-chessboard-4.3.1.tgz","fileCount":24,"unpackedSize":257516,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCcab15N07k6Nkj+qDBLxXOnX37bdzgPuanZq28t2+UCwIgQT4UHcTErWAGvzZRaSaNM8xfhD/0bs2UqQOJlmybJN4="}]},"_npmUser":{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"},"directories":{},"maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chessboard_4.3.1_1698664490211_0.3071367158108613"},"_hasShrinkwrap":false}},"readme":"<div align=\"center\" markdown=\"1\">\r\n\r\n# [react-chessboard](https://react-chessboard.vercel.app/)\r\n\r\n<img src=\"./media/chessboard.png\" alt=\"react chessboard\" width=\"300\">\r\n\r\n## The React Chessboard Library used at [ChessOpenings.co.uk](https://chessopenings.co.uk)\r\n\r\n### Inspired and adapted from the unmaintained [chessboardjsx](https://github.com/willb335/chessboardjsx)\r\n\r\n[![Pull Requests][prs-badge]][prs] [![Version][version-badge]][version] [![MIT License][license-badge]][license]\r\n\r\n</div>\r\n\r\n## What is react-chessboard?\r\n\r\nreact-chessboard is a React component that provides chessboard functionality to your application. The Chess game logic that controls the board should be independent to the board, using a library such as [Chess.js](https://github.com/jhlywa/chess.js). An example of these two working together is shown [in the example below](#basic-example). For interactive examples visit [https://react-chessboard.vercel.app/](https://react-chessboard.vercel.app/).\r\n\r\n[ChessOpenings.co.uk](https://chessopenings.co.uk) was originally built utilising the [chessboardjsx](https://github.com/willb335/chessboardjsx) library. With [chessboardjsx](https://github.com/willb335/chessboardjsx) being unmaintained, it made it difficult to add functionality or optimise performance, so react-chessboard was made.\r\n\r\n## Installation\r\n\r\n```\r\nnpm i react-chessboard\r\n```\r\n\r\n## Examples\r\n\r\n[Storybook](https://react-chessboard.vercel.app/)\r\n\r\n## Features\r\n\r\n### Current\r\n\r\n- Accessible Functions\r\n  - `chessboardRef.current.clearPremoves();`, takes optional boolean parameter `clearLastPieceColour` to allow/disallow further premoves of the last moved piece color. `Default: true`\r\n- Board Orientation Choice\r\n- Custom Actions\r\n  - getPositionObject\r\n  - onArrowsChange\r\n  - onDragOverSquare\r\n  - onMouseOutSquare\r\n  - onMouseOverSquare\r\n  - onPieceClick\r\n  - onPieceDragBegin\r\n  - onPieceDragEnd\r\n  - onPieceDrop\r\n  - onPromotionCheck\r\n  - onSquareClick\r\n  - onSquareRightClick\r\n- Customisable Board Styles\r\n- Customisable Pieces\r\n- Customisable Square Styles\r\n- Drag and Drop\r\n- Draw Arrows with Drag or Props\r\n- Mobile Compatibility\r\n- Moving Piece Animations\r\n- Optional Square Coordinates Notation\r\n- Position Control\r\n- Premoves\r\n- Promotion Piece Select\r\n- Responsive Board Width\r\n- TypeScript Support\r\n\r\n## Usage\r\n\r\n### Bare Minimum\r\n\r\n```jsx\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Chessboard id=\"BasicBoard\" />\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\n### Basic Example\r\n\r\n#### IMPORTANT: Examples use the current stable release of chess.js. As of writing this, chess.js v1.0.0 is still in beta. These examples use chess.js ^0.12.0\r\n\r\n```jsx\r\nimport { useState } from \"react\";\r\nimport Chess from \"chess.js\";\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function PlayRandomMoveEngine() {\r\n  const [game, setGame] = useState(new Chess());\r\n\r\n  function makeAMove(move) {\r\n    const gameCopy = { ...game };\r\n    const result = gameCopy.move(move);\r\n    setGame(gameCopy);\r\n    return result; // null if the move was illegal, the move object if the move was legal\r\n  }\r\n\r\n  function makeRandomMove() {\r\n    const possibleMoves = game.moves();\r\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0)\r\n      return; // exit if the game is over\r\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);\r\n    makeAMove(possibleMoves[randomIndex]);\r\n  }\r\n\r\n  function onDrop(sourceSquare, targetSquare) {\r\n    const move = makeAMove({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: \"q\", // always promote to a queen for example simplicity\r\n    });\r\n\r\n    // illegal move\r\n    if (move === null) return false;\r\n    setTimeout(makeRandomMove, 200);\r\n    return true;\r\n  }\r\n\r\n  return <Chessboard position={game.fen()} onPieceDrop={onDrop} />;\r\n}\r\n```\r\n\r\n### Advanced Examples\r\n\r\nFor more advanced code usage examples, please see example boards shown in [`Storybook`](https://react-chessboard.vercel.app/).\r\n\r\n### Props\r\n\r\n| Prop                          | Default Value                                                                                                                                                                                                                                                                     | Options                                            | Description                                                                                                                                                                                                                                                                                                                                                                          |\r\n| ----------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r\n| allowDragOutsideBoard         | boolean: false                                                                                                                                                                                                                                                                    | [true, false]                                      | Whether or not to allow pieces to be dragged outside the board.                                                                                                                                                                                                                                                                                                                      |\r\n| animationDuration             | number: 300                                                                                                                                                                                                                                                                       |                                                    | Time in milliseconds for piece to slide to target square. Only used when the position is programmatically changed. If a new position is set before the animation is complete, the board will cancel the current animation and snap to the new position.                                                                                                                              |\r\n| areArrowsAllowed              | boolean: true                                                                                                                                                                                                                                                                     | [true, false]                                      | Whether or not arrows can be drawn with right click and dragging.                                                                                                                                                                                                                                                                                                                    |\r\n| arePiecesDraggable            | boolean: true                                                                                                                                                                                                                                                                     | [true, false]                                      | Whether or not all pieces are draggable.                                                                                                                                                                                                                                                                                                                                             |\r\n| arePremovesAllowed            | boolean: false                                                                                                                                                                                                                                                                    | [true, false]                                      | Whether or not premoves are allowed.                                                                                                                                                                                                                                                                                                                                                 |\r\n| autoPromoteToQueen            | boolean: false                                                                                                                                                                                                                                                                    | [true, false]                                      | Whether or not to automatically promote pawn to queen.                                                                                                                                                                                                                                                                                                                               |\r\n| boardOrientation              | string: 'white'                                                                                                                                                                                                                                                                   | ['white', 'black']                                 | The orientation of the board, the chosen colour will be at the bottom of the board.                                                                                                                                                                                                                                                                                                  |\r\n| boardWidth                    | number: 560                                                                                                                                                                                                                                                                       |                                                    | The width of the board in pixels.                                                                                                                                                                                                                                                                                                                                                    |\r\n| clearPremovesOnRightClick     | boolean: true                                                                                                                                                                                                                                                                     | [true, false]                                      | If premoves are allowed, whether or not to clear the premove queue on right click.                                                                                                                                                                                                                                                                                                   |\r\n| customArrowColor              | string: 'rgb(255,170,0)'                                                                                                                                                                                                                                                          | rgb or hex string                                  | String with rgb or hex value to colour drawn arrows.                                                                                                                                                                                                                                                                                                                                 |\r\n| customArrows                  | [Square, Square, string?]\\[\\]                                                                                                                                                                                                                                                     | array of string arrays                             | Array where each element is a tuple containing two Square values (representing the 'from' and 'to' squares) and an optional third string element for the arrow color e.g. [ ['a3', 'a5', 'red'], ['g1', 'f3'] ].                                                                                                                                                                     |\r\n| customBoardStyle              | object: {}                                                                                                                                                                                                                                                                        | inline CSS styling                                 | Custom board style object e.g. { borderRadius: '5px', boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5 '}.                                                                                                                                                                                                                                                                                   |\r\n| customDarkSquareStyle         | object: { backgroundColor: '#B58863' }                                                                                                                                                                                                                                            | inline CSS styling                                 | Custom dark square style object.                                                                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackend              | BackendFactory: undefined                                                                                                                                                                                                                                                         |                                                    | Custom react-dnd backend to use instead of the one provided by react-chessboard.                                                                                                                                                                                                                                                                                                     |\r\n| customDndBackendOptions       | any: undefined                                                                                                                                                                                                                                                                    |                                                    | Options to use for the given custom react-dnd backend. See customDndBackend.                                                                                                                                                                                                                                                                                                         |\r\n| customDropSquareStyle         | object: { boxShadow: 'inset 0 0 1px 6px rgba(255,255,255,0.75)' }                                                                                                                                                                                                                 | inline CSS styling                                 | Custom drop square style object (Square being hovered over with dragged piece).                                                                                                                                                                                                                                                                                                      |\r\n| customLightSquareStyle        | object: { backgroundColor: '#F0D9B5' }                                                                                                                                                                                                                                            | inline CSS styling                                 | Custom light square style object.                                                                                                                                                                                                                                                                                                                                                    |\r\n| customPieces                  | object: {}                                                                                                                                                                                                                                                                        |                                                    | Custom pieces object where each key must match a corresponding chess piece (wP, wB, wN, wR, wQ, wK, bP, bB, bN, bR, bQ, bK). The value of each piece is a function that takes in some optional arguments to use and must return JSX to render. e.g. { wK: ({ isDragging: boolean, squareWidth: number, droppedPiece: string, targetSquare: string, sourceSquare: string }) => jsx }. |\r\n| customPremoveDarkSquareStyle  | object: { backgroundColor: '#A42323' }                                                                                                                                                                                                                                            | inline CSS styling                                 | Custom premove dark square style object.                                                                                                                                                                                                                                                                                                                                             |\r\n| customPremoveLightSquareStyle | object: { backgroundColor: '#BD2828' }                                                                                                                                                                                                                                            | inline CSS styling                                 | Custom premove light square style object.                                                                                                                                                                                                                                                                                                                                            |\r\n| customSquare                  | ElementType: \"div\"                                                                                                                                                                                                                                                                |                                                    | Custom renderer for squares. Can also use an html element.                                                                                                                                                                                                                                                                                                                           |\r\n| customSquareStyles            | object: {}                                                                                                                                                                                                                                                                        | inline CSS styling                                 | Custom styles for all squares.                                                                                                                                                                                                                                                                                                                                                       |\r\n| id                            | number: 0                                                                                                                                                                                                                                                                         | [string, number]                                   | Board identifier, necessary if more than one board is mounted for drag and drop.                                                                                                                                                                                                                                                                                                     |\r\n| isDraggablePiece              | function: ({ piece, sourceSquare }) => true                                                                                                                                                                                                                                       | returns [true, false]                              | Function called when a piece drag is attempted. Returns if piece is draggable.                                                                                                                                                                                                                                                                                                       |\r\n| getPositionObject             | function: (currentPosition) => {}                                                                                                                                                                                                                                                 |                                                    | User function that receives current position object when position changes.                                                                                                                                                                                                                                                                                                           |\r\n| onArrowsChange                | function: (squares) => {}                                                                                                                                                                                                                                                         |                                                    | User function is run when arrows are set on the board.                                                                                                                                                                                                                                                                                                                               |\r\n| onDragOverSquare              | function: (square) => {}                                                                                                                                                                                                                                                          |                                                    | User function that is run when piece is dragged over a square.                                                                                                                                                                                                                                                                                                                       |\r\n| onMouseOutSquare              | function: (square) => {}                                                                                                                                                                                                                                                          |                                                    | User function that is run when mouse leaves a square.                                                                                                                                                                                                                                                                                                                                |\r\n| onMouseOverSquare             | function: (square) => {}                                                                                                                                                                                                                                                          |                                                    | User function that is run when mouse is over a square.                                                                                                                                                                                                                                                                                                                               |\r\n| onPieceClick                  | function: (piece) => {}                                                                                                                                                                                                                                                           |                                                    | User function that is run when piece is clicked.                                                                                                                                                                                                                                                                                                                                     |\r\n| onPieceDragBegin              | function: (piece, sourceSquare) => {}                                                                                                                                                                                                                                             |                                                    | User function that is run when piece is grabbed to start dragging.                                                                                                                                                                                                                                                                                                                   |\r\n| onPieceDragEnd                | function: (piece, sourceSquare) => {}                                                                                                                                                                                                                                             |                                                    | User function that is run when piece is let go after dragging.                                                                                                                                                                                                                                                                                                                       |\r\n| onPieceDrop                   | function: (sourceSquare, targetSquare, piece) => true                                                                                                                                                                                                                             | returns [true, false]                              | User function that is run when piece is dropped on a square. Must return whether the move was successful or not. This return value does not control whether or not the piece was placed (as that is controlled by the `position` prop) but instead controls premove logic.                                                                                                           |\r\n| onPromotionCheck              | function: (sourceSquare, targetSquare, piece) => (((piece === \"wP\" && sourceSquare[1] === \"7\" && targetSquare[1] === \"8\") \\|\\| (piece === \"bP\" && sourceSquare[1] === \"2\" && targetSquare[1] === \"1\")) && Math.abs(sourceSquare.charCodeAt(0) - targetSquare.charCodeAt(0)) <= 1) | returns [true, false]                              | User function that is run when piece is dropped. Must return whether the move results in a promotion or not.                                                                                                                                                                                                                                                                         |\r\n| onSquareClick                 | function: (square) => {}                                                                                                                                                                                                                                                          |                                                    | User function that is run when a square is clicked.                                                                                                                                                                                                                                                                                                                                  |\r\n| onSquareRightClick            | function: (square) => {}                                                                                                                                                                                                                                                          |                                                    | User function that is run when a square is right clicked.                                                                                                                                                                                                                                                                                                                            |\r\n| position                      | string: 'start'                                                                                                                                                                                                                                                                   | ['start', FEN string, { e5: 'wK', e4: 'wP', ... }] | FEN string or position object notating where the chess pieces are on the board. Start position can also be notated with the string: 'start'.                                                                                                                                                                                                                                         |\r\n| promotionDialogVariant        | string: 'default':                                                                                                                                                                                                                                                                | ['default', 'vertical', 'modal']                   | Style of promotion dialog.                                                                                                                                                                                                                                                                                                                                                           |\r\n| promotionToSquare             | string or null                                                                                                                                                                                                                                                                    | ['a1', 'a2', ..., 'h8', null]                      | The square to promote a piece to. Must be passed when promotion dialog is manually shown.                                                                                                                                                                                                                                                                                            |\r\n| showBoardNotation             | boolean: true                                                                                                                                                                                                                                                                     | [true, false]                                      | Whether or not to show the file and rank co-ordinates (a..h, 1..8).                                                                                                                                                                                                                                                                                                                  |\r\n| showPromotionDialog           | boolean: false                                                                                                                                                                                                                                                                    | [true, false]                                      | Whether or not to manually show the promotion dialog.                                                                                                                                                                                                                                                                                                                                |\r\n| snapToCursor                  | boolean: true                                                                                                                                                                                                                                                                     | [true, false]                                      | Whether or not to center dragged pieces on the mouse cursor.                                                                                                                                                                                                                                                                                                                         |\r\n|  |\r\n\r\n## Contributing\r\n\r\n1. Fork this repository\r\n2. Clone your forked repository onto your development machine\r\n   ```\r\n   git clone https://github.com/yourUsernameHere/react-chessboard.git\r\n   cd react-chessboard\r\n   ```\r\n3. Create a branch for your PR\r\n   ```\r\n   git checkout -b your-branch-name\r\n   ```\r\n4. Set upstream remote\r\n   ```\r\n   git remote add upstream https://github.com/Clariity/react-chessboard.git\r\n   ```\r\n5. Make your changes\r\n6. Test your changes by running storybook\r\n   ```\r\n   npm run storybook\r\n   ```\r\n7. Push your changes\r\n   ```\r\n   git add .\r\n   git commit -m \"feature/cool-new-feature\"\r\n   git push --set-upstream origin your-branch-name\r\n   ```\r\n8. Create pull request on GitHub\r\n9. Contribute again\r\n   ```\r\n   git checkout main\r\n   git pull upstream main\r\n   git checkout -b your-new-branch-name\r\n   ```\r\n\r\n## LICENSE\r\n\r\nMIT\r\n\r\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\r\n[version-badge]: https://img.shields.io/npm/v/react-chessboard.svg?style=flat-square\r\n[license-badge]: https://img.shields.io/npm/l/react-chessboard.svg?style=flat-square\r\n[prs]: https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github\r\n[version]: https://www.npmjs.com/package/react-chessboard\r\n[license]: https://github.com/Clariity/react-chessboard/blob/main/LICENSE\r\n","maintainers":[{"name":"moroshko","email":"michael.moroshko@gmail.com"},{"name":"ryangregorydev","email":"ryangregory.dev@outlook.com"}],"time":{"modified":"2023-10-30T11:14:50.555Z","created":"2015-06-08T14:11:25.200Z","0.0.1":"2015-06-08T14:11:25.200Z","0.0.2":"2021-08-25T17:48:25.346Z","0.0.3":"2021-08-25T18:13:47.765Z","0.0.4":"2021-09-02T18:17:09.979Z","0.0.5":"2021-09-20T15:57:31.237Z","0.0.6":"2021-09-24T17:37:15.877Z","0.0.7":"2021-09-25T13:37:02.535Z","0.0.8":"2021-10-02T11:01:49.254Z","0.0.9":"2021-10-02T14:31:33.500Z","0.0.10":"2021-10-02T14:54:36.659Z","0.0.11":"2021-10-11T19:04:46.858Z","0.0.12":"2021-10-11T19:41:42.705Z","0.0.13":"2021-10-15T16:18:21.854Z","0.0.14":"2021-10-15T20:18:08.596Z","0.0.15":"2021-10-16T15:10:10.902Z","0.0.16":"2021-10-24T12:20:36.770Z","0.0.17":"2021-11-22T14:01:21.687Z","0.0.18":"2021-11-22T18:23:17.664Z","1.0.0":"2021-11-22T19:28:07.987Z","1.0.1":"2021-12-25T15:11:50.492Z","1.0.2":"2021-12-28T18:55:16.570Z","1.0.3":"2022-02-09T09:54:46.311Z","1.0.4":"2022-02-10T16:01:15.130Z","1.0.5":"2022-02-14T16:33:13.179Z","1.1.0":"2022-02-19T13:05:16.375Z","1.2.0":"2022-02-20T21:00:13.198Z","1.2.1":"2022-02-21T19:32:55.922Z","1.2.2":"2022-03-06T14:37:16.650Z","1.2.3":"2022-04-23T10:55:05.138Z","1.2.4":"2022-05-16T15:19:46.281Z","1.2.5":"2022-06-06T17:40:13.734Z","1.2.6":"2022-07-09T10:47:24.111Z","1.2.7":"2022-08-02T21:20:02.841Z","1.2.8":"2022-08-03T20:56:04.011Z","1.3.0":"2022-08-03T21:08:32.376Z","1.3.1":"2022-11-20T16:08:20.736Z","2.0.0":"2023-01-02T17:49:38.486Z","2.0.1":"2023-01-02T18:11:45.879Z","2.0.2":"2023-01-02T18:40:39.098Z","2.0.3":"2023-01-02T18:43:38.022Z","2.0.4":"2023-01-02T19:17:21.445Z","2.0.5":"2023-01-02T19:28:45.225Z","2.0.6":"2023-01-02T19:33:53.631Z","2.0.7":"2023-01-02T20:45:34.270Z","2.0.8":"2023-01-15T13:48:51.761Z","2.1.0":"2023-02-20T12:28:12.869Z","2.1.1":"2023-03-13T16:35:36.424Z","2.1.2":"2023-03-15T14:19:03.051Z","2.1.3":"2023-04-15T16:22:46.691Z","3.0.0":"2023-06-15T10:19:47.085Z","3.0.1":"2023-06-20T10:27:55.462Z","3.1.0":"2023-06-20T10:54:25.776Z","3.1.1":"2023-07-09T21:09:11.551Z","3.2.0":"2023-07-09T21:54:23.051Z","4.0.0":"2023-07-17T13:59:23.804Z","4.0.1":"2023-07-24T09:30:44.561Z","4.1.0":"2023-08-29T16:13:44.758Z","4.2.0":"2023-09-19T14:47:23.039Z","4.2.1":"2023-09-25T18:52:14.226Z","4.2.2":"2023-10-09T11:38:21.370Z","4.2.3":"2023-10-13T15:35:40.184Z","4.3.0":"2023-10-26T14:30:20.486Z","4.3.1":"2023-10-30T11:14:50.367Z"},"homepage":"https://github.com/Clariity/react-chessboard#readme","keywords":["react","react.js","chess","chess.js","chessboard","chess board","react-chessboard","react chessboard","react chess board","react-dnd","chessboard component","drag and drop"],"repository":{"type":"git","url":"git+https://github.com/Clariity/react-chessboard.git"},"author":{"name":"Ryan Gregory","email":"ryangregory.dev@outlook.com"},"bugs":{"url":"https://github.com/Clariity/react-chessboard/issues"},"license":"MIT","readmeFilename":"README.md"}