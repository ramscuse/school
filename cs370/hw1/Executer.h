#ifndef __EXECUTER__
#define __EXECUTER__

float get_running_ratio();

int get_iteration_no(int rand);
// This function takes in a random value generated by rand()
// and returns a value between 50 (inclusive) and 100 (exclusive), which should be used as the
// number of iterations.

int get_arr_size(int rand);
// This function takes in a random value generated by rand() and
// returns a value between 100 (inclusive) and 150 (exclusive), which should be used as the array
// size for the array in one iteration. This function should be called once for each iteration.

char get_arr_val(int rand);
// This function takes in a random value generated by rand() and
// generates a value between 65 (inclusive) and 90 (inclusive), which is then explicitly converted into
// a character and returned to the calling function. This assignment uses only upper case characters.

float ratio(char *arr, int size, int *maxCountPointer);
// This function takes the populated array, itâ€™s size and the address to maxCount variable used in get_running_ratio().
// It then counts the number of vowels and consonants, and returns the ratio of vowels/consonants.
// Also, it checks if the current value in address pointed by maxCountPointer is lesser than count of
// vowels in the current array (it means that the maximum number of vowels found in iterations so
// far is less than the current iteration). If yes, then it places the value of count in the address pointed
// by maxCountPointer.

#endif